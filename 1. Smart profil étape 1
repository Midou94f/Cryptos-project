# Chargement des biblioth√®ques n√©cessaires
library(openxlsx)
library(crayon)

# D√©finition des styles
question_style <- blue$bold            # Questions en bleu gras
info_style <- white$italic            # Notes informatives en blanc italique
warning_style <- red$bold            # Avertissements en rouge gras
success_style <- green$bold          # Messages de succ√®s en vert gras
highlight_style <- yellow$bold       # Points importants en jaune gras
info_secondary_style <- cyan$italic  # Informations secondaires en cyan italique
error_style <- red$bold$underline    # Erreurs critiques en rouge gras soulign√©
section_title_style <- magenta$bold$underline  # Titres de sections en magenta gras soulign√©

# Texte d'introduction
intro_text <- c(
  section_title_style("\nCryptoWise Copilote : Votre conseiller √©thique, responsable et p√©dagogique üöÄ\n"),
  success_style("Bienvenue sur CryptoWise Copilote, votre alli√© pour d√©couvrir et investir de mani√®re √©clair√©e dans le monde fascinant des cryptomonnaies !\n"),
  info_style("CryptoWise Copilote est bien plus qu'une application d'aide √† la d√©cision d'investissement. "),
  info_style("C'est un compagnon personnalis√© qui combine √©thique, p√©dagogie et innovation pour vous accompagner avec transparence et responsabilit√© dans vos choix financiers.\n\n"),
  section_title_style("Fonctionnalit√© phare : SmartProfile\n"),
  highlight_style("Gr√¢ce √† SmartProfile, nous analysons votre type d'investisseur en combinant :\n"),
  info_secondary_style("- Vos pr√©f√©rences de risque\n"),
  info_secondary_style("- Vos revenus et votre capacit√© financi√®re\n"),
  info_secondary_style("- Votre niveau de connaissance g√©n√©rale en finance et en cryptos\n"),
  info_style("Cette analyse attribuera √† chaque utilisateur une personnalit√© parmi 27 profils types, chacun d√©fini par des caract√©ristiques pr√©cises. Ces personnalit√©s refl√®tent les r√©sultats de notre analyse approfondie.\n\n"),
  section_title_style("Les fonctionnalit√©s accessibles et disponibles :\n"),
  highlight_style("1. CryptoAcademy : "),
  info_secondary_style("D√©veloppez vos comp√©tences gr√¢ce √† une plateforme √©ducative immersive, id√©ale pour les novices qui souhaitent d√©couvir ce magnifique univers.\n"),
  highlight_style("2. P√©piteHunter : "),
  info_secondary_style("Gr√¢ce √† notre outil unique qui analyse les tendances de recherche sur le web, identifiez rapidement les cryptos susceptibles de d√©clencher un run. "),
  info_secondary_style("Pour √©viter les FOMO et prendre des d√©cisions √©clair√©es sur les opportunit√©s √† ne pas manquer.\n"),
  highlight_style("3. RegAlert : "),
  info_secondary_style("Suivez les actualit√©s r√©glementaires et anticipez les impacts sur vos investissements.\n"),
  highlight_style("4. BitcoinPulse : "),
  info_secondary_style("Analysez la position actuelle du Bitcoin par rapport √† son historique.\n"),
  highlight_style("5. AltcoinTracker : "),
  info_secondary_style("Identifiez les moments o√π les altcoins dominent ou o√π Bitcoin reprend la t√™te.\n"),
  highlight_style("6. MarketScope : "),
  info_secondary_style("Visualisez le march√©, les cryptos √† forte capitalisation, suivez les tendances g√©n√©rales du march√©.\n"),
  highlight_style("7. CryptoFocus : "),
  info_secondary_style("Analysez en d√©tail une cryptomonnaie sp√©cifique pour prendre des d√©cisions √©clair√©es.\n\n"),
  success_style("CryptoWise Copilote, c'est l'outil parfait pour apprendre √† investir avec confiance, √©thique et strat√©gie.\n"),
  section_title_style("Note explicative sur l'acc√®s aux fonctionnalit√©s selon le profil utilisateur\n"),
  info_style("Chez CryptoWise, nous adoptons une d√©marche responsable et p√©dagogique pour accompagner chaque utilisateur en fonction de son profil type. Voici les r√®gles d'acc√®s √† nos fonctionnalit√©s :\n"),
  highlight_style("1. Profils √† qui il sera d√©conseill√© d'entrer sur le march√© :\n"),
  info_secondary_style("Animaux associ√©s : Dodo ü¶§, Singe hurleur üêí, H√©risson ü¶î, Lapin üêá, Ch√®vre des falaises üêê\n"),
  info_style("Ces utilisateurs pr√©sentent une combinaison de faible capacit√© d‚Äôinvestissement, faible ou moyen niveau de connaissances et app√©tit pour le risque. "),
  info_style("Pour prot√©ger ces profils d‚Äôune prise de risque inconsid√©r√©e et √©viter des pertes importantes, ils pourront avoir acc√®s uniquement √† CryptoAcademy. "),
  info_style("L'objectif serait de leur permettre de renforcer leurs connaissances avant de consid√©rer un investissement √©ventuel.\n\n"),
  highlight_style("2. Profils pouvant investir avec des efforts suppl√©mentaires :\n"),
  info_secondary_style("Animaux associ√©s : Canard ü¶Ü, Loutre ü¶¶, Dauphin üê¨, Castor ü¶´, Mangouste ü¶¶, Chameau üê™\n"),
  info_style("Ces utilisateurs disposent de capacit√©s financi√®res ou d‚Äôun app√©tit pour le risque mod√©r√©, mais un manque de connaissances peut freiner leur r√©ussite. "),
  info_style("Ils auront la possibilit√© de d√©bloquer l'acc√®s aux outils avanc√©s apr√®s avoir suivi les modules √©ducatifs propos√©s et r√©ussi les tests d'√©valuation. "),
  info_style("Cela leur permettrait d'investir en toute confiance et avec une meilleure ma√Ætrise du march√©.\n\n"),
  highlight_style("3. Profils experts et totalement capables d'investir :\n"),
  info_secondary_style("Animaux associ√©s : Aigle imp√©rial ü¶Ö, Tigre üêÖ, Loup gris üê∫, Lynx üê±, √âl√©phant üêò, Ours brun üêª, Faucon p√®lerin ü¶Ö\n"),
  info_style("Ces utilisateurs combinent une solide capacit√© d'investissement, des connaissances approfondies et un app√©tit pour le risque qui peut √™tre ma√Ætris√© et assum√©. "),
  info_style("Ils auront un acc√®s imm√©diat √† toutes les fonctionnalit√©s, sans restrictions, d√®s leur inscription.\n\n"),
  success_style("Conclusion :"),
  info_style("Notre approche garantit que chaque utilisateur dispose des outils adapt√©s √† son niveau. Vous progressez √† votre rythme avec des choix √©clair√©s et s√©curis√©s.\n\n")
)

# Texte de bienvenue
welcome_message_text <- c(
  success_style("--- Bienvenue dans l'univers de CryptoWise Copilote ! ---\n"),
  info_style("Merci d'avoir accept√© de commencer ce voyage avec nous.\n"),
  info_style("Nous allons explorer ensemble votre potentiel d'investissement et obtenir des informations cl√©s sur votre profil.\n\n"),
  
  section_title_style("Voici comment cela va se d√©rouler :\n"),
  
  highlight_style("1. Construire votre profil d'investisseur :\n"),
  info_secondary_style(" - Vous r√©pondrez √† une s√©rie de questions pour analyser vos pr√©f√©rences de risque, vos capacit√©s financi√®res, et vos connaissances g√©n√©rales.\n"),
  info_secondary_style(" - √Ä la fin de cette √©tape, nous obtiendrons des premi√®res informations essentielles pour d√©terminer votre profil type. "),
  info_secondary_style("Cependant, pour √©tablir votre profil animal comportemental d'investisseur, il faudra compl√©ter la deuxi√®me √©tape.\n\n"),
  
  highlight_style("2. Tester vos connaissances :\n"),
  info_secondary_style(" - Cette √©tape permettra en effet d'√©valuer vos connaissances actuelles afin de mieux comprendre votre niveau.\n"),
  info_secondary_style(" - Ce n‚Äôest qu‚Äôapr√®s cette √©tape que vous d√©couvrirez en d√©tail votre comportement d'investisseur et l'annimal qui sommeil en vous.\n\n"),
  
  info_style("Bas√© sur ce r√©sultat final, nous pourrons d√®s lors vous proposer les diff√©rentes fonctionnalit√©s de notre application adapt√©es √† votre profil.\n")
)


#####################################################################################################################
# Fonction pour d√©marrer l'application
#####################################################################################################################

start_app <- function() {
  # Afficher le texte d'introduction avec style
  cat(intro_text, sep = "\n")
  
  # Poser la premi√®re question avec validation stricte
  repeat {
    cat(question_style("\nSouhaitez-vous r√©volutionner votre approche d‚Äôinvestissement et de d√©couverte des cryptos ? (oui/non) : "))
    response <- tolower(readline())
    if (response %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (response == "oui") {
    # Afficher le message de bienvenue avec style
    cat(welcome_message_text, sep = "\n")
    
    # Poser la deuxi√®me question avec validation stricte
    repeat {
      cat(question_style("\n√ätes-vous pr√™t √† commencer la premi√®re √©tape ? (oui/non) : "))
      start_response <- tolower(readline())
      if (start_response %in% c("oui", "non")) break
      cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
    }
    
    if (start_response == "oui") {
      cat(success_style("\nParfait, lan√ßons l'application et commen√ßons ! üöÄ\n"))
    } else {
      cat(warning_style("\nD'accord, vous pouvez revenir quand vous serez pr√™t. √Ä bient√¥t !\n"))
      return(NULL)
    }
  } else {
    cat(warning_style("\nOh non, nous sommes trop tristes de ne pas pouvoir initier ce voyage ensemble. Revenez quand vous voulez !\n"))
    return(NULL)
  }
  
  # Variables pour stocker les r√©ponses
  state <- list(
    prenom = NULL,
    age = NULL,
    risk = NULL,
    revenus_mensuels = NULL,
    epargne_totale = NULL,
    investissement = NULL,
    horizon = NULL
  )
  
  profile_validated <- FALSE
  
  while (!profile_validated) {
    current_question <- "prenom"
    
    # Boucle principale du questionnaire
    while (TRUE) {
      if (current_question == "prenom") {
        cat(question_style("\nQuel est votre pr√©nom ? "))
        state$prenom <- readline()
        
        while (nchar(state$prenom) == 0 || grepl("[0-9\\W]", state$prenom)) {
          cat(warning_style("\nVeuillez entrer un pr√©nom valide (lettres uniquement, sans caract√®res sp√©ciaux) : "))
          state$prenom <- readline()
        }
        current_question <- "age"
      }
      
      if (current_question == "age") {
        cat(question_style("\nQuel est votre √¢ge ? (entrez uniquement le chiffre ou 0 pour revenir √† la question pr√©c√©dente) "))
        state$age <- readline()
        
        if (state$age == "0") {
          current_question <- "prenom"
          next
        }
        
        while (!grepl("^[0-9]+$", state$age)) {
          cat(warning_style("\nVeuillez entrer uniquement des chiffres : "))
          state$age <- readline()
        }
        state$age <- as.numeric(state$age)
        
        if (state$age < 18) {
          cat(warning_style("\nD√©sol√©, vous n'avez pas l'√¢ge requis pour utiliser notre plateforme.\n"))
          cat(info_style("Revenez lorsque vous aurez 18 ans r√©volus.\n"))
          return(NULL)
        }
        current_question <- "risk"
      }
      
      
      ################################################################
      # Partie RISK
      ################################################################
      
      if (current_question == "risk") {
        
        # Flag pour d√©tecter si l'utilisateur veut revenir √† la question pr√©c√©dente (age)
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nComment vous percevez-vous face au risque ?\n"))
          cat("1. ", question_style("Risquophobe\n"))
          cat("2. ", question_style("Risquophile\n"))
          cat("3. ", question_style("Neutre au risque\n"))
          cat(info_style("Votre choix (1-3 ou 0 pour revenir √† la question pr√©c√©dente) : "))
          
          state$risk <- readline()
          
          # G√©rer le retour en arri√®re si l'utilisateur tape 0
          if (state$risk == "0") {
            current_question <- "age"
            user_return <- TRUE
            break  # on sort de la boucle repeat
          }
          
          # Validation des choix
          while (!state$risk %in% c("1", "2", "3")) {
            cat(warning_style("Veuillez entrer 1, 2 ou 3 : "))
            state$risk <- readline()
          }
          
          # ---------------------------------------------------------
          # Cas 1 : Risquophobe
          if (state$risk == "1") {
            cat(info_style("\nEn choisissant 'risquophobe', cela signifie que vous √™tes √† l'aise uniquement avec des placements comportant une perte ou un gain maximal d'environ 5%.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(warning_style("\nATTENTION : Les Cryptomonnaies ne garantissent pas le capital. L'investissement en cryptomonnaies comporte des risques √©lev√©s non adapt√©s aux personnes risquophobes.\n"))
              cat(info_style("Votre profil de risque n'est donc pas adapt√© au march√© des cryptomonnaies. Cependant, voici une liste de placements alternatifs :\n"))
              cat(info_secondary_style("- Comptes d'√©pargne : Rendement esp√©r√© inf√©rieur √† 2%, risque tr√®s faible.\n"))
              cat(info_secondary_style("- Obligations d'√âtat : Rendement esp√©r√© inf√©rieur √† 4%, risque faible.\n"))
              cat(info_secondary_style("- Fonds en euros (assurances-vie) : Rendement esp√©r√© inf√©rieur √† 3%, risque tr√®s faible.\n"))
              cat(info_secondary_style("- Obligations index√©es sur l'inflation : Rendement esp√©r√© inf√©rieur √† 3,5%, risque faible.\n"))
              cat(info_secondary_style("- ETF obligataires ou peu volatils : Rendement esp√©r√© inf√©rieur √† 5%, risque faiblement mod√©r√©.\n"))
              cat(info_style("\nNote : Les rendements des produits cit√©s d√©pendent fortement des conditions de march√© et des contrats associ√©s.\n"))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† contacter votre banquier ou tout autre professionnel afin d'explorer des alternatives de placement pour s√©curiser votre capital.\n"))
                return(NULL)
              } else {
                break  # on sort du repeat => risk valid√©
              }
            }
          }
          
          # ---------------------------------------------------------
          # Cas 2 : Risquophile
          if (state$risk == "2") {
            cat(info_style("\nEn choisissant 'risquophile', cela signifie que vous √™tes pr√™t √† tol√©rer des fluctuations importantes, pouvant d√©passer 20%, en qu√™te de gains √©lev√©s.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(warning_style("\nVotre profil risque est compatible avec le march√© des cryptomonnaies. Cependant, ce march√© est hautement sp√©culatif et comparable √† :\n"))
              cat(info_secondary_style("- Le trading √† effet de levier : Rendement esp√©r√© non plafonn√©, risque tr√®s √©lev√©.\n"))
              cat(info_secondary_style("- Les options ou produits d√©riv√©s √† court terme : Rendement esp√©r√© non plafonn√©, risque tr√®s √©lev√©.\n"))
              cat(info_secondary_style("- Les investissements dans des start-ups : Rendement esp√©r√© sup√©rieur √† 15% sur le long terme, risque fort.\n"))
              cat(info_secondary_style("\nExemple concret des risques li√©s aux cryptos :\n"))
              cat(warning_style("- Exemple : Bitcoin (BTC) : Rendement annuel moyen de 200% sur 5 ans, mais baisse de plus de 80% entre 2017 et 2018.\n"))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† explorer d'autres options.\n"))
                return(NULL)
              } else {
                break
              }
            }
          }
          
          # ---------------------------------------------------------
          # Cas 3 : Neutre au risque
          if (state$risk == "3") {
            cat(info_style("\nEn choisissant 'neutre au risque', cela signifie que vous √™tes dispos√© √† accepter une fluctuation mod√©r√©e, avec des pertes ou des gains autour de 10%.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(info_style("\nVotre profil de risque est partiellement compatible avec le march√© des cryptomonnaies. Cependant, il reste important de noter que ce march√© est extr√™mement volatil.\n"))
              cat(info_secondary_style("- ETF diversifi√©s : Rendement esp√©r√© inf√©rieur √† 10%, risque mod√©r√©.\n"))
              cat(info_secondary_style("- Fonds √©quilibr√©s : Rendement esp√©r√© inf√©rieur √† 8%, risque mod√©r√©.\n"))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† explorer d'autres options.\n"))
                return(NULL)
              } else {
                break
              }
            }
          }
          
          # ---------------------------------------------------------
          # V√©rifier si l'utilisateur souhaite r√©ajuster son profil ou quitter
          if (confirm == "non") {
            cat(question_style("\nSouhaitez-vous r√©ajuster votre profil de risque ou quitter le module d'investissement ?\n"))
            cat("1. ", question_style("R√©ajuster le profil\n"))
            cat("2. ", question_style("Quitter le module\n"))
            action <- readline()
            while (!action %in% c("1", "2")) {
              cat(warning_style("Veuillez entrer 1 ou 2 : "))
              action <- readline()
            }
            if (action == "2") {
              cat(info_style("\nMerci pour votre visite.\n"))
              return(NULL)
            } else {
              next
            }
          }
          
          # On a valid√© => on sort de la boucle repeat
          break
        } # fin repeat
        
        # Si l'utilisateur veut revenir √† "age"
        if (user_return) {
          next
        } else {
          current_question <- "revenus_mensuels"
          next
        }
      }
      
      
      ##################################################
      ######################### Partie Recvenus Mensuels
      ##################################################
      
      if (current_question == "revenus_mensuels") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nDonnez-nous une estimation √† vue de nez de vos revenus totaux nets mensuels.\n"))
          cat(info_style("(Incluez vos revenus du travail mais aussi tout autre revenu comme les allocations, investissements, etc.)\n"))
          cat(info_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$revenus_mensuels <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$revenus_mensuels == "0") {
            current_question <- "risk"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$revenus_mensuels)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$revenus_mensuels <- readline()
          }
          
          state$revenus_mensuels <- as.numeric(state$revenus_mensuels)
          revenus_annuels <- state$revenus_mensuels * 12
          cat(success_style(sprintf("\nD'apr√®s nos estimations, vos revenus annuels sont de %s euros.\n", green(sprintf("%.2f", revenus_annuels)))))
          
          if (revenus_annuels < 19000) {
            cat(warning_style("\nATTENTION: Vos revenus indiquent que vous n'avez peut-√™tre pas de s√©curit√© financi√®re suffisante.\n"))
            cat(info_style("Le march√© des cryptos est extr√™mement risqu√© et demande une base financi√®re solide.\n"))
            cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "non") {
              cat(info_style("\nMerci pour votre visite. Revenez lorsque vous aurez une meilleure s√©curit√© financi√®re.\n"))
              return(NULL)
            }
          }
          
          # √âtape valid√©e, passer √† l'√©pargne
          current_question <- "epargne_totale"
          break
        }
        
        if (user_return) next
      }
      
      ######################### Partie √âpargne #########################
      if (current_question == "epargne_totale") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\n√Ä vue de nez, combien estimez-vous votre √©pargne totale disponible en euros ?\n"))
          cat(info_style("*Cela inclut votre √©pargne liquide (comptes courants) et moyennement liquide (PEA, etc.), mais exclut les actifs immobilis√©s comme l'immobilier.\n"))
          cat(info_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$epargne_totale <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$epargne_totale == "0") {
            current_question <- "revenus_mensuels"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$epargne_totale)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$epargne_totale <- readline()
          }
          
          state$epargne_totale <- as.numeric(state$epargne_totale)
          epargne_precaution <- state$revenus_mensuels * 6
          cat(success_style(sprintf("\nEn r√®gle g√©n√©rale, il est conseill√© d'avoir une √©pargne de pr√©caution √©quivalente √† six mois de revenus. Cette √©pargne n√©cessaire serait de %s euros.\n", green(sprintf("%.2f", epargne_precaution)))))
          
          if (state$epargne_totale < epargne_precaution) {
            cat(warning_style("\nATTENTION: Votre √©pargne est inf√©rieure √† l'√©pargne de pr√©caution recommand√©e.\n"))
            cat(info_style("Investir dans les cryptos est d√©conseill√© dans cette situation.\n"))
            cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "non") {
              cat(info_style("\nMerci pour votre visite. Revenez lorsque votre √©pargne sera suffisante.\n"))
              return(NULL)
            }
          } else {
            montant_investissable <- state$epargne_totale - epargne_precaution
            cat(success_style(sprintf("\nD'apr√®s nos estimations, vous avez la capacit√© d'investir jusqu'√† %s euros.\n", green(sprintf("%.2f", montant_investissable)))))
          }
          
          # √âtape valid√©e, passer √† l'investissement
          current_question <- "investissement"
          break
        }
        
        if (user_return) next
      }
      
      ######################### Partie Investissement #########################
      if (current_question == "investissement") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nCombien souhaitez-vous investir en cryptomonnaies (en euros) ?\n"))
          cat(info_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$investissement <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$investissement == "0") {
            current_question <- "epargne_totale"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$investissement)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$investissement <- readline()
          }
          
          state$investissement <- as.numeric(state$investissement)
          
          if (state$investissement > (state$epargne_totale - epargne_precaution)) {
            cat(warning_style("\nATTENTION: Le montant d√©passe votre capacit√© d'investissement.\n"))
            cat(info_style("Cela pourrait vous exposer √† des risques financiers importants.\n"))
            cat(question_style("Souhaitez-vous r√©ajuster le montant d√©sir√© ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "oui") {
              next  # Revenir √† la question investissement
            } else {
              current_question <- "horizon"
              break
            }
          } else {
            cat(success_style("\nTr√®s bien, le montant d√©sir√© correspond √† votre capacit√© d'investissement.\n"))
            cat(info_style("Nous passons √† la question suivante.\n"))
            current_question <- "horizon"
            break
          }
        }
        
        if (user_return) next
      }
      
      #############################################
      # Horizon d'investissement
      #############################################
      
      if (current_question == "horizon") {
        while (TRUE) { # Boucle pour relancer la question si n√©cessaire
          # Message indicatif g√©n√©ral
          cat(info_style("\n*Rappel th√©orique important : Investir √† court terme est plus risqu√© car les march√©s financiers sont plus volatils sur de courtes p√©riodes. "))
          cat(info_style("Cela laisse moins de temps pour compenser d'√©ventuelles pertes et rend l‚Äôinvestissement plus vuln√©rable aux fluctuations impr√©visibles. "))
          cat(info_style("√Ä l‚Äôinverse, un horizon long permet de lisser les rendements et de b√©n√©ficier des cycles de march√© pour r√©duire le risque.\n"))
          
          # Question sur l'horizon d'investissement
          cat(question_style("\nQuel est votre horizon d'investissement ?\n"))
          cat("1. ", question_style("Long terme (> 1 an)\n"))
          cat("2. ", question_style("Moyen long terme (6 mois)\n"))
          cat("3. ", question_style("Moyen court terme (1 mois)\n"))
          cat("4. ", question_style("Court terme (1 semaine)\n"))
          cat("5. ", question_style("Tr√®s court terme (journalier)\n"))
          cat(question_style("Votre choix (1-5 ou 0 pour revenir √† la question pr√©c√©dente) : "))
          state$horizon <- readline()
          
          if (state$horizon == "0") {
            current_question <- "investissement"
            break
          }
          
          while (!state$horizon %in% c("1", "2", "3", "4", "5")) {
            cat(warning_style("Veuillez entrer un chiffre entre 1 et 5 : "))
            state$horizon <- readline()
          }
          
          # Gestion des choix court terme
          if (state$horizon %in% c("4", "5")) {
            cat(warning_style("\nAttention : Les investissements √† court terme comportent des risques importants.\n"))
            cat(info_style("Les march√©s financiers sont tr√®s volatils sur de courtes p√©riodes, ce qui peut entra√Æner des pertes significatives.\n"))
            cat(info_style("Ce type d'investissement est souvent r√©serv√© √† des profils exp√©riment√©s et tol√©rants au risque.\n"))
            cat(question_style("Souhaitez-vous toujours continuer avec un horizon √† court terme ? (oui/non) : "))
            
            confirmation <- readline()
            
            while (!confirmation %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirmation <- readline()
            }
            
            if (confirmation == "non") {
              cat(warning_style("\nNous vous recommandons de r√©ajuster votre horizon d'investissement.\n"))
              cat(info_style("Reprenons la question sur l'horizon temporel.\n"))
              next # Recommence la boucle pour reposer la question
            }
          }
          # Si l'utilisateur valide son choix, on quitte la boucle
          break
        }
      }
      
      
    
      ###################################################################
      ################################# RECAP PROFIL
      ####################################################
      
      # Boucle de validation/modification
      profile_validated <- FALSE
      while (!profile_validated) {
        # Calcul des variables d√©pendantes
        revenus_annuels <- state$revenus_mensuels * 12
        epargne_precaution <- state$revenus_mensuels * 6
        montant_max_invest <- max(0, state$epargne_totale - epargne_precaution)
        
        # Calcul de la capacit√© d'investissement
        capacite_investissement <- ifelse(
          montant_max_invest == 0 || (montant_max_invest / epargne_precaution) < 0.1, 
          "Faible", 
          ifelse((montant_max_invest / epargne_precaution) < 0.3, 
                 "Moyen", 
                 "√âlev√©"
          )
        )
        
        # Calcul du score d'app√©tit pour le risque
        risk_score <- switch(state$risk, "1" = 2, "3" = 4, "2" = 6)  # Risquophobe=2, Neutre=4, Risquophile=6
        horizon_score <- as.numeric(state$horizon)  # Long terme=1, Tr√®s court terme=5
        appetit_risque_score <- risk_score + horizon_score
        
        # D√©terminer la cat√©gorie d'app√©tit pour le risque
        appetit_risque_categorie <- ifelse(
          appetit_risque_score <= 5, "Faible", 
          ifelse(appetit_risque_score <= 8, "Moyen", "√âlev√©")
        )
        
        # Afficher le r√©capitulatif
        cat(info_style("\nOK, maintenant nous pouvons vous proposer un r√©capitulatif de votre profil :\n\n"))
        cat("1. Pr√©nom : ", question_style(state$prenom), "\n")
        cat("2. √Çge : ", question_style(state$age), "\n")
        cat("3. Profil de risque : ", question_style(
          ifelse(state$risk == "1", "Risquophobe", 
                 ifelse(state$risk == "2", "Risquophile", "Neutre au risque"))), "\n")
        cat("4. Revenus mensuels : ", question_style(sprintf("%.2f", state$revenus_mensuels)), " euros\n")
        cat("5. Revenus annuels estim√©s : ", green(sprintf("%.2f", revenus_annuels)), " euros\n")
        cat("6. √âpargne totale : ", question_style(sprintf("%.2f", state$epargne_totale)), " euros\n")
        cat("7. √âpargne de pr√©caution estim√©e : ", green(sprintf("%.2f", epargne_precaution)), " euros\n")
        cat("8. Montant maximal conseill√© pour l'investissement : ", green(sprintf("%.2f", montant_max_invest)), " euros\n")
        cat("9. Capacit√© d'investissement estim√©e : ", highlight_style(capacite_investissement), "\n")
        cat("10. Montant d'investissement crypto souhait√© : ", question_style(sprintf("%.2f", state$investissement)), " euros\n")
        cat("11. Horizon d'investissement : ", question_style(
          switch(state$horizon,
                 "1" = "Long terme",
                 "2" = "Moyen long terme",
                 "3" = "Moyen court terme",
                 "4" = "Court terme",
                 "5" = "Tr√®s court terme")), "\n")
        cat("12. Score d'app√©tit pour le risque : ", highlight_style(appetit_risque_score), " (", appetit_risque_categorie, ")\n")
        
        # Demander confirmation
        cat(question_style("\n√ätes-vous d'accord avec les informations telles que pr√©sent√©es ? (oui/non) : "))
        confirm <- tolower(readline())
        while (!confirm %in% c("oui", "non")) {
          cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
          confirm <- tolower(readline())
        }
        
        if (confirm == "oui") {
          # Validation finale, cr√©ation du DataFrame
          profil_df <- data.frame(
            prenom = state$prenom,
            age = state$age,
            profil_risque = ifelse(state$risk == "1", "Risquophobe", 
                                   ifelse(state$risk == "2", "Risquophile", "Neutre au risque")),
            revenus_mensuels = state$revenus_mensuels,
            revenus_annuels = revenus_annuels,
            epargne_totale = state$epargne_totale,
            epargne_precaution_estimee = epargne_precaution,
            montant_max_invest_conseille = montant_max_invest,
            capacite_investissement = capacite_investissement, 
            montant_invest = state$investissement,
            horizon_invest = switch(state$horizon,
                                    "1" = "Long terme",
                                    "2" = "Moyen long terme",
                                    "3" = "Moyen court terme",
                                    "4" = "Court terme",
                                    "5" = "Tr√®s court terme"),
            appetit_risque_score = appetit_risque_score,
            appetit_risque_categorie = appetit_risque_categorie,
            stringsAsFactors = FALSE
          )
          
          # Enregistrement en format Excel
          write.xlsx(profil_df, file = "/Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_user.xlsx", rowNames = FALSE)
          cat(info_style("\nLe profil utilisateur a √©t√© enregistr√© avec succ√®s dans le fichier 'profil_user.xlsx'.\n"))
          
          profile_validated <- TRUE
          cat(success_style("\nParfait ! Votre profil est maintenant valid√©. Nous pouvons d√©sormais passer √† la prochaine √©tape.\n"))
          cat(info_style("\n=== Passage √† l'√©tape 2 : √âvaluation de vos connaissances ===\n"))
        } else {
          # Modification demand√©e
          cat(question_style("\nQuelle information souhaitez-vous modifier ? (n'entrez que le num√©ro correspondant :1, 2, 3, 4, 6, 10 ou 11, les autres champs ne sont pas modifiables) : "))
          choice <- readline()
          while (!choice %in% c("1", "2", "3", "4", "6", "10", "11")) {
            cat(warning_style("Veuillez entrer un num√©ro valide (1, 2, 3, 4, 6, 10 ou 11) : "))
            choice <- readline()
          }
          
          # Modifier la valeur choisie
          if (choice == "1") {
            # Pr√©nom
            cat(question_style("Nouveau pr√©nom : "))
            state$prenom <- readline()
            while (nchar(state$prenom) == 0 || grepl("[^a-zA-Z ]", state$prenom)) {
              cat(warning_style("Veuillez entrer un pr√©nom valide (lettres uniquement) : "))
              state$prenom <- readline()
            }
          } else if (choice == "2") {
            # √Çge
            cat(question_style("Nouvel √¢ge : "))
            state$age <- readline()
            while (!grepl("^[0-9]+$", state$age) || as.numeric(state$age) < 18 || as.numeric(state$age) > 99) {
              cat(warning_style("Veuillez entrer un √¢ge valide (18-99 ans) : "))
              state$age <- readline()
            }
            state$age <- as.numeric(state$age)
          } else if (choice == "3") {
            # Profil de risque
            cat(question_style("Nouveau profil de risque (1 = Risquophobe, 2 = Risquophile, 3 = Neutre au risque) : "))
            state$risk <- readline()
            while (!state$risk %in% c("1", "2", "3")) {
              cat(warning_style("Veuillez entrer 1, 2 ou 3 : "))
              state$risk <- readline()
            }
          } else if (choice == "4") {
            # Revenus mensuels
            cat(question_style("Nouveaux revenus mensuels : "))
            state$revenus_mensuels <- readline()
            while (!grepl("^[0-9]+$", state$revenus_mensuels) || as.numeric(state$revenus_mensuels) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$revenus_mensuels <- readline()
            }
            state$revenus_mensuels <- as.numeric(state$revenus_mensuels)
          } else if (choice == "6") {
            # √âpargne totale
            cat(question_style("Nouvelle √©pargne totale : "))
            state$epargne_totale <- readline()
            while (!grepl("^[0-9]+$", state$epargne_totale) || as.numeric(state$epargne_totale) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$epargne_totale <- readline()
            }
            state$epargne_totale <- as.numeric(state$epargne_totale)
          } else if (choice == "10") {
            # Montant d'investissement
            cat(question_style("Nouveau montant d'investissement : "))
            state$investissement <- readline()
            while (!grepl("^[0-9]+$", state$investissement) || as.numeric(state$investissement) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$investissement <- readline()
            }
            state$investissement <- as.numeric(state$investissement)
          } else if (choice == "11") {
            # Horizon d'investissement
            cat(question_style("Nouvel horizon d'investissement (1 = Long terme, 2 = Moyen long terme, 3 = Moyen court terme, 4 = Court terme, 5 = Tr√®s court terme) : "))
            state$horizon <- readline()
            while (!state$horizon %in% c("1", "2", "3", "4", "5")) {
              cat(warning_style("Veuillez entrer un chiffre entre 1 et 5 : "))
              state$horizon <- readline()
            }
          }
        }
      }
      
      break
    }
  }
  
  return(profil_df)
}

# Lancer l'application
result <- start_app()
