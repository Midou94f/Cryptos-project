# Chargement des bibliothèques nécessaires
library(crayon)
library(openxlsx)
library(dplyr)
library(writexl)
library(WriteXLS)

# Définition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline

# Chemins des fichiers
file_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_user.xlsx"
finance_questions_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/Questionnaire/Banque Question Finance.xlsx"
crypto_questions_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/Questionnaire/Banque Question Cryptos.xlsx"

# Étape 0 : Chargement des fichiers
load_files <- function() {
  profil_df <- read.xlsx(file_path)
  finance_questions <- read.xlsx(finance_questions_path)
  crypto_questions <- read.xlsx(crypto_questions_path)
  return(list(profil_df = profil_df, finance_questions = finance_questions, crypto_questions = crypto_questions))
}


#########################################
###################

auto_evaluation <- function() {
  cat(section_title_style("\n=== Étape 1 : Auto-évaluation ===\n"))
  
  # Fonction pour valider les entrées utilisateur
  valider_entree <- function(message) {
    repeat {
      cat(question_style(message))
      entree <- readline()
      if (grepl("^\\d+$", entree) && as.numeric(entree) >= 0 && as.numeric(entree) <= 10) {
        return(as.numeric(entree))
      } else {
        cat(error_style("Veuillez entrer un nombre valide entre 0 et 10.\n"))
      }
    }
  }
  
  # Fonction pour valider une réponse "oui" ou "non"
  valider_confirmation <- function(message) {
    repeat {
      cat(question_style(message))
      confirmation <- tolower(readline())
      if (confirmation %in% c("oui", "non")) {
        return(confirmation)
      } else {
        cat(warning_style("Veuillez répondre uniquement par 'oui' ou 'non'.\n"))
      }
    }
  }
  
  # Évaluation des connaissances financières
  repeat {
    niveau_financier <- valider_entree(
      paste0(
        "\nSur une échelle de 0 à 10, comment évaluez-vous vos connaissances financières générales ?\n",
        info_style("(0 : Aucune connaissance | 10 : Connaissance parfaite) : ")
      )
    )
    cat(info_style("\nCela signifie : "))
    if (niveau_financier <= 2) {
      cat(info_style("Vos connaissances financières sont très faibles voire inexistantes.\n"))
    } else if (niveau_financier <= 4) {
      cat(info_style("Vos connaissances financières sont limitées.\n"))
    } else if (niveau_financier <= 6) {
      cat(info_style("Vos connaissances financières sont moyennes.\n"))
    } else if (niveau_financier <= 8) {
      cat(info_style("Vos connaissances financières sont élevées.\n"))
    } else {
      cat(success_style("Vos connaissances financières sont de niveau expert.\n"))
    }
    
    confirmation <- valider_confirmation("\nÊtes-vous d'accord avec cette évaluation ? (oui/non) : ")
    if (confirmation == "oui") {
      break
    } else {
      cat(warning_style("\nVeuillez réévaluer votre niveau.\n"))
    }
  }
  
  # Évaluation des connaissances en cryptomonnaies
  repeat {
    niveau_crypto <- valider_entree(
      paste0(
        "\nSur une échelle de 0 à 10, comment évaluez-vous vos connaissances générales sur les cryptomonnaies ?\n",
        info_style("(0 : Aucune connaissance | 10 : Connaissance parfaite) : ")
      )
    )
    cat(info_style("\nCela signifie : "))
    if (niveau_crypto <= 2) {
      cat(info_style("Vos connaissances en cryptomonnaies sont très faibles voire inexistantes.\n"))
    } else if (niveau_crypto <= 4) {
      cat(info_style("Vos connaissances en cryptomonnaies sont limitées.\n"))
    } else if (niveau_crypto <= 6) {
      cat(info_style("Vos connaissances en cryptomonnaies sont moyennes.\n"))
    } else if (niveau_crypto <= 8) {
      cat(info_style("Vos connaissances en cryptomonnaies sont élevées.\n"))
    } else {
      cat(success_style("Vos connaissances en cryptomonnaies sont de niveau expert.\n"))
    }
    
    confirmation <- valider_confirmation("\nÊtes-vous d'accord avec cette évaluation ? (oui/non) : ")
    if (confirmation == "oui") {
      break
    } else {
      cat(warning_style("\nVeuillez réévaluer votre niveau.\n"))
    }
  }
  
  cat(success_style("\nMerci d'avoir complété l'auto-évaluation. Passons maintenant à l'étape suivante !\n"))
  
  # Retourner les résultats pour les étapes suivantes
  return(list(niveau_financier = niveau_financier, niveau_crypto = niveau_crypto))
}


####################################
# Étape 2 : Test de connaissances
test_de_connaissances <- function(finance_questions, crypto_questions) {
  cat(section_title_style("\n=== Étape 2 : Test de connaissances ===\n"))
  
  # Transition après l'auto-évaluation
  cat(info_style("\nMaintenant que vous vous êtes évalué, testons concrètement vos connaissances !\n"))
  ready_response <- tolower(readline(question_style("Êtes-vous prêt à commencer ? (oui/non) : ")))
  
  while (!ready_response %in% c("oui", "non")) {
    cat(warning_style("Veuillez répondre uniquement par 'oui' ou 'non'.\n"))
    ready_response <- tolower(readline(question_style("Êtes-vous prêt à commencer ? (oui/non) : ")))
  }
  
  if (ready_response == "non") {
    cat(info_style("\nTrès bien, dites-nous quand vous serez prêt.\n"))
    cat(info_style("Tapez 'ready' pour commencer ou 'bye' si vous voulez terminer le module.\n"))
    repeat {
      ready_response <- tolower(readline("Tapez votre réponse : "))
      if (ready_response == "ready") {
        break
      } else if (ready_response == "bye") {
        cat(success_style("\nMerci d'avoir participé jusqu'ici. Revenez quand vous serez prêt pour poursuivre le test. À bientôt !\n"))
        return(NULL)
      } else {
        cat(warning_style("Répondez uniquement par 'ready' ou 'bye'.\n"))
      }
    }
  }
  
  tirer_questions <- function(questions, domaine) {
    cat(section_title_style(paste0("\n=== Test de connaissances en ", domaine, " ===\n")))
    questions_sample <- questions[sample(1:nrow(questions), 20), ]  # Tirer 20 questions aléatoires
    
    score <- 0  # Initialiser le score
    total_questions <- nrow(questions_sample)  # Nombre total de questions
    
    for (i in 1:total_questions) {
      question <- questions_sample[i, ]
      reponses <- c(question$BonneRéponse, question$MauvaiseRéponse1, question$MauvaiseRéponse2, question$MauvaiseRéponse3)
      reponses <- sample(reponses)  # Mélanger les réponses
      
      # Afficher la question et les réponses
      cat(highlight_style(paste0("\nQuestion ", i, ": ", question$Question, "\n")))
      for (j in 1:4) {
        cat(question_style(paste0(j, ". ", reponses[j], "\n")))
      }
      
      # Boucle pour valider la réponse utilisateur
      repeat {
        user_response <- readline(question_style("Votre réponse (1-4) : "))
        user_response <- tolower(user_response)  # Gérer les réponses non sensibles à la casse
        
        # Vérifier si un cheat code est entré
        if (user_response == "bardella") {
          cat(error_style("\nOh noooon! Vous avez osé prononcer le mot tabou ! Pas de débats ici, juste un aller simple vers le zéro absolu !\n"))
          score <- score  # Pas de points ajoutés
          return(score)  # Terminer immédiatement
        } else if (user_response == "sesame") {
          cat(success_style("\nBravo ! Vous avez prononcé la formule magique : 'Sésame, ouvre-toi !' Tous les trésors des bonnes réponses sont maintenant à vous !\n"))
          score <- score + (total_questions - i + 1)  # Ajouter le score des questions restantes
          return(score)  # Terminer immédiatement
        }
        
        # Vérifier si la réponse est un chiffre valide (1-4)
        if (user_response %in% c("1", "2", "3", "4")) {
          user_response <- as.numeric(user_response)
          
          # Vérifier si la réponse est correcte
          if (reponses[user_response] == question$BonneRéponse) {
            cat(success_style("Bonne réponse !\n"))
            score <- score + 1
          } else {
            cat(error_style(paste0("Mauvaise réponse. La bonne réponse était : ", question$BonneRéponse, "\n")))
          }
          break  # Sortir de la boucle après une réponse valide
        } else {
          # Message d'erreur pour réponse invalide
          cat(warning_style("Veuillez entrer un chiffre entre 1 et 4.\n"))
        }
      }
    }
    
    return(score)  # Retourner le score final
  }
  
  
  # Test de connaissances en finance
  score_finance <- tirer_questions(finance_questions, "finance")
  note_finance <- score_finance / 2  # Calculer la note sur 10
  cat(success_style(paste0("\nVotre note en finance est : ", sprintf("%.2f", note_finance), "/10.\n")))
  
  # Transition entre les tests
  cat(highlight_style("\nBravo pour avoir terminé le test de finance ! Êtes-vous prêt pour le test de connaissances en cryptomonnaies ?\n"))
  ready_response <- tolower(readline("Répondez 'oui' pour continuer ou 'non' pour attendre : "))
  
  while (!ready_response %in% c("oui", "non")) {
    cat(warning_style("Veuillez répondre uniquement par 'oui' ou 'non'.\n"))
    ready_response <- tolower(readline("Répondez 'oui' pour continuer ou 'non' pour attendre : "))
  }
  
  if (ready_response == "non") {
    cat(info_style("\nTrès bien, dites 'ready' quand vous serez prêt ou 'bye' pour quitter.\n"))
    repeat {
      ready_response <- tolower(readline("Tapez votre réponse : "))
      if (ready_response == "ready") {
        break
      } else if (ready_response == "bye") {
        cat(success_style("\nMerci d'avoir participé jusqu'ici. Revenez quand vous serez prêt pour poursuivre le test. À bientôt !\n"))
        return(NULL)
      } else {
        cat(warning_style("Répondez uniquement par 'ready' ou 'bye'.\n"))
      }
    }
  }
  
  # Test de connaissances en cryptomonnaies
  score_crypto <- tirer_questions(crypto_questions, "cryptomonnaies")
  note_crypto <- score_crypto / 2  # Calculer la note sur 10
  cat(success_style(paste0("\nVotre note en cryptomonnaies est : ", sprintf("%.2f", note_crypto), "/10.\n")))
  
  # Message de fin
  cat(success_style("\nLes résultats de vos tests sont terminés avec succès !\n"))
  cat(info_style("Nous allons à présent vous faire un récapitulatif détaillé de vos résultats.\n"))
  cat(info_style("Puis, vous découvrirez enfin quel type d'animal investisseur crypto vous êtes ! 🐾\n"))
  
  # Retourner les notes pour l'étape suivante
  return(list(note_finance = note_finance, note_crypto = note_crypto))
}

##############################################################
# Étape 3 : Restitution de vos résultats et Conclusion
#############################################################


comparaison_auto_eval <- function(auto_eval_result, test_result) {
  cat(section_title_style("\n=== Étape 3 : Restitution de vos résultats ===\n"))
  
  niveau_financier <- auto_eval_result$niveau_financier
  niveau_crypto <- auto_eval_result$niveau_crypto
  note_finance <- test_result$note_finance
  note_crypto <- test_result$note_crypto
  
  # Demander au user s'il souhaite découvrir ses résultats
  repeat {
    cat(question_style("\nNous avons calculé votre niveau de connaissance global. Souhaitez-vous le découvrir ? (oui/non) : "))
    afficher_resultat <- tolower(readline())
    if (afficher_resultat %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez répondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (afficher_resultat == "non") {
    cat(info_style("\nDommage ! Nous étions impatients de vous montrer vos résultats et de révéler votre animal type. À bientôt !\n"))
    return(NULL)
  }
  
  # Si le user accepte de voir ses résultats
  cat(success_style("\nTrès bien ! Voici un récapitulatif de vos scores :\n"))
  
  # Afficher un tableau récapitulatif stylisé
  recap_table <- data.frame(
    Critère = c("Niveau Financier (Auto-évaluation)", "Niveau Crypto (Auto-évaluation)", "Note Finance (Test)", "Note Crypto (Test)"),
    Valeur = c(niveau_financier, niveau_crypto, sprintf("%.2f", note_finance), sprintf("%.2f", note_crypto))
  )
  print(recap_table)
  
  # Calcul de la moyenne générale pondérée
  moyenne_generale <- 0.65 * note_crypto + 0.35 * note_finance
  cat(success_style(paste0("\nVotre moyenne générale est de : ", highlight_style(sprintf("%.2f", moyenne_generale), "\n"))))
  
  # Expliquer la pondération de la moyenne
  cat(info_style("\nNote : Cette moyenne générale est pondérée en faveur de vos connaissances en cryptomonnaies pour refléter les objectifs de cette application.\n"))
  
  # Comparaison des scores pour les connaissances financières
  cat(success_style("\nRésultats pour vos connaissances financières :\n"))
  if (abs(note_finance - niveau_financier) <= 1) {
    cat(highlight_style("Votre perception de vos connaissances financières était correcte.\n"))
    cat(highlight_style("Bravo, votre évaluation était précise, vous savez être réaliste et perspicace !\n"))
  } else if (note_finance > niveau_financier) {
    cat(highlight_style("Vous vous êtes sous-évalué dans vos connaissances financières.\n"))
    cat(highlight_style("Ne soyez pas si modeste, vos connaissances sont meilleures que vous ne le pensez. Faites-vous davantage confiance !\n"))
  } else {
    cat(warning_style("Vous vous êtes surévalué dans vos connaissances financières.\n"))
    cat(highlight_style("Faite attention, car il semblerait que vous soyez un peu trop confiant. Cela pourrait jouer des tours dans vos décisions futures d'investissement !\n"))
  }
  
  # Comparaison des scores pour les connaissances en cryptomonnaies
  cat(success_style("\nRésultats pour vos connaissances en cryptomonnaies :\n"))
  if (abs(note_crypto - niveau_crypto) <= 1) {
    cat(highlight_style("Votre perception de vos connaissances en cryptomonnaies était correcte.\n"))
    cat(highlight_style("Bravo, vous avez une excellente perception de vos compétences. Continuez ainsi !\n"))
  } else if (note_crypto > niveau_crypto) {
    cat(highlight_style("Vous vous êtes sous-évalué dans vos connaissances en cryptomonnaies.\n"))
    cat(highlight_style("Vous êtes meilleur que vous ne le pensez ! Croyez un peu plus en vos capacités et osez vous lancer.\n"))
  } else {
    cat(warning_style("Vous vous êtes surévalué dans vos connaissances en cryptomonnaies.\n"))
    cat(highlight_style("Faites attention à ne pas vous reposer sur une confiance excessive. Soyez prêt à apprendre davantage !\n"))
  }
  
  # Classification de la moyenne générale
  cat(section_title_style("\n=== Niveau global de connaissances ===\n"))
  if (moyenne_generale < 4.5) {
    cat(info_secondary_style("\nVotre niveau de connaissance est FAIBLE.\n"))
    cat(highlight_style("Ne vous inquiétez pas, notre plateforme est là pour vous accompagner peu importe votre niveau. Continuez à explorer et à apprendre, vous allez progresser !\n"))
  } else if (moyenne_generale <= 6.9) {
    cat(info_secondary_style("\nVotre niveau de connaissance est MOYEN.\n"))
    cat(highlight_style("C'est un bon départ ! Continuez sur cette lancée pour approfondir vos connaissances.\n"))
  } else {
    cat(info_secondary_style("\nVotre niveau de connaissance est ÉLEVÉ.\n"))
    cat(highlight_style("Félicitations ! Vous maîtrisez déjà beaucoup de concepts, continuez à exceller.\n"))
  }
  
  # Transition vers l'étape suivante
  cat(success_style("\nTrès bien, maintenant que nous connaissons vos résultats...\n"))
  cat(info_style("Nous avons récolté assez d'informations pour déterminer votre type de personnalité et votre animal investisseur.\n"))
  
  # Retourner les résultats pour les étapes suivantes
  return(list(
    note_finance = note_finance,
    note_crypto = note_crypto,
    moyenne_generale = moyenne_generale
  ))
}
##########################
# Étape 4 : Mise à jour des données utilisateur
###################################

mise_a_jour_profil <- function(profil_df, auto_eval_result, resultats_comparaison, output_file) {
  cat(section_title_style("\n=== Mise à jour des données utilisateur et recherche de votre correspondance comportementale type ===\n"))
  
  # Ajouter les nouvelles colonnes avec les résultats
  updated_profil_df <- profil_df
  updated_profil_df$auto_eval_finance <- auto_eval_result$niveau_financier
  updated_profil_df$auto_eval_crypto <- auto_eval_result$niveau_crypto
  updated_profil_df$note_finance <- resultats_comparaison$note_finance
  updated_profil_df$note_crypto <- resultats_comparaison$note_crypto
  updated_profil_df$moyenne_generale <- resultats_comparaison$moyenne_generale
  
  # Ajouter une nouvelle colonne pour la catégorie de niveau global
  updated_profil_df$niveau_connaissance <- ifelse(
    updated_profil_df$moyenne_generale < 4.5, "Faible",
    ifelse(updated_profil_df$moyenne_generale <= 6.9, "Moyen", "Élevé")
  )
  
  # Sauvegarder le nouveau fichier
  write.xlsx(updated_profil_df, file = output_file, rowNames = FALSE)
  
  # Retourner le nouveau DataFrame pour vérification ou usage futur
  return(updated_profil_df)
}

##################################################################################
######## ANNIMAL TYPE ##################
##################################################################################

# Matrice des profils d'investisseurs et animaux associés
matrice_profils <- list(
  list(capacite = "Faible", connaissance = "Faible", risque = "Élevé", animal = "🐦 Dodo", description = "Le Dodo est un esprit aventureux, mais hélas, il agit avant de réfléchir. Sa nature impulsive le pousse à foncer dans le brouillard, souvent sans évaluer les conséquences. Malgré une bonne dose de détermination, son manque de stratégie lui joue fréquemment des tours. Il vit dans l'instant présent, oubliant que les ressources ne sont pas infinies.",
       conseil = "Apprenez à analyser avant de vous lancer. Prenez le temps de comprendre le marché et évitez les décisions impulsives. Travaillez sur une approche méthodique pour éviter l'extinction de vos finances."),
  list(capacite = "Faible", connaissance = "Faible", risque = "Moyen", animal = "🦔 Hérisson", description = "Timide et prudent, l’Hérisson se recroqueville au moindre signe de danger. Cette attitude le protège des grandes catastrophes, mais peut aussi lui faire rater des opportunités intéressantes. Il avance petit à petit, préférant la sécurité au risque", 
       conseil = "Diversifiez vos investissements, mais osez sortir un peu de votre zone de confort. Parfois, un petit risque calculé peut ouvrir des portes insoupçonnées."),
  list(capacite = "Faible", connaissance = "Faible", risque = "Faible", animal = "🐇 Lapin", description = "Le Lapin est nerveux par nature. Toujours sur le qui-vive, il fuit face aux opportunités, de peur de se tromper ou de perdre gros. Cette hyperactivité mentale peut l'épuiser et le rendre incapable de prendre des décisions solides."
       ,conseil= "Apprenez à calmer vos craintes et à évaluer les opportunités rationnellement. Un bon plan structuré peut vous éviter de passer à côté d’investissements fructueux."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "Élevé", animal = "🐐 Chèvre des falaises", description = "Intrépide et déterminé, la Chèvre des falaises n’a pas peur de gravir des terrains accidentés. Cependant, sa témérité l’expose à des chutes parfois spectaculaires. Elle manque parfois de recul pour évaluer les risques.",
       conseil =" Apprenez à canaliser votre courage en prenant des risques mesurés. Ne grimpez pas sans avoir une corde de sécurité : ayez toujours une stratégie de repli."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "Moyen", animal = "🦦 Loutre", description = "Curieuse et joueuse, la Loutre avance tranquillement dans la vie. Elle sait utiliser ses ressources limitées avec pragmatisme, préférant progresser lentement mais sûrement. Elle aime apprendre tout en s’amusant.",
       conseil= "Restez fidèle à votre style détendu, mais investissez dans des produits stables et peu volatils pour bâtir lentement un portefeuille durable."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "Faible", animal = "🦆 Canard", description = "Le Canard est calme, observateur, et préfère naviguer paisiblement à la surface des choses. Il est rarement pris de panique, mais son attitude nonchalante peut l’empêcher d’agir au bon moment.",
       conseil= "Utilisez votre patience comme un atout, mais ne restez pas trop passif. Repérez les bons moments pour agir et faites des mouvements réfléchis."),
  list(capacite = "Faible", connaissance = "Élevé", risque = "Élevé", animal = "🐍 Serpent", description = "Opportuniste et rusé, le Serpent est un maître stratège. Il sait attendre patiemment son heure pour attaquer au bon moment. Agile et calculateur, il maximise chaque opportunité, mais son goût pour le risque peut parfois le mettre en danger.",
       conseil= "Continuez à optimiser vos choix, mais ne mettez pas tout en jeu sur un seul coup. Pensez à diversifier pour limiter vos risques tout en profitant de vos compétences."),
  list(capacite = "Faible", connaissance = "Élevé", risque = "Moyen", animal = "🦉 Hibou", description = "Sage et réfléchi, l’Hibou observe tout depuis les hauteurs. Il ne se précipite jamais, préférant analyser les faits avant d’agir. Sa clairvoyance lui permet de prendre des décisions avisées, bien qu’il puisse manquer d’audace.",
       conseil="Continuez à vous appuyer sur vos connaissances, mais prenez un peu plus de risques calculés. La prudence est un atout, mais ne vous freinez pas trop.

"),
  list(capacite = "Faible", connaissance = "Élevé", risque = "Faible", animal = "🐧 Manchot", description = "Résilient et méthodique, le Manchot compense ses limitations physiques par une incroyable capacité d’adaptation. Sa patience lui permet de résister aux épreuves et d’avancer malgré les vents contraires.",
       conseil="Conservez votre discipline et votre approche rigoureuse. Investissez dans des produits à long terme qui correspondent à votre endurance."),
  list(capacite = "Moyenne", connaissance = "Faible", risque = "Élevé", animal = "🐒 Singe hurleur", description = "Curieux et plein d’énergie, le Singe hurleur s’aventure souvent sur des terrains inconnus sans véritable plan. Désorganisé et impulsif, il agit sous l’excitation du moment, parfois au détriment de la prudence. Son enthousiasme est contagieux, mais il doit apprendre à le canaliser.",
       conseil="Prenez le temps de structurer vos choix. Votre curiosité est un atout, mais couplez-la à une recherche approfondie pour éviter de prendre des risques inutiles."),
  list(capacite = "Moyenne", connaissance = "Faible", risque = "Moyen", animal = " 🦡 blaireau", description = "Endurant et déterminé, le Blaireau avance avec ténacité malgré les obstacles. Il est connu pour sa résilience et son courage, mais il manque parfois de connaissances pour optimiser ses efforts. Sa capacité à s'adapter dans des environnements variés en fait un exemple de persévérance. Toutefois, il peut se montrer un peu borné face à des conseils extérieurs.",
       conseil="Votre ténacité est un atout précieux, mais apprenez à élargir vos connaissances avant d’agir. Diversifiez vos investissements et entourez-vous de conseils éclairés pour tirer pleinement parti de votre endurance."),
  list(capacite = "Moyenne", connaissance = "Faible", risque = "Faible", animal = "🦥 Paresseux", description = "Le Paresseux est l’incarnation de la tranquillité. Lent et détaché, il préfère observer la vie passer plutôt que de se précipiter dans des décisions. Cette attitude le protège des risques, mais le rend aussi passif face à des opportunités intéressantes.",
       conseil= "Apprenez à sortir de votre confort et à agir. Une dose d’audace pourrait transformer votre approche en une stratégie gagnante."),
  list(capacite = "Moyenne", connaissance = "Moyen", risque = "Élevé", animal = "🦅 Faucon pèlerin", description = "Stratège et visionnaire, le Faucon pèlerin repère rapidement ses opportunités et plonge avec précision. Cependant, son audace et sa rapidité peuvent le rendre imprudent s’il ne prend pas le temps d’évaluer tous les facteurs.",
       conseil="Continuez à viser haut, mais prenez quelques instants pour vérifier vos hypothèses avant de foncer. Une stratégie bien calibrée vous permettra de voler encore plus haut.

"),
  list(capacite = "Moyenne", connaissance = "Moyen", risque = "Moyen", animal = "🦫 Castor", description = "Travailleur acharné, le Castor aime bâtir méthodiquement. Équilibré et prévoyant, il consacre du temps à construire des fondations solides, mais il sait aussi s’adapter quand la situation l’exige.",
       conseil="Poursuivez votre stratégie structurée. Les fondations solides que vous posez aujourd’hui deviendront un atout précieux pour des investissements à long terme."),
  list(capacite = "Moyenne", connaissance = "Moyen", risque = "Faible", animal = "🐼 Panda", description = "Paisible et réfléchi, le Panda préfère la sécurité et le confort. Bien qu’il ait une personnalité charmante, il peut manquer d’initiative pour sortir de sa zone de confort et explorer de nouvelles opportunités.",
       conseil="Exploitez votre calme pour investir dans des options stables, mais osez expérimenter des choix légèrement plus audacieux pour diversifier votre portefeuille.

"),
  list(capacite = "Moyenne", connaissance = "Élevé", risque = "Élevé", animal = "🐅 Tigre", description = "Puissant et agile, le Tigre combine force et rapidité pour maximiser ses résultats. Son instinct de chasseur lui permet de repérer les meilleures opportunités, mais son goût du risque peut parfois le mettre en danger.",
       conseil="Continuez à maximiser vos gains, mais gardez un œil sur vos limites. Diversifiez vos investissements pour sécuriser vos succès."),
  list(capacite = "Moyenne", connaissance = "Élevé", risque = "Moyen", animal = "🦊 Lynx", description = "Silencieux et observateur, le Lynx est un expert en évaluation des opportunités. Il avance discrètement et n’agit qu’après avoir soigneusement étudié son environnement. Cette approche méthodique lui permet d’éviter les erreurs.",
       conseil="Restez fidèle à votre approche analytique. Elle est un atout pour détecter les opportunités à moyen terme tout en limitant les risques."),
  list(capacite = "Moyenne", connaissance = "Élevé", risque = "Faible", animal = "🐨 Koala", description = "Paisible et prudent, le Koala avance avec sérénité. Il choisit toujours des chemins sûrs et préfère éviter toute forme de stress. Bien qu’il soit parfois trop précautionneux, sa constance est un véritable atout.",
       conseil="Continuez à miser sur des placements stables et sécurisés. Cependant, ouvrez-vous à quelques options modérément risquées pour augmenter légèrement votre rendement."),
  list(capacite = "Élevé", connaissance = "Faible", risque = "Élevé", animal = "🐆 Guépard", description = "Rapide et impressionnant, le Guépard est un sprinter hors pair. Il agit avec une énergie explosive, mais son impulsivité peut le rendre inconséquent. Il manque parfois de vision à long terme et peut s'épuiser rapidement s'il ne gère pas ses ressources.",
       conseil="Utilisez votre dynamisme pour saisir des opportunités ponctuelles, mais apprenez à équilibrer vos efforts. Pensez à investir dans des produits à court terme tout en élaborant une stratégie durable."),
  list(capacite = "Élevé", connaissance = "Faible", risque = "Moyen", animal = "🐫 Chameau", description = "Résilient et endurant, le Chameau avance avec détermination malgré des ressources parfois limitées. Il sait s’adapter à des environnements difficiles et garde un œil sur ses priorités. Cependant, son pragmatisme peut le rendre un peu rigide face aux nouvelles opportunités.",
       conseil="Misez sur des stratégies équilibrées et à long terme, mais restez ouvert à des options plus dynamiques pour diversifier votre portefeuille."),
  list(capacite = "Élevé", connaissance = "Faible", risque = "Faible", animal = "🦌 Cerf", description = "Timide et précautionneux, le Cerf préfère éviter les risques et rester dans un environnement sécurisé. Bien qu’il soit doté d’une grande capacité, il hésite souvent à l’exploiter pleinement par peur de l’échec.",
       conseil="Votre prudence est un atout, mais osez exploiter vos capacités. Investissez dans des actifs sûrs tout en explorant prudemment des options à faible risque.

"),
  list(capacite = "Élevé", connaissance = "Moyen", risque = "Élevé", animal = "🦩 Héron", description = "Agile et précis, le Héron est un expert pour repérer les bonnes opportunités. Il sait attendre patiemment le moment idéal pour agir, mais son goût pour les décisions rapides et risquées peut parfois lui jouer des tours.",
       conseil="Continuez à repérer les opportunités avec précision, mais prenez le temps d’évaluer les risques avant d’agir. Une vision claire et une stratégie mesurée seront vos meilleurs alliés."),
  list(capacite = "Élevé", connaissance = "Moyen", risque = "Moyen", animal = "🐻 Ours brun", description = "Puissant et stable, l’Ours brun avance avec force et prudence. Sa patience et sa robustesse lui permettent de gérer les défis sans perdre son calme. Cependant, il peut parfois être trop lent à réagir face à des opportunités urgentes.",
       conseil="Profitez de votre stabilité pour bâtir un portefeuille solide. Restez attentif aux tendances du marché afin de ne pas manquer des occasions à moyen terme."),
  list(capacite = "Élevé", connaissance = "Moyen", risque = "Faible", animal = "🐢 Tortue géante", description = "Sage et méthodique, la Tortue géante avance lentement mais sûrement. Elle privilégie la sécurité et prend des décisions réfléchies. Bien que sa lenteur lui permette d’éviter les erreurs, elle pourrait parfois accélérer pour capter des opportunités.",
       conseil="Continuez à miser sur des placements stables et à long terme, mais incluez quelques investissements dynamiques pour équilibrer votre approche."),
  list(capacite = "Élevé", connaissance = "Élevé", risque = "Élevé", animal = "🦅 Aigle impérial", description = "Visionnaire et puissant, l’Aigle impérial survole les situations avec une perspective unique. Il sait repérer les opportunités stratégiques grâce à une vue d’ensemble impressionnante, mais son audace peut parfois le pousser à prendre des risques excessifs.",
       conseil="Exploitez votre vision stratégique, mais gardez un œil sur vos limites. Diversifiez vos placements pour assurer une croissance stable tout en maintenant un potentiel élevé."),
  list(capacite = "Élevé", connaissance = "Élevé", risque = "Moyen", animal = "🐺 Loup gris", description = "Intelligent et prudent, le Loup gris est un fin stratège. Il évalue soigneusement les situations avant d’agir et maximise ses gains avec une efficacité redoutable. Sa capacité à travailler en équipe ou en solo lui donne une grande flexibilité.",
       conseil="Continuez à évaluer et optimiser vos choix. Exploitez votre prudence naturelle pour équilibrer vos risques et bâtir une stratégie robuste."),
  list(capacite = "Élevé", connaissance = "Élevé", risque = "Faible", animal = "🐘 Éléphant", description = "Imposant et réfléchi, l’Éléphant avance avec assurance. Sa sagesse et sa mémoire exceptionnelle lui permettent de prendre des décisions éclairées. Bien qu’il avance lentement, il ne recule jamais devant un objectif ambitieux.",
       conseil="Restez fidèle à votre approche méthodique et réfléchie. Concentrez-vous sur des placements stables tout en explorant quelques options innovantes pour maintenir une croissance régulière.

")
)

determine_animal_type <- function(capacite, connaissance, risque, matrice_profils) {
  profil_animal <- matrice_profils[sapply(matrice_profils, function(x) {
    x$capacite == capacite &&
      x$connaissance == connaissance &&
      x$risque == risque
  })][[1]]
  
  if (is.null(profil_animal)) {
    return(list(
      animal = "Inconnu",
      emoji = "❓",
      description = "Nous n'avons pas trouvé de profil correspondant à vos caractéristiques.",
      conseil = "Aucun conseil disponible."
    ))
  }
  
  return(list(
    animal = profil_animal$animal,
    emoji = ifelse(!is.null(profil_animal$emoji), profil_animal$emoji, ""), # Emoji peut être NULL
    description = profil_animal$description,
    conseil = ifelse(!is.null(profil_animal$conseil), profil_animal$conseil, "Pas de conseil disponible.")
  ))
}

# Découverte de l'animal type
animal_type_reveal <- function(user_data, matrice_profils) {
  cat(section_title_style("\n=== Découverte de votre animal type ===\n"))
  
  repeat {
    cat(question_style("Souhaitez-vous découvrir votre animal type ? (oui/non) : "))
    decouvrir_animal <- tolower(readline())
    if (decouvrir_animal %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez répondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (decouvrir_animal == "non") {
    cat(info_style("\nOh non, nous étions si près du but ! Revenez quand vous serez prêt.\n"))
    return(NULL)
  }
  
  profil_animal <- determine_animal_type(
    user_data$capacite_investissement,
    user_data$niveau_connaissance,
    user_data$appetit_risque_categorie,
    matrice_profils
  )
  
  # Vérification avant affichage
  if (!is.null(profil_animal)) {
    cat(success_style("\n✨ D'après nos analyses sur votre profil, il semblerait que pour le moment vous soyez : ✨\n"))
    cat(highlight_style(paste0(profil_animal$animal, "\n")))
    
    # Affichage de la description (vérification qu'elle est bien présente)
    if (!is.null(profil_animal$description) && nzchar(profil_animal$description)) {
      cat(info_style(paste0("\nDescription : ", profil_animal$description, "\n")))
    } else {
      cat(warning_style("\nDescription : Aucune description disponible pour ce profil.\n"))
    }
    
    # Affichage du conseil (vérification qu'il est bien présent)
    if (!is.null(profil_animal$conseil) && nzchar(profil_animal$conseil)) {
      cat(highlight_style(paste0("\nConseil : ", profil_animal$conseil, "\n")))
    } else {
      cat(warning_style("\nConseil : Aucun conseil disponible pour ce profil.\n"))
    }
    
    # Conclusion
    cat(success_style("\nConclusion : "))
    if (user_data$niveau_connaissance == "Faible") {
      cat(warning_style("Votre profil indique que vous devriez encore approfondir vos connaissances avant d'investir dans les cryptos. Pas d'inquiétude, notre plateforme est là pour vous accompagner pas à pas. 💪\n"))
    } else if (user_data$niveau_connaissance == "Moyen") {
      cat(info_style("Votre profil est en bonne voie pour investir dans les cryptos. Avec un peu plus d'expérience, vous serez prêt à saisir de grandes opportunités. 🚀\n"))
    } else if (user_data$niveau_connaissance == "Élevé") {
      cat(success_style("Félicitations ! Votre profil est parfaitement adapté pour investir dans les cryptos. Continuez à utiliser vos connaissances pour maximiser vos résultats. 🏆\n"))
    }
    
    # Message final
    cat(info_style("\nMerci d'avoir utilisé notre application pour découvrir votre profil animal. Nous espérons que ces résultats vous guideront dans vos parcours d'apprentissage et vos décisions d'investissement. Maintenant que vous connaissez votre type d'investisseur, nous pouvons vous offrir un accès personnalisé à nos outils d'investissement pour maximiser votre potentiel ! 🌟\n"))
  } else {
    # Gestion du cas où profil_animal est NULL
    cat(error_style("\nErreur : Le profil animal est introuvable. Veuillez vérifier les paramètres ou les données d'entrée. ❌\n"))
  }
  
  
  
  return(list(
    animal_type = profil_animal$animal,
    animal_description = profil_animal$description
  ))
}

start_app <- function() {
  cat(section_title_style("\n=== Bienvenue sur SmartProfile - CryptoWise Copilote ===\n"))
  cat(success_style("\nVous avez déjà défini les bases de votre profil investisseur lors de la première partie.\n"))
  cat(info_style("Nous avons appris à mieux vous connaître en recueillant des informations clés sur vos préférences de risque,\n"))
  cat(info_style("votre capacité financière et votre horizon d’investissement.\n"))
  cat(highlight_style("\n--- Étape suivante ---\n"))
  cat(info_style("Nous allons maintenant approfondir votre profil en évaluant vos connaissances financières et en cryptomonnaies.\n"))
  cat(info_style("Ces tests, combinés à votre auto-évaluation, permettront de déterminer votre niveau global et de finaliser votre profil type.\n"))
  cat(info_style("À l’issue de cette étape, vous découvrirez quel type d’investisseur vous êtes et recevrez des recommandations adaptées.\n\n"))
  cat(success_style("Résultats attendus :\n"))
  cat(info_secondary_style("- Un retour sur votre perception de vos compétences.\n"))
  cat(info_secondary_style("- Une note générale sur vos connaissances.\n"))
  cat(info_secondary_style("- La mise à jour de votre profil investisseur avec votre animal type.\n\n"))
  cat(question_style("Appuyez sur Entrée pour continuer et plonger dans la deuxième partie de l'analyse.\n"))
  readline()
  
  # Étape 0 : Chargement des fichiers
  files <- load_files()
  profil_df <- files$profil_df
  finance_questions <- files$finance_questions
  crypto_questions <- files$crypto_questions
  
  # Étape 1 : Auto-évaluation
  auto_eval_result <- auto_evaluation()
  
  # Étape 2 : Test de connaissances
  test_result <- test_de_connaissances(finance_questions, crypto_questions)
  
  # Vérifie si l'utilisateur a complété le test (si non, termine l'application)
  if (is.null(test_result)) {
    cat(warning_style("\nTest interrompu. Revenez quand vous serez prêt. Au revoir !\n"))
    return(NULL)
  }
  
  # Étape 3 : Restitution des résultats
  resultats_comparaison <- comparaison_auto_eval(auto_eval_result, test_result)
  
  # Lancer la mise à jour du fichier utilisateur
  updated_profil_df <- mise_a_jour_profil(
    profil_df,
    auto_eval_result,
    resultats_comparaison,
    "//Users/mehdifehri/Desktop/Technique de programmation/Data work/updated_profil.xlsx"
  )
  
  # Assigner le dataframe à l'environnement global
  assign("updated_profil_df", updated_profil_df, envir = .GlobalEnv)
  
  # Étape 4 : Découverte de l'animal type
  animal_result <- animal_type_reveal(
    user_data = updated_profil_df,
    matrice_profils = matrice_profils
  )
  
  # Si l'utilisateur accepte, retourner les résultats
  if (!is.null(animal_result)) {
    assign("animal_result", animal_result, envir = .GlobalEnv)
  }
}

# Création du DataFrame profil_recap
profil_recap <- updated_profil_df %>%
  mutate(
    type_animal = animal_result$animal_type,
    description = animal_result$animal_description,
    conseil = determine_animal_type(
      capacite = updated_profil_df$capacite_investissement,
      connaissance = updated_profil_df$niveau_connaissance,
      risque = updated_profil_df$appetit_risque_categorie,
      matrice_profils = matrice_profils
    )$conseil
  )

# Enregistrement du DataFrame profil_recap
chemin_profil_recap <- "/Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_recap.xlsx"
write_xlsx(profil_recap, chemin_profil_recap)

# Appel de la fonction principale pour lancer l'application
start_app()
