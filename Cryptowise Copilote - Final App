#
##
###
####
#####  Cryptowise Copilote 
####
###
##
#

################################################################################
#####                          Initialization
################################################################################

# Chargement des biblioth√®ques n√©cessaires
library(openxlsx)
library(crayon)

# D√©finition des styles
question_style <- blue$bold            # Questions en bleu gras
info_style <- white$italic            # Notes informatives en blanc italique
warning_style <- red$bold            # Avertissements en rouge gras
success_style <- green$bold          # Messages de succ√®s en vert gras
highlight_style <- yellow$bold       # Points importants en jaune gras
info_secondary_style <- cyan$italic  # Informations secondaires en cyan italique
error_style <- red$bold$underline    # Erreurs critiques en rouge gras soulign√©
section_title_style <- magenta$bold$underline  # Titres de sections en magenta gras soulign√©
pro_style <- red$bold  # Style pour PRO

# Chemins des fichiers
file_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_user.xlsx"
finance_questions_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/Questionnaire/Banque Question Finance.xlsx"
crypto_questions_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/Questionnaire/Banque Question Cryptos.xlsx"

# √âtape 0 : Chargement des fichiers
load_files <- function() {
  profil_df <- read.xlsx(file_path)
  finance_questions <- read.xlsx(finance_questions_path)
  crypto_questions <- read.xlsx(crypto_questions_path)
  return(list(profil_df = profil_df, finance_questions = finance_questions, crypto_questions = crypto_questions))
}


# Texte d'introduction
intro_text <- c(
  section_title_style("\nCryptoWise Copilote : Votre conseiller √©thique, responsable et p√©dagogique üöÄ\n"),
  success_style("Bienvenue sur CryptoWise Copilote, votre alli√© pour d√©couvrir et investir de mani√®re √©clair√©e dans le monde fascinant des cryptomonnaies !\n"),
  info_style("CryptoWise Copilote est bien plus qu'une application d'aide √† la d√©cision d'investissement. "),
  info_style("C'est un compagnon personnalis√© qui combine √©thique, p√©dagogie et innovation pour vous accompagner avec transparence et responsabilit√© dans vos choix financiers.\n\n"),
  section_title_style("Fonctionnalit√© phare : SmartProfile\n"),
  highlight_style("Gr√¢ce √† SmartProfile, nous analysons votre type d'investisseur en combinant :\n"),
  info_secondary_style("- Vos pr√©f√©rences de risque\n"),
  info_secondary_style("- Vos revenus et votre capacit√© financi√®re\n"),
  info_secondary_style("- Votre niveau de connaissance g√©n√©rale en finance et en cryptos\n"),
  info_style("Cette analyse attribuera √† chaque utilisateur une personnalit√© parmi 27 profils types, chacun d√©fini par des caract√©ristiques pr√©cises. Ces personnalit√©s refl√®tent les r√©sultats de notre analyse approfondie.\n\n"),
  section_title_style("Les fonctionnalit√©s accessibles et disponibles :\n"),
  highlight_style("1. CryptoAcademy : "),
  info_secondary_style("- D√©veloppez vos comp√©tences gr√¢ce √† une plateforme √©ducative immersive, id√©ale pour les novices qui souhaitent d√©couvir ce magnifique univers.\n"),
  highlight_style("2. P√©piteHunter : "),
  info_secondary_style("- Gr√¢ce √† notre outil unique qui analyse les tendances de recherche sur le web, identifiez rapidement les cryptos susceptibles de d√©clencher un run. "),
  info_secondary_style("- Pour √©viter les FOMO et prendre des d√©cisions √©clair√©es sur les opportunit√©s √† ne pas manquer.\n"),
  highlight_style("3. Cryptonews : "),
  info_secondary_style("- Suivez les actualit√©s r√©glementaires et anticipez les impacts sur vos investissements.\n"),
  highlight_style("4. Marketscope : "),
  info_secondary_style("- Analysez la position actuelle du Bitcoin par rapport √† son historique."),
  info_secondary_style("- Identifiez les moments o√π les altcoins dominent ou o√π Bitcoin reprend la t√™te."),
  info_secondary_style("- Visualisez le march√©, les cryptos √† forte capitalisation, suivez les tendances g√©n√©rales du march√©."),
  info_secondary_style("- Analysez en d√©tail une cryptomonnaie sp√©cifique pour prendre des d√©cisions √©clair√©es.\n\n"),
  success_style("CryptoWise Copilote, c'est l'outil parfait pour apprendre √† investir avec confiance, √©thique et strat√©gie.\n"),
  section_title_style("Note explicative sur l'acc√®s aux fonctionnalit√©s selon le profil utilisateur\n"),
  info_style("Chez CryptoWise, nous adoptons une d√©marche responsable et p√©dagogique pour accompagner chaque utilisateur en fonction de son profil type. Voici les r√®gles d'acc√®s √† nos fonctionnalit√©s :\n"),
  highlight_style("1. Profils √† qui il sera d√©conseill√© d'entrer sur le march√© :\n"),
  info_secondary_style("Animaux associ√©s : Dodo ü¶§, Singe hurleur üêí,  Lapin üêá, Ch√®vre des falaises üêê, Panda üêº, Canard ü¶Ü, Paresseux ü¶• \n"),
  info_style("Ces utilisateurs pr√©sentent une combinaison de faible capacit√© d‚Äôinvestissement, faible ou moyen niveau de connaissances et un app√©tit pour le risque mal adapt√©. "),
  info_style("Pour prot√©ger ces profils d‚Äôune prise de risque inconsid√©r√©e et √©viter des pertes importantes, ils pourront avoir acc√®s uniquement √† CryptoAcademy. "),
  info_style("L'objectif serait de leur permettre de renforcer leurs connaissances avant de consid√©rer un investissement √©ventuel.\n\n"),
  highlight_style("2. Profils pouvant investir avec des efforts suppl√©mentaires :\n"),
  info_secondary_style("Animaux associ√©s : Manchot, Certf, Faucon p√®lerin ü¶Ö,, Loutre ü¶¶, Serpent üêç , Blaireau ü¶° , Koala üê® , Gu√©pard üêÜ, Tortue g√©ante,  Castor ü¶´, Tigre üêÖ, H√©ron ü¶© \n"),
  info_style("Ces utilisateurs disposent de capacit√©s financi√®res ou d‚Äôun app√©tit pour le risque mod√©r√©, mais un manque de connaissances peut freiner leur r√©ussite. "),
  info_style("Ils auront la possibilit√© de d√©bloquer l'acc√®s aux outils avanc√©s apr√®s avoir suivi les modules √©ducatifs propos√©s et r√©ussi les tests d'√©valuation. "),
  info_style("Cela leur permettrait d'investir en toute confiance et avec une meilleure ma√Ætrise du march√©.\n\n"),
  highlight_style("3. Profils experts et totalement capables d'investir :\n"),
  info_secondary_style("Animaux associ√©s : Hibou ü¶â, Chameau üê™, √âl√©phant üêò, Lynx üê±, Ours brun üêª, Aigle imp√©rial ü¶Ö, Loup gris üê∫ \n"),
  info_style("Ces utilisateurs combinent une solide capacit√© d'investissement, des connaissances approfondies et un app√©tit pour le risque qui peut √™tre assum√©. "),
  info_style("Ils auront un acc√®s imm√©diat √† toutes les fonctionnalit√©s, sans restrictions, d√®s leur inscription.\n\n"),
  success_style("Conclusion :"),
  info_style("Notre approche garantit que chaque utilisateur dispose des outils adapt√©s √† son niveau. Vous progressez √† votre rythme avec des choix √©clair√©s et s√©curis√©s.\n")
)


# Texte de bienvenue
welcome_message_text <- c(
  section_title_style("--- Bienvenue sur Smartprofile dans l'univers de CryptoWise Copilote ! ---\n"),
  info_style("Merci d'avoir accept√© de commencer ce voyage avec nous.\n"),
  info_style("Nous allons explorer ensemble votre potentiel d'investissement et obtenir des informations cl√©s sur votre profil.\n\n"),
  
  success_style("Voici comment cela va se d√©rouler :\n"),
  
  highlight_style("1. Construire votre profil d'investisseur :\n"),
  info_secondary_style(" - Vous r√©pondrez √† une s√©rie de questions pour analyser vos pr√©f√©rences de risque, vos capacit√©s financi√®res, et vos connaissances g√©n√©rales.\n"),
  info_secondary_style(" - √Ä la fin de cette √©tape, nous obtiendrons des premi√®res informations essentielles pour d√©terminer votre profil type. "),
  info_secondary_style("Cependant, pour √©tablir votre profil animal comportemental d'investisseur, il faudra compl√©ter la deuxi√®me √©tape.\n\n"),
  
  highlight_style("2. Tester vos connaissances :\n"),
  info_secondary_style(" - Cette √©tape permettra en effet d'√©valuer vos connaissances actuelles afin de mieux comprendre votre niveau.\n"),
  info_secondary_style(" - Ce n‚Äôest qu‚Äôapr√®s cette √©tape que vous d√©couvrirez en d√©tail votre comportement d'investisseur et l'annimal qui sommeil en vous.\n\n"),
  
  info_style("Bas√© sur ce r√©sultat final, nous pourrons d√®s lors vous proposer les diff√©rentes fonctionnalit√©s de notre application adapt√©es √† votre profil.\n")
)

####################################################################################################
###
#####                                   
######                                   
#
#
##                                          √âTAPE 1
#####
###
###
###
####
####
###################################################################################################

#####################################################################################################################
# Fonction pour d√©marrer l'application
#####################################################################################################################

start_app1 <- function() {
  # Afficher le texte d'introduction avec style
  cat(intro_text, sep = "\n")
  
  # Poser la premi√®re question avec validation stricte
  repeat {
    cat(question_style("\nSouhaitez-vous r√©volutionner votre approche d‚Äôinvestissement et de d√©couverte des cryptos ? (oui/non) : "))
    response <- tolower(readline())
    if (response %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (response == "oui") {
    # Afficher le message de bienvenue avec style
    cat(welcome_message_text, sep = "\n")
    
    # Poser la deuxi√®me question avec validation stricte
    repeat {
      cat(question_style("\n√ätes-vous pr√™t √† commencer la premi√®re √©tape ? (oui/non) : "))
      start_response <- tolower(readline())
      if (start_response %in% c("oui", "non")) break
      cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
    }
    
    if (start_response == "oui") {
      cat(success_style("\nParfait, lan√ßons l'application et commen√ßons ! üöÄ\n"))
    } else {
      cat(warning_style("\nD'accord, vous pouvez revenir quand vous serez pr√™t. √Ä bient√¥t !\n"))
      return(NULL)
    }
  } else {
    cat(warning_style("\nOh non, nous sommes trop tristes de ne pas pouvoir initier ce voyage ensemble. Revenez quand vous voulez !\n"))
    return(NULL)
  }
  
  # Variables pour stocker les r√©ponses
  state <- list(
    prenom = NULL,
    age = NULL,
    risk = NULL,
    revenus_mensuels = NULL,
    epargne_totale = NULL,
    investissement = NULL,
    horizon = NULL
  )
  
  profile_validated <- FALSE
  
  while (!profile_validated) {
    current_question <- "prenom"
    
    # Boucle principale du questionnaire
    while (TRUE) {
      if (current_question == "prenom") {
        cat(question_style("\nQuel est votre pr√©nom ? "))
        state$prenom <- readline()
        
        while (nchar(state$prenom) == 0 || grepl("[0-9\\W]", state$prenom)) {
          cat(warning_style("\nVeuillez entrer un pr√©nom valide (lettres uniquement, sans caract√®res sp√©ciaux) : "))
          state$prenom <- readline()
        }
        current_question <- "age"
      }
      
      if (current_question == "age") {
        cat(question_style("\nQuel est votre √¢ge ? (entrez uniquement le chiffre ou 0 pour revenir √† la question pr√©c√©dente) "))
        state$age <- readline()
        
        if (state$age == "0") {
          current_question <- "prenom"
          next
        }
        
        while (!grepl("^[0-9]+$", state$age)) {
          cat(warning_style("\nVeuillez entrer uniquement des chiffres : "))
          state$age <- readline()
        }
        state$age <- as.numeric(state$age)
        
        if (state$age < 18) {
          cat(warning_style("\nD√©sol√©, vous n'avez pas l'√¢ge requis pour utiliser notre plateforme.\n"))
          cat(info_style("Revenez lorsque vous aurez 18 ans r√©volus.\n"))
          return(NULL)
        }
        current_question <- "risk"
      }
      
      
      ################################################################
      # Partie RISK
      ################################################################
      
      if (current_question == "risk") {
        
        # Flag pour d√©tecter si l'utilisateur veut revenir √† la question pr√©c√©dente (age)
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nComment vous percevez-vous face au risque ?\n\n"))
          cat("1. ", question_style("Risquophobe\n"))
          cat("2. ", question_style("Risquophile\n"))
          cat("3. ", question_style("Neutre au risque\n"))
          cat(info_style("\nVotre choix (1-3 ou 0 pour revenir √† la question pr√©c√©dente) : "))
          
          state$risk <- readline()
          
          # G√©rer le retour en arri√®re si l'utilisateur tape 0
          if (state$risk == "0") {
            current_question <- "age"
            user_return <- TRUE
            break  # on sort de la boucle repeat
          }
          
          # Validation des choix
          while (!state$risk %in% c("1", "2", "3")) {
            cat(warning_style("Veuillez entrer 1, 2 ou 3 : "))
            state$risk <- readline()
          }
          
          # ---------------------------------------------------------
          # Cas 1 : Risquophobe
          if (state$risk == "1") {
            cat(success_style("\nEn choisissant 'risquophobe', cela signifie que vous √™tes √† l'aise uniquement avec des placements comportant une perte ou un gain maximal d'environ 5%.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(warning_style("\nATTENTION : Les Cryptomonnaies ne garantissent pas le capital. L'investissement en cryptomonnaies comporte des risques √©lev√©s non adapt√©s aux personnes risquophobes.\n\n "))
              cat(info_style("Votre profil de risque n'est donc pas adapt√© au march√© des cryptomonnaies. Cependant, voici une liste de placements alternatifs :\n\n "))
              cat(info_secondary_style("- Comptes d'√©pargne : Rendement esp√©r√© inf√©rieur √† 2%, risque tr√®s faible.\n"))
              cat(info_secondary_style("- Obligations d'√âtat : Rendement esp√©r√© inf√©rieur √† 4%, risque faible.\n"))
              cat(info_secondary_style("- Fonds en euros (assurances-vie) : Rendement esp√©r√© inf√©rieur √† 3%, risque tr√®s faible.\n"))
              cat(info_secondary_style("- Obligations index√©es sur l'inflation : Rendement esp√©r√© inf√©rieur √† 3,5%, risque faible.\n"))
              cat(info_secondary_style("- ETF obligataires ou peu volatils : Rendement esp√©r√© inf√©rieur √† 5%, risque faiblement mod√©r√©.\n"))
              cat(info_style("\n Note : Les rendements des produits cit√©s d√©pendent fortement des conditions de march√© et des contrats associ√©s.\n\n "))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† contacter votre banquier ou tout autre professionnel afin d'explorer des alternatives de placement pour s√©curiser votre capital.\n"))
                return(NULL)
              } else {
                break  # on sort du repeat => risk valid√©
              }
            }
          }
          
          # ---------------------------------------------------------
          # Cas 2 : Risquophile
          if (state$risk == "2") {
            cat(success_style("\nEn choisissant 'risquophile', cela signifie que vous √™tes pr√™t √† tol√©rer des fluctuations importantes, pouvant d√©passer 20%, en qu√™te de gains √©lev√©s.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(success_style("\nVotre profil risque est compatible avec le march√© des cryptomonnaies. Cependant, ce march√© est hautement sp√©culatif et comparable √† :\n"))
              cat(info_secondary_style("- Le trading √† effet de levier : Rendement esp√©r√© non plafonn√©, risque tr√®s √©lev√©.\n"))
              cat(info_secondary_style("- Les options ou produits d√©riv√©s √† court terme : Rendement esp√©r√© non plafonn√©, risque tr√®s √©lev√©.\n"))
              cat(info_secondary_style("- Les investissements dans des start-ups : Rendement esp√©r√© sup√©rieur √† 15% sur le long terme, risque fort.\n"))
              cat(info_style("\nExemple concret des risques li√©s aux cryptos :\n"))
              cat(warning_style("- Exemple : Bitcoin (BTC) : Rendement annuel moyen de 200% sur 5 ans, mais baisse de plus de 80% entre 2017 et 2018.\n\n"))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† explorer d'autres options.\n"))
                return(NULL)
              } else {
                break
              }
            }
          }
          
          # ---------------------------------------------------------
          # Cas 3 : Neutre au risque
          if (state$risk == "3") {
            cat(success_style("\nEn choisissant 'neutre au risque', cela signifie que vous √™tes dispos√© √† accepter une fluctuation mod√©r√©e, avec des pertes ou des gains autour de 10%.\n"))
            cat(question_style("√ätes-vous d'accord avec cette d√©finition ? (oui/non) : "))
            confirm <- tolower(readline())
            while (!confirm %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirm <- tolower(readline())
            }
            if (confirm == "oui") {
              cat(info_style("\nVotre profil de risque est partiellement compatible avec le march√© des cryptomonnaies. Cependant, il reste important de noter que ce march√© est extr√™mement volatil.\n\n "))
              cat(info_secondary_style("- ETF diversifi√©s : Rendement esp√©r√© inf√©rieur √† 10%, risque mod√©r√©.\n"))
              cat(info_secondary_style("- Fonds √©quilibr√©s : Rendement esp√©r√© inf√©rieur √† 8%, risque mod√©r√©.\n"))
              cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
              response <- tolower(readline())
              while (!response %in% c("oui", "non")) {
                cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
                response <- tolower(readline())
              }
              if (response == "non") {
                cat(info_style("\nMerci de votre visite. N'h√©sitez pas √† explorer d'autres options.\n"))
                return(NULL)
              } else {
                break
              }
            }
          }
          
          # ---------------------------------------------------------
          # V√©rifier si l'utilisateur souhaite r√©ajuster son profil ou quitter
          if (confirm == "non") {
            cat(question_style("\nSouhaitez-vous r√©ajuster votre profil de risque ou quitter le module d'investissement ?\n"))
            cat("1. ", question_style("R√©ajuster le profil\n"))
            cat("2. ", question_style("Quitter le module\n"))
            action <- readline()
            while (!action %in% c("1", "2")) {
              cat(warning_style("Veuillez entrer 1 ou 2 : "))
              action <- readline()
            }
            if (action == "2") {
              cat(info_style("\nMerci pour votre visite.\n"))
              return(NULL)
            } else {
              next
            }
          }
          
          # On a valid√© => on sort de la boucle repeat
          break
        } # fin repeat
        
        # Si l'utilisateur veut revenir √† "age"
        if (user_return) {
          next
        } else {
          current_question <- "revenus_mensuels"
          next
        }
      }
      
      
      ##################################################
      ######################### Partie Recvenus Mensuels
      ##################################################
      
      if (current_question == "revenus_mensuels") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nDonnez-nous une estimation √† vue de nez de vos revenus totaux nets mensuels.\n\n"))
          cat(info_style("Incluez vos revenus du travail mais aussi tout autre revenu comme les allocations, investissements, etc.\n\n"))
          cat(question_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$revenus_mensuels <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$revenus_mensuels == "0") {
            current_question <- "risk"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$revenus_mensuels)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$revenus_mensuels <- readline()
          }
          
          state$revenus_mensuels <- as.numeric(state$revenus_mensuels)
          revenus_annuels <- state$revenus_mensuels * 12
          cat(success_style(sprintf("\nD'apr√®s nos estimations, vos revenus annuels sont de %s euros.\n", highlight_style(sprintf("%.2f", revenus_annuels)))))
          
          if (revenus_annuels < 19000) {
            cat(warning_style("\nATTENTION: Vos revenus indiquent que vous n'avez peut-√™tre pas de s√©curit√© financi√®re suffisante.\n"))
            cat(info_style("Le march√© des cryptos est extr√™mement risqu√© et demande une base financi√®re solide.\n\n"))
            cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "non") {
              cat(info_style("\nMerci pour votre visite. Revenez lorsque vous aurez une meilleure s√©curit√© financi√®re.\n"))
              return(NULL)
            }
          }
          
          # √âtape valid√©e, passer √† l'√©pargne
          current_question <- "epargne_totale"
          break
        }
        
        if (user_return) next
      }
      
      ######################### Partie √âpargne #########################
      if (current_question == "epargne_totale") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\n√Ä vue de nez, combien estimez-vous votre √©pargne totale disponible en euros ?\n\n"))
          cat(info_style("*Cela inclut votre √©pargne liquide (comptes courants) et moyennement liquide (PEA, etc.), mais exclut les actifs immobilis√©s comme l'immobilier.\n\n"))
          cat(question_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$epargne_totale <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$epargne_totale == "0") {
            current_question <- "revenus_mensuels"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$epargne_totale)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$epargne_totale <- readline()
          }
          
          state$epargne_totale <- as.numeric(state$epargne_totale)
          epargne_precaution <- state$revenus_mensuels * 6
          cat(success_style(sprintf("\nEn r√®gle g√©n√©rale, il est conseill√© d'avoir une √©pargne de pr√©caution √©quivalente √† six mois de revenus. Cette √©pargne n√©cessaire serait de %s euros.\n", highlight_style(sprintf("%.2f", epargne_precaution)))))
          
          if (state$epargne_totale < epargne_precaution) {
            cat(warning_style("\nATTENTION: Votre √©pargne est inf√©rieure √† l'√©pargne de pr√©caution recommand√©e.\n"))
            cat(info_style("Investir dans les cryptos est d√©conseill√© dans cette situation.\n"))
            cat(question_style("Souhaitez-vous quand m√™me continuer ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "non") {
              cat(info_style("\nMerci pour votre visite. Revenez lorsque votre √©pargne sera suffisante.\n"))
              return(NULL)
            }
          } else {
            montant_investissable <- state$epargne_totale - epargne_precaution
            cat(success_style(sprintf("\nD'apr√®s nos estimations, vous avez la capacit√© d'investir jusqu'√† %s euros.\n", highlight_style(sprintf("%.2f", montant_investissable)))))
          }
          
          # √âtape valid√©e, passer √† l'investissement
          current_question <- "investissement"
          break
        }
        
        if (user_return) next
      }
      
      ######################### Partie Investissement #########################
      if (current_question == "investissement") {
        user_return <- FALSE
        
        repeat {
          cat(question_style("\nCombien souhaitez-vous investir en cryptomonnaies (en euros) ?\n"))
          cat(info_style("(Entrez 0 pour revenir √† la question pr√©c√©dente) : "))
          state$investissement <- readline()
          
          # G√©rer le retour √† la question pr√©c√©dente
          if (state$investissement == "0") {
            current_question <- "epargne_totale"
            user_return <- TRUE
            break
          }
          
          # Validation de l'entr√©e
          while (!grepl("^[0-9]+$", state$investissement)) {
            cat(warning_style("Veuillez entrer uniquement des chiffres sans espaces ni symboles : "))
            state$investissement <- readline()
          }
          
          state$investissement <- as.numeric(state$investissement)
          
          if (state$investissement > (state$epargne_totale - epargne_precaution)) {
            cat(warning_style("\nATTENTION: Le montant d√©passe votre capacit√© d'investissement.\n"))
            cat(info_style("Cela pourrait vous exposer √† des risques financiers importants.\n\n"))
            cat(question_style("Souhaitez-vous r√©ajuster le montant d√©sir√© ? (oui/non) : "))
            response <- tolower(readline())
            
            while (!response %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              response <- tolower(readline())
            }
            
            if (response == "oui") {
              next  # Revenir √† la question investissement
            } else {
              current_question <- "horizon"
              break
            }
          } else {
            cat(success_style("\nTr√®s bien, le montant d√©sir√© correspond √† votre capacit√© d'investissement.\n"))
            cat(info_style("Nous passons √† la question suivante.\n"))
            current_question <- "horizon"
            break
          }
        }
        
        if (user_return) next
      }
      
      #############################################
      # Horizon d'investissement
      #############################################
      
      if (current_question == "horizon") {
        while (TRUE) { # Boucle pour relancer la question si n√©cessaire
          # Message indicatif g√©n√©ral
          cat(info_style("\n*Rappel th√©orique important : Investir √† court terme est plus risqu√© car les march√©s financiers sont plus volatils sur de courtes p√©riodes. "))
          cat(info_style("Cela laisse moins de temps pour compenser d'√©ventuelles pertes et rend l‚Äôinvestissement plus vuln√©rable aux fluctuations impr√©visibles. "))
          cat(info_style("√Ä l‚Äôinverse, un horizon long permet de lisser les rendements et de b√©n√©ficier des cycles de march√© pour r√©duire le risque.\n"))
          
          # Question sur l'horizon d'investissement
          cat(question_style("\nQuel est votre horizon d'investissement ?\n\n"))
          cat("1. ", question_style("Long terme (> 1 an)\n"))
          cat("2. ", question_style("Moyen long terme (6 mois)\n"))
          cat("3. ", question_style("Moyen court terme (1 mois)\n"))
          cat("4. ", question_style("Court terme (1 semaine)\n"))
          cat("5. ", question_style("Tr√®s court terme (journalier)\n"))
          cat(info_style("\nVotre choix (1-5 ou 0 pour revenir √† la question pr√©c√©dente) : "))
          state$horizon <- readline()
          
          if (state$horizon == "0") {
            current_question <- "investissement"
            break
          }
          
          while (!state$horizon %in% c("1", "2", "3", "4", "5")) {
            cat(warning_style("Veuillez entrer un chiffre entre 1 et 5 : "))
            state$horizon <- readline()
          }
          
          # Gestion des choix court terme
          if (state$horizon %in% c("4", "5")) {
            cat(warning_style("\nAttention : Les investissements √† court terme comportent des risques importants.\n"))
            cat(info_style("Les march√©s financiers sont tr√®s volatils sur de courtes p√©riodes, ce qui peut entra√Æner des pertes significatives.\n"))
            cat(info_style("Ce type d'investissement est souvent r√©serv√© √† des profils exp√©riment√©s et tol√©rants au risque.\n\n"))
            cat(question_style("Souhaitez-vous toujours continuer avec un horizon √† court terme ? (oui/non) : "))
            
            confirmation <- readline()
            
            while (!confirmation %in% c("oui", "non")) {
              cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
              confirmation <- readline()
            }
            
            if (confirmation == "non") {
              cat(warning_style("\nNous vous recommandons de r√©ajuster votre horizon d'investissement.\n"))
              cat(info_style("Reprenons la question sur l'horizon temporel.\n"))
              next # Recommence la boucle pour reposer la question
            }
          }
          # Si l'utilisateur valide son choix, on quitte la boucle
          break
        }
      }
      
      
      
      ###################################################################
      ################################# RECAP PROFIL
      ####################################################
      
      # Boucle de validation/modification
      profile_validated <- FALSE
      while (!profile_validated) {
        # Calcul des variables d√©pendantes
        revenus_annuels <- state$revenus_mensuels * 12
        epargne_precaution <- state$revenus_mensuels * 6
        montant_max_invest <- max(0, state$epargne_totale - epargne_precaution)
        
        # Calcul de la capacit√© d'investissement
        capacite_investissement <- ifelse(
          montant_max_invest == 0 || (montant_max_invest / epargne_precaution) < 0.1, 
          "Faible", 
          ifelse((montant_max_invest / epargne_precaution) < 0.3, 
                 "Moyen", 
                 "√âlev√©"
          )
        )
        
        # Calcul du score d'app√©tit pour le risque
        risk_score <- switch(state$risk, "1" = 2, "3" = 4, "2" = 6)  # Risquophobe=2, Neutre=4, Risquophile=6
        horizon_score <- as.numeric(state$horizon)  # Long terme=1, Tr√®s court terme=5
        appetit_risque_score <- risk_score + horizon_score
        
        # D√©terminer la cat√©gorie d'app√©tit pour le risque
        appetit_risque_categorie <- ifelse(
          appetit_risque_score <= 5, "Faible", 
          ifelse(appetit_risque_score <= 8, "Moyen", "√âlev√©")
        )
        
        # Afficher le r√©capitulatif
        cat(info_style("\nOK, maintenant nous pouvons vous proposer un r√©capitulatif de votre profil :\n\n"))
        cat("1. Pr√©nom : ", question_style(state$prenom), "\n")
        cat("2. √Çge : ", question_style(state$age), "\n")
        cat("3. Profil de risque : ", question_style(
          ifelse(state$risk == "1", "Risquophobe", 
                 ifelse(state$risk == "2", "Risquophile", "Neutre au risque"))), "\n")
        cat("4. Revenus mensuels : ", question_style(sprintf("%.2f", state$revenus_mensuels)), " euros\n")
        cat("5. Revenus annuels estim√©s : ", highlight_style(sprintf("%.2f", revenus_annuels)), " euros\n")
        cat("6. √âpargne totale : ", question_style(sprintf("%.2f", state$epargne_totale)), " euros\n")
        cat("7. √âpargne de pr√©caution estim√©e : ", highlight_style(sprintf("%.2f", epargne_precaution)), " euros\n")
        cat("8. Montant maximal conseill√© pour l'investissement : ", highlight_style(sprintf("%.2f", montant_max_invest)), " euros\n")
        cat("9. Capacit√© d'investissement estim√©e : ", highlight_style(capacite_investissement), "\n")
        cat("10. Montant d'investissement crypto souhait√© : ", question_style(sprintf("%.2f", state$investissement)), " euros\n")
        cat("11. Horizon d'investissement : ", question_style(
          switch(state$horizon,
                 "1" = "Long terme",
                 "2" = "Moyen long terme",
                 "3" = "Moyen court terme",
                 "4" = "Court terme",
                 "5" = "Tr√®s court terme")), "\n")
        cat("12. Score d'app√©tit pour le risque : ", highlight_style(appetit_risque_score), " (", appetit_risque_categorie, ")\n")
        
        # Demander confirmation
        cat(question_style("\n√ätes-vous d'accord avec les informations telles que pr√©sent√©es ? (oui/non) : "))
        confirm <- tolower(readline())
        while (!confirm %in% c("oui", "non")) {
          cat(warning_style("Veuillez r√©pondre par 'oui' ou 'non' : "))
          confirm <- tolower(readline())
        }
        
        if (confirm == "oui") {
          # Validation finale, cr√©ation du DataFrame
          profil_df <- data.frame(
            prenom = state$prenom,
            age = state$age,
            profil_risque = ifelse(state$risk == "1", "Risquophobe", 
                                   ifelse(state$risk == "2", "Risquophile", "Neutre au risque")),
            revenus_mensuels = state$revenus_mensuels,
            revenus_annuels = revenus_annuels,
            epargne_totale = state$epargne_totale,
            epargne_precaution_estimee = epargne_precaution,
            montant_max_invest_conseille = montant_max_invest,
            capacite_investissement = capacite_investissement, 
            montant_invest = state$investissement,
            horizon_invest = switch(state$horizon,
                                    "1" = "Long terme",
                                    "2" = "Moyen long terme",
                                    "3" = "Moyen court terme",
                                    "4" = "Court terme",
                                    "5" = "Tr√®s court terme"),
            appetit_risque_score = appetit_risque_score,
            appetit_risque_categorie = appetit_risque_categorie,
            stringsAsFactors = FALSE
          )
          
          # Enregistrement en format Excel
          write.xlsx(profil_df, file = "/Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_user.xlsx", rowNames = FALSE)
          cat(info_style("\nLe profil utilisateur a √©t√© enregistr√© avec succ√®s dans le fichier 'profil_user.xlsx'.\n"))
          
          profile_validated <- TRUE
          cat(success_style("\nParfait ! Votre profil est maintenant valid√©. Nous pouvons d√©sormais passer √† la prochaine √©tape.\n"))
          
        } else {
          # Modification demand√©e
          cat(question_style("\nQuelle information souhaitez-vous modifier ? (n'entrez que le num√©ro correspondant :1, 2, 3, 4, 6, 10 ou 11, les autres champs ne sont pas modifiables) : "))
          choice <- readline()
          while (!choice %in% c("1", "2", "3", "4", "6", "10", "11")) {
            cat(warning_style("Veuillez entrer un num√©ro valide (1, 2, 3, 4, 6, 10 ou 11) : "))
            choice <- readline()
          }
          
          # Modifier la valeur choisie
          if (choice == "1") {
            # Pr√©nom
            cat(question_style("Nouveau pr√©nom : "))
            state$prenom <- readline()
            while (nchar(state$prenom) == 0 || grepl("[^a-zA-Z ]", state$prenom)) {
              cat(warning_style("Veuillez entrer un pr√©nom valide (lettres uniquement) : "))
              state$prenom <- readline()
            }
          } else if (choice == "2") {
            # √Çge
            cat(question_style("Nouvel √¢ge : "))
            state$age <- readline()
            while (!grepl("^[0-9]+$", state$age) || as.numeric(state$age) < 18 || as.numeric(state$age) > 99) {
              cat(warning_style("Veuillez entrer un √¢ge valide (18-99 ans) : "))
              state$age <- readline()
            }
            state$age <- as.numeric(state$age)
          } else if (choice == "3") {
            # Profil de risque
            cat(question_style("Nouveau profil de risque (1 = Risquophobe, 2 = Risquophile, 3 = Neutre au risque) : "))
            state$risk <- readline()
            while (!state$risk %in% c("1", "2", "3")) {
              cat(warning_style("Veuillez entrer 1, 2 ou 3 : "))
              state$risk <- readline()
            }
          } else if (choice == "4") {
            # Revenus mensuels
            cat(question_style("Nouveaux revenus mensuels : "))
            state$revenus_mensuels <- readline()
            while (!grepl("^[0-9]+$", state$revenus_mensuels) || as.numeric(state$revenus_mensuels) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$revenus_mensuels <- readline()
            }
            state$revenus_mensuels <- as.numeric(state$revenus_mensuels)
          } else if (choice == "6") {
            # √âpargne totale
            cat(question_style("Nouvelle √©pargne totale : "))
            state$epargne_totale <- readline()
            while (!grepl("^[0-9]+$", state$epargne_totale) || as.numeric(state$epargne_totale) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$epargne_totale <- readline()
            }
            state$epargne_totale <- as.numeric(state$epargne_totale)
          } else if (choice == "10") {
            # Montant d'investissement
            cat(question_style("Nouveau montant d'investissement : "))
            state$investissement <- readline()
            while (!grepl("^[0-9]+$", state$investissement) || as.numeric(state$investissement) < 0) {
              cat(warning_style("Veuillez entrer un montant valide (positif) : "))
              state$investissement <- readline()
            }
            state$investissement <- as.numeric(state$investissement)
          } else if (choice == "11") {
            # Horizon d'investissement
            cat(question_style("Nouvel horizon d'investissement (1 = Long terme, 2 = Moyen long terme, 3 = Moyen court terme, 4 = Court terme, 5 = Tr√®s court terme) : "))
            state$horizon <- readline()
            while (!state$horizon %in% c("1", "2", "3", "4", "5")) {
              cat(warning_style("Veuillez entrer un chiffre entre 1 et 5 : "))
              state$horizon <- readline()
            }
          }
        }
      }
      
      break
    }
  }
  
  return(profil_df)
}

################################################################################
#
#
#                                  Etape 2
#
#
#
################################################################################


#########################################
###################

auto_evaluation <- function() {
  cat(section_title_style("\n=== √âtape 1 : Auto-√©valuation ===\n"))
  
  # Fonction pour valider les entr√©es utilisateur
  valider_entree <- function(message) {
    repeat {
      cat(question_style(message))
      entree <- readline()
      if (grepl("^\\d+$", entree) && as.numeric(entree) >= 0 && as.numeric(entree) <= 10) {
        return(as.numeric(entree))
      } else {
        cat(error_style("Veuillez entrer un nombre valide entre 0 et 10.\n"))
      }
    }
  }
  
  # Fonction pour valider une r√©ponse "oui" ou "non"
  valider_confirmation <- function(message) {
    repeat {
      cat(question_style(message))
      confirmation <- tolower(readline())
      if (confirmation %in% c("oui", "non")) {
        return(confirmation)
      } else {
        cat(warning_style("Veuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
      }
    }
  }
  
  # √âvaluation des connaissances financi√®res
  repeat {
    niveau_financier <- valider_entree(
      paste0(
        "\nSur une √©chelle de 0 √† 10, comment √©valuez-vous vos connaissances financi√®res g√©n√©rales ?\n",
        info_style("(0 : Aucune connaissance | 10 : Connaissance parfaite) : ")
      )
    )
    cat(info_style("\nCela signifie : "))
    if (niveau_financier <= 2) {
      cat(success_style("Vos connaissances financi√®res sont tr√®s faibles voire inexistantes.\n"))
    } else if (niveau_financier <= 4) {
      cat(success_style("Vos connaissances financi√®res sont limit√©es.\n"))
    } else if (niveau_financier <= 6) {
      cat(success_style("Vos connaissances financi√®res sont moyennes.\n"))
    } else if (niveau_financier <= 8) {
      cat(success_style("Vos connaissances financi√®res sont √©lev√©es.\n"))
    } else {
      cat(success_style("Vos connaissances financi√®res sont de niveau expert.\n"))
    }
    
    confirmation <- valider_confirmation("\n√ätes-vous d'accord avec cette √©valuation ? (oui/non) : ")
    if (confirmation == "oui") {
      break
    } else {
      cat(warning_style("\nVeuillez r√©√©valuer votre niveau.\n"))
    }
  }
  
  # √âvaluation des connaissances en cryptomonnaies
  repeat {
    niveau_crypto <- valider_entree(
      paste0(
        "\nSur une √©chelle de 0 √† 10, comment √©valuez-vous vos connaissances g√©n√©rales sur les cryptomonnaies ?\n",
        info_style("(0 : Aucune connaissance | 10 : Connaissance parfaite) : ")
      )
    )
    cat(info_style("\nCela signifie : "))
    if (niveau_crypto <= 2) {
      cat(info_style("Vos connaissances en cryptomonnaies sont tr√®s faibles voire inexistantes.\n"))
    } else if (niveau_crypto <= 4) {
      cat(info_style("Vos connaissances en cryptomonnaies sont limit√©es.\n"))
    } else if (niveau_crypto <= 6) {
      cat(info_style("Vos connaissances en cryptomonnaies sont moyennes.\n"))
    } else if (niveau_crypto <= 8) {
      cat(info_style("Vos connaissances en cryptomonnaies sont √©lev√©es.\n"))
    } else {
      cat(success_style("Vos connaissances en cryptomonnaies sont de niveau expert.\n"))
    }
    
    confirmation <- valider_confirmation("\n√ätes-vous d'accord avec cette √©valuation ? (oui/non) : ")
    if (confirmation == "oui") {
      break
    } else {
      cat(warning_style("\nVeuillez r√©√©valuer votre niveau.\n"))
    }
  }
  
  cat(success_style("\nMerci d'avoir compl√©t√© l'auto-√©valuation. Passons maintenant √† l'√©tape suivante !\n"))
  
  # Retourner les r√©sultats pour les √©tapes suivantes
  return(list(niveau_financier = niveau_financier, niveau_crypto = niveau_crypto))
}


####################################
# √âtape 2 : Test de connaissances
test_de_connaissances <- function(finance_questions, crypto_questions) {
  cat(section_title_style("\n=== √âtape 2 : Test de connaissances ===\n"))
  
  # Transition apr√®s l'auto-√©valuation
  cat(info_style("\nMaintenant que vous vous √™tes √©valu√©, testons concr√®tement vos connaissances !\n"))
  ready_response <- tolower(readline(question_style("√ätes-vous pr√™t √† commencer ? (oui/non) : ")))
  
  while (!ready_response %in% c("oui", "non")) {
    cat(warning_style("Veuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
    ready_response <- tolower(readline(question_style("√ätes-vous pr√™t √† commencer ? (oui/non) : ")))
  }
  
  if (ready_response == "non") {
    cat(info_style("\nTr√®s bien, dites-nous quand vous serez pr√™t.\n"))
    cat(info_style("Tapez 'ready' pour commencer ou 'bye' si vous voulez terminer le module.\n"))
    repeat {
      ready_response <- tolower(readline("Tapez votre r√©ponse : "))
      if (ready_response == "ready") {
        break
      } else if (ready_response == "bye") {
        cat(success_style("\nMerci d'avoir particip√© jusqu'ici. Revenez quand vous serez pr√™t pour poursuivre le test. √Ä bient√¥t !\n"))
        return(NULL)
      } else {
        cat(warning_style("R√©pondez uniquement par 'ready' ou 'bye'.\n"))
      }
    }
  }
  
  tirer_questions <- function(questions, domaine) {
    cat(section_title_style(paste0("\n=== Test de connaissances en ", domaine, " ===\n")))
    questions_sample <- questions[sample(1:nrow(questions), 20), ]  # Tirer 20 questions al√©atoires
    
    score <- 0  # Initialiser le score
    total_questions <- nrow(questions_sample)  # Nombre total de questions
    
    for (i in 1:total_questions) {
      question <- questions_sample[i, ]
      reponses <- c(question$BonneR√©ponse, question$MauvaiseR√©ponse1, question$MauvaiseR√©ponse2, question$MauvaiseR√©ponse3)
      reponses <- sample(reponses)  # M√©langer les r√©ponses
      
      # Afficher la question et les r√©ponses
      cat(highlight_style(paste0("\nQuestion ", i, ": ", question$Question, "\n")))
      for (j in 1:4) {
        cat(question_style(paste0(j, ". ", reponses[j], "\n")))
      }
      
      # Boucle pour valider la r√©ponse utilisateur
      repeat {
        user_response <- readline(question_style("Votre r√©ponse (1-4) : "))
        user_response <- tolower(user_response)  # G√©rer les r√©ponses non sensibles √† la casse
        
        # V√©rifier si un cheat code est entr√©
        if (user_response == "bardella") {
          cat(error_style("\nOh noooon! Vous avez os√© prononcer le mot tabou ! Pas de d√©bats ici, juste un aller simple vers le z√©ro absolu !\n"))
          score <- score  # Pas de points ajout√©s
          return(score)  # Terminer imm√©diatement
        } else if (user_response == "sesame") {
          cat(success_style("\nBravo ! Vous avez prononc√© la formule magique : 'S√©same, ouvre-toi !' Tous les tr√©sors des bonnes r√©ponses sont maintenant √† vous !\n"))
          score <- score + (total_questions - i + 1)  # Ajouter le score des questions restantes
          return(score)  # Terminer imm√©diatement
        }
        
        # V√©rifier si la r√©ponse est un chiffre valide (1-4)
        if (user_response %in% c("1", "2", "3", "4")) {
          user_response <- as.numeric(user_response)
          
          # V√©rifier si la r√©ponse est correcte
          if (reponses[user_response] == question$BonneR√©ponse) {
            cat(success_style("Bonne r√©ponse !\n"))
            score <- score + 1
          } else {
            cat(error_style(paste0("Mauvaise r√©ponse. La bonne r√©ponse √©tait : ", question$BonneR√©ponse, "\n")))
          }
          break  # Sortir de la boucle apr√®s une r√©ponse valide
        } else {
          # Message d'erreur pour r√©ponse invalide
          cat(warning_style("Veuillez entrer un chiffre entre 1 et 4.\n"))
        }
      }
    }
    
    return(score)  # Retourner le score final
  }
  
  
  # Test de connaissances en finance
  score_finance <- tirer_questions(finance_questions, "finance")
  note_finance <- score_finance / 2  # Calculer la note sur 10
  cat(success_style(paste0("\nVotre note en finance est : ", sprintf("%.2f", note_finance), "/10.\n")))
  
  # Transition entre les tests
  cat(highlight_style("\nBravo pour avoir termin√© le test de finance ! √ätes-vous pr√™t pour le test de connaissances en cryptomonnaies ?\n"))
  ready_response <- tolower(readline("R√©pondez 'oui' pour continuer ou 'non' pour attendre : "))
  
  while (!ready_response %in% c("oui", "non")) {
    cat(warning_style("Veuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
    ready_response <- tolower(readline("R√©pondez 'oui' pour continuer ou 'non' pour attendre : "))
  }
  
  if (ready_response == "non") {
    cat(info_style("\nTr√®s bien, dites 'ready' quand vous serez pr√™t ou 'bye' pour quitter.\n"))
    repeat {
      ready_response <- tolower(readline("Tapez votre r√©ponse : "))
      if (ready_response == "ready") {
        break
      } else if (ready_response == "bye") {
        cat(success_style("\nMerci d'avoir particip√© jusqu'ici. Revenez quand vous serez pr√™t pour poursuivre le test. √Ä bient√¥t !\n"))
        return(NULL)
      } else {
        cat(warning_style("R√©pondez uniquement par 'ready' ou 'bye'.\n"))
      }
    }
  }
  
  # Test de connaissances en cryptomonnaies
  score_crypto <- tirer_questions(crypto_questions, "cryptomonnaies")
  note_crypto <- score_crypto / 2  # Calculer la note sur 10
  cat(success_style(paste0("\nVotre note en cryptomonnaies est : ", sprintf("%.2f", note_crypto), "/10.\n")))
  
  # Message de fin
  cat(success_style("\nLes r√©sultats de vos tests sont termin√©s avec succ√®s !\n"))
  cat(info_style("Nous allons √† pr√©sent vous faire un r√©capitulatif d√©taill√© de vos r√©sultats.\n"))
  cat(info_style("Puis, vous d√©couvrirez enfin quel type d'animal investisseur crypto vous √™tes ! üêæ\n"))
  
  # Retourner les notes pour l'√©tape suivante
  return(list(note_finance = note_finance, note_crypto = note_crypto))
}

##############################################################
# √âtape 3 : Restitution de vos r√©sultats et Conclusion
#############################################################


comparaison_auto_eval <- function(auto_eval_result, test_result) {
  cat(section_title_style("\n=== √âtape 3 : Restitution de vos r√©sultats ===\n"))
  
  niveau_financier <- auto_eval_result$niveau_financier
  niveau_crypto <- auto_eval_result$niveau_crypto
  note_finance <- test_result$note_finance
  note_crypto <- test_result$note_crypto
  
  # Demander au user s'il souhaite d√©couvrir ses r√©sultats
  repeat {
    cat(question_style("\nNous avons calcul√© votre niveau de connaissance global. Souhaitez-vous le d√©couvrir ? (oui/non) : "))
    afficher_resultat <- tolower(readline())
    if (afficher_resultat %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (afficher_resultat == "non") {
    cat(info_style("\nDommage ! Nous √©tions impatients de vous montrer vos r√©sultats et de r√©v√©ler votre animal type. √Ä bient√¥t !\n"))
    return(NULL)
  }
  
  # Si le user accepte de voir ses r√©sultats
  cat(success_style("\nTr√®s bien ! Voici un r√©capitulatif de vos scores :\n"))
  
  # Afficher un tableau r√©capitulatif stylis√©
  recap_table <- data.frame(
    Crit√®re = c("Niveau Financier (Auto-√©valuation)", "Niveau Crypto (Auto-√©valuation)", "Note Finance (Test)", "Note Crypto (Test)"),
    Valeur = c(niveau_financier, niveau_crypto, sprintf("%.2f", note_finance), sprintf("%.2f", note_crypto))
  )
  print(recap_table)
  
  # Calcul de la moyenne g√©n√©rale pond√©r√©e
  moyenne_generale <- 0.65 * note_crypto + 0.35 * note_finance
  cat(success_style(paste0("\nVotre moyenne g√©n√©rale est de : ", highlight_style(sprintf("%.2f", moyenne_generale), "\n"))))
  
  # Expliquer la pond√©ration de la moyenne
  cat(info_style("\n Note : Cette moyenne g√©n√©rale est pond√©r√©e en faveur de vos connaissances en cryptomonnaies pour refl√©ter les objectifs de cette application.\n\n "))
  
  # Comparaison des scores pour les connaissances financi√®res
  cat(success_style("\nR√©sultats pour vos connaissances financi√®res :\n\n"))
  if (abs(note_finance - niveau_financier) <= 1) {
    cat(highlight_style("Votre perception de vos connaissances financi√®res √©tait correcte.\n"))
    cat(info_style("Bravo, votre √©valuation √©tait pr√©cise, vous savez √™tre r√©aliste et perspicace !\n"))
  } else if (note_finance > niveau_financier) {
    cat(highlight_style("Vous vous √™tes sous-√©valu√© dans vos connaissances financi√®res.\n"))
    cat(info_style("Ne soyez pas si modeste, vos connaissances sont meilleures que vous ne le pensez. Faites-vous davantage confiance !\n"))
  } else {
    cat(warning_style("Vous vous √™tes sur√©valu√© dans vos connaissances financi√®res.\n"))
    cat(info_style("Faite attention, car il semblerait que vous soyez un peu trop confiant. Cela pourrait jouer des tours dans vos d√©cisions futures d'investissement !\n"))
  }
  
  # Comparaison des scores pour les connaissances en cryptomonnaies
  cat(success_style("\nR√©sultats pour vos connaissances en cryptomonnaies :\n\n"))
  if (abs(note_crypto - niveau_crypto) <= 1) {
    cat(highlight_style("Votre perception de vos connaissances en cryptomonnaies √©tait correcte.\n"))
    cat(info_style("Bravo, vous avez une excellente perception de vos comp√©tences. Continuez ainsi !\n"))
  } else if (note_crypto > niveau_crypto) {
    cat(highlight_style("Vous vous √™tes sous-√©valu√© dans vos connaissances en cryptomonnaies.\n"))
    cat(info_style("Vous √™tes meilleur que vous ne le pensez ! Croyez un peu plus en vos capacit√©s et osez vous lancer.\n"))
  } else {
    cat(warning_style("Vous vous √™tes sur√©valu√© dans vos connaissances en cryptomonnaies.\n"))
    cat(info_style("Faites attention √† ne pas vous reposer sur une confiance excessive. Soyez pr√™t √† apprendre davantage !\n"))
  }
  
  # Classification de la moyenne g√©n√©rale
  cat(section_title_style("\n=== Niveau global de connaissances ===\n"))
  if (moyenne_generale < 4.5) {
    cat(info_secondary_style("\nVotre niveau de connaissance est FAIBLE.\n\n"))
    cat(highlight_style("Il faut continuez √† explorer et √† apprendre, vous allez progresser !\n"))
  } else if (moyenne_generale <= 6.9) {
    cat(info_secondary_style("\nVotre niveau de connaissance est MOYEN.\n\n"))
    cat(highlight_style("C'est un bon d√©part ! Continuez sur cette lanc√©e pour approfondir vos connaissances.\n"))
  } else {
    cat(info_secondary_style("\nVotre niveau de connaissance est √âLEV√â.\n\n"))
    cat(highlight_style("F√©licitations ! Vous ma√Ætrisez d√©j√† beaucoup de concepts, continuez √† exceller.\n"))
  }
  
  # Transition vers l'√©tape suivante
  cat(success_style("\nTr√®s bien, maintenant que nous connaissons vos r√©sultats...\n"))
  cat(info_style("Nous avons r√©colt√© assez d'informations pour d√©terminer votre type de personnalit√© et votre animal investisseur.\n"))
  
  # Retourner les r√©sultats pour les √©tapes suivantes
  return(list(
    note_finance = note_finance,
    note_crypto = note_crypto,
    moyenne_generale = moyenne_generale
  ))
}
##########################
# √âtape 4 : Mise √† jour des donn√©es utilisateur
###################################

mise_a_jour_profil <- function(profil_df, auto_eval_result, resultats_comparaison, output_file) {
  
  # Ajouter les nouvelles colonnes avec les r√©sultats
  updated_profil_df <- profil_df
  updated_profil_df$auto_eval_finance <- auto_eval_result$niveau_financier
  updated_profil_df$auto_eval_crypto <- auto_eval_result$niveau_crypto
  updated_profil_df$note_finance <- resultats_comparaison$note_finance
  updated_profil_df$note_crypto <- resultats_comparaison$note_crypto
  updated_profil_df$moyenne_generale <- resultats_comparaison$moyenne_generale
  
  # Ajouter une nouvelle colonne pour la cat√©gorie de niveau global
  updated_profil_df$niveau_connaissance <- ifelse(
    updated_profil_df$moyenne_generale < 4.5, "Faible",
    ifelse(updated_profil_df$moyenne_generale <= 6.9, "Moyen", "√âlev√©")
  )
  
  # Sauvegarder le nouveau fichier
  write.xlsx(updated_profil_df, file = output_file, rowNames = FALSE)
  
  # Retourner le nouveau DataFrame pour v√©rification ou usage futur
  return(updated_profil_df)
}

##################################################################################
######## ANNIMAL TYPE ##################
##################################################################################

# Matrice des profils d'investisseurs et animaux associ√©s
matrice_profils <- list(
  list(capacite = "Faible", connaissance = "Faible", risque = "√âlev√©", animal = "üê¶ Dodo", description = "Le Dodo est un esprit aventureux, mais h√©las, il agit avant de r√©fl√©chir. Sa nature impulsive le pousse √† foncer dans le brouillard, souvent sans √©valuer les cons√©quences. Malgr√© une bonne dose de d√©termination, son manque de strat√©gie lui joue fr√©quemment des tours. Il vit dans l'instant pr√©sent, oubliant que les ressources ne sont pas infinies.",
       conseil = "Apprenez √† analyser avant de vous lancer. Prenez le temps de comprendre le march√© et √©vitez les d√©cisions impulsives. Travaillez sur une approche m√©thodique pour √©viter l'extinction de vos finances."),
  list(capacite = "Faible", connaissance = "Faible", risque = "Moyen", animal = "ü¶î H√©risson", description = "Timide et prudent, l‚ÄôH√©risson se recroqueville au moindre signe de danger. Cette attitude le prot√®ge des grandes catastrophes, mais peut aussi lui faire rater des opportunit√©s int√©ressantes. Il avance petit √† petit, pr√©f√©rant la s√©curit√© au risque", 
       conseil = "Diversifiez vos investissements, mais osez sortir un peu de votre zone de confort. Parfois, un petit risque calcul√© peut ouvrir des portes insoup√ßonn√©es."),
  list(capacite = "Faible", connaissance = "Faible", risque = "Faible", animal = "üêá Lapin", description = "Le Lapin est nerveux par nature. Toujours sur le qui-vive, il fuit face aux opportunit√©s, de peur de se tromper ou de perdre gros. Cette hyperactivit√© mentale peut l'√©puiser et le rendre incapable de prendre des d√©cisions solides."
       ,conseil= "Apprenez √† calmer vos craintes et √† √©valuer les opportunit√©s rationnellement. Un bon plan structur√© peut vous √©viter de passer √† c√¥t√© d‚Äôinvestissements fructueux."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "√âlev√©", animal = "üêê Ch√®vre des falaises", description = "Intr√©pide et d√©termin√©, la Ch√®vre des falaises n‚Äôa pas peur de gravir des terrains accident√©s. Cependant, sa t√©m√©rit√© l‚Äôexpose √† des chutes parfois spectaculaires. Elle manque parfois de recul pour √©valuer les risques.",
       conseil =" Apprenez √† canaliser votre courage en prenant des risques mesur√©s. Ne grimpez pas sans avoir une corde de s√©curit√© : ayez toujours une strat√©gie de repli."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "Moyen", animal = "ü¶¶ Loutre", description = "Curieuse et joueuse, la Loutre avance tranquillement dans la vie. Elle sait utiliser ses ressources limit√©es avec pragmatisme, pr√©f√©rant progresser lentement mais s√ªrement. Elle aime apprendre tout en s‚Äôamusant.",
       conseil= "Restez fid√®le √† votre style d√©tendu, mais investissez dans des produits stables et peu volatils pour b√¢tir lentement un portefeuille durable."),
  list(capacite = "Faible", connaissance = "Moyen", risque = "Faible", animal = "ü¶Ü Canard", description = "Le Canard est calme, observateur, et pr√©f√®re naviguer paisiblement √† la surface des choses. Il est rarement pris de panique, mais son attitude nonchalante peut l‚Äôemp√™cher d‚Äôagir au bon moment.",
       conseil= "Utilisez votre patience comme un atout, mais ne restez pas trop passif. Rep√©rez les bons moments pour agir et faites des mouvements r√©fl√©chis."),
  list(capacite = "Faible", connaissance = "√âlev√©", risque = "√âlev√©", animal = "üêç Serpent", description = "Opportuniste et rus√©, le Serpent est un ma√Ætre strat√®ge. Il sait attendre patiemment son heure pour attaquer au bon moment. Agile et calculateur, il maximise chaque opportunit√©, mais son go√ªt pour le risque peut parfois le mettre en danger.",
       conseil= "Continuez √† optimiser vos choix, mais ne mettez pas tout en jeu sur un seul coup. Pensez √† diversifier pour limiter vos risques tout en profitant de vos comp√©tences."),
  list(capacite = "Faible", connaissance = "√âlev√©", risque = "Moyen", animal = "ü¶â Hibou", description = "Sage et r√©fl√©chi, l‚ÄôHibou observe tout depuis les hauteurs. Il ne se pr√©cipite jamais, pr√©f√©rant analyser les faits avant d‚Äôagir. Sa clairvoyance lui permet de prendre des d√©cisions avis√©es, bien qu‚Äôil puisse manquer d‚Äôaudace.",
       conseil="Continuez √† vous appuyer sur vos connaissances, mais prenez un peu plus de risques calcul√©s. La prudence est un atout, mais ne vous freinez pas trop.

"),
  list(capacite = "Faible", connaissance = "√âlev√©", risque = "Faible", animal = "üêß Manchot", description = "R√©silient et m√©thodique, le Manchot compense ses limitations physiques par une incroyable capacit√© d‚Äôadaptation. Sa patience lui permet de r√©sister aux √©preuves et d‚Äôavancer malgr√© les vents contraires.",
       conseil="Conservez votre discipline et votre approche rigoureuse. Investissez dans des produits √† long terme qui correspondent √† votre endurance."),
  list(capacite = "Moyen", connaissance = "Faible", risque = "√âlev√©", animal = "üêí Singe hurleur", description = "Curieux et plein d‚Äô√©nergie, le Singe hurleur s‚Äôaventure souvent sur des terrains inconnus sans v√©ritable plan. D√©sorganis√© et impulsif, il agit sous l‚Äôexcitation du moment, parfois au d√©triment de la prudence. Son enthousiasme est contagieux, mais il doit apprendre √† le canaliser.",
       conseil="Prenez le temps de structurer vos choix. Votre curiosit√© est un atout, mais couplez-la √† une recherche approfondie pour √©viter de prendre des risques inutiles."),
  list(capacite = "Moyen", connaissance = "Faible", risque = "Moyen", animal = " ü¶° blaireau", description = "Endurant et d√©termin√©, le Blaireau avance avec t√©nacit√© malgr√© les obstacles. Il est connu pour sa r√©silience et son courage, mais il manque parfois de connaissances pour optimiser ses efforts. Sa capacit√© √† s'adapter dans des environnements vari√©s en fait un exemple de pers√©v√©rance. Toutefois, il peut se montrer un peu born√© face √† des conseils ext√©rieurs.",
       conseil="Votre t√©nacit√© est un atout pr√©cieux, mais apprenez √† √©largir vos connaissances avant d‚Äôagir. Diversifiez vos investissements et entourez-vous de conseils √©clair√©s pour tirer pleinement parti de votre endurance."),
  list(capacite = "Moyen", connaissance = "Faible", risque = "Faible", animal = "ü¶• Paresseux", description = "Le Paresseux est l‚Äôincarnation de la tranquillit√©. Lent et d√©tach√©, il pr√©f√®re observer la vie passer plut√¥t que de se pr√©cipiter dans des d√©cisions. Cette attitude le prot√®ge des risques, mais le rend aussi passif face √† des opportunit√©s int√©ressantes.",
       conseil= "Apprenez √† sortir de votre confort et √† agir. Une dose d‚Äôaudace pourrait transformer votre approche en une strat√©gie gagnante."),
  list(capacite = "Moyen", connaissance = "Moyen", risque = "√âlev√©", animal = "ü¶Ö Faucon p√®lerin", description = "Strat√®ge et visionnaire, le Faucon p√®lerin rep√®re rapidement ses opportunit√©s et plonge avec pr√©cision. Cependant, son audace et sa rapidit√© peuvent le rendre imprudent s‚Äôil ne prend pas le temps d‚Äô√©valuer tous les facteurs.",
       conseil="Continuez √† viser haut, mais prenez quelques instants pour v√©rifier vos hypoth√®ses avant de foncer. Une strat√©gie bien calibr√©e vous permettra de voler encore plus haut.

"),
  list(capacite = "Moyen", connaissance = "Moyen", risque = "Moyen", animal = "ü¶´ Castor", description = "Travailleur acharn√©, le Castor aime b√¢tir m√©thodiquement. √âquilibr√© et pr√©voyant, il consacre du temps √† construire des fondations solides, mais il sait aussi s‚Äôadapter quand la situation l‚Äôexige.",
       conseil="Poursuivez votre strat√©gie structur√©e. Les fondations solides que vous posez aujourd‚Äôhui deviendront un atout pr√©cieux pour des investissements √† long terme."),
  list(capacite = "Moyen", connaissance = "Moyen", risque = "Faible", animal = "üêº Panda", description = "Paisible et r√©fl√©chi, le Panda pr√©f√®re la s√©curit√© et le confort. Bien qu‚Äôil ait une personnalit√© charmante, il peut manquer d‚Äôinitiative pour sortir de sa zone de confort et explorer de nouvelles opportunit√©s.",
       conseil="Exploitez votre calme pour investir dans des options stables, mais osez exp√©rimenter des choix l√©g√®rement plus audacieux pour diversifier votre portefeuille.

"),
  list(capacite = "Moyen", connaissance = "√âlev√©", risque = "√âlev√©", animal = "üêÖ Tigre", description = "Puissant et agile, le Tigre combine force et rapidit√© pour maximiser ses r√©sultats. Son instinct de chasseur lui permet de rep√©rer les meilleures opportunit√©s, mais son go√ªt du risque peut parfois le mettre en danger.",
       conseil="Continuez √† maximiser vos gains, mais gardez un ≈ìil sur vos limites. Diversifiez vos investissements pour s√©curiser vos succ√®s."),
  list(capacite = "Moyen", connaissance = "√âlev√©", risque = "Moyen", animal = "ü¶ä Lynx", description = "Silencieux et observateur, le Lynx est un expert en √©valuation des opportunit√©s. Il avance discr√®tement et n‚Äôagit qu‚Äôapr√®s avoir soigneusement √©tudi√© son environnement. Cette approche m√©thodique lui permet d‚Äô√©viter les erreurs.",
       conseil="Restez fid√®le √† votre approche analytique. Elle est un atout pour d√©tecter les opportunit√©s √† moyen terme tout en limitant les risques."),
  list(capacite = "Moyen", connaissance = "√âlev√©", risque = "Faible", animal = "üê® Koala", description = "Paisible et prudent, le Koala avance avec s√©r√©nit√©. Il choisit toujours des chemins s√ªrs et pr√©f√®re √©viter toute forme de stress. Bien qu‚Äôil soit parfois trop pr√©cautionneux, sa constance est un v√©ritable atout.",
       conseil="Continuez √† miser sur des placements stables et s√©curis√©s. Cependant, ouvrez-vous √† quelques options mod√©r√©ment risqu√©es pour augmenter l√©g√®rement votre rendement."),
  list(capacite = "√âlev√©", connaissance = "Faible", risque = "√âlev√©", animal = "üêÜ Gu√©pard", description = "Rapide et impressionnant, le Gu√©pard est un sprinter hors pair. Il agit avec une √©nergie explosive, mais son impulsivit√© peut le rendre incons√©quent. Il manque parfois de vision √† long terme et peut s'√©puiser rapidement s'il ne g√®re pas ses ressources.",
       conseil="Utilisez votre dynamisme pour saisir des opportunit√©s ponctuelles, mais apprenez √† √©quilibrer vos efforts. Pensez √† investir dans des produits √† court terme tout en √©laborant une strat√©gie durable."),
  list(capacite = "√âlev√©", connaissance = "Faible", risque = "Moyen", animal = "üê´ Chameau", description = "R√©silient et endurant, le Chameau avance avec d√©termination malgr√© des ressources parfois limit√©es. Il sait s‚Äôadapter √† des environnements difficiles et garde un ≈ìil sur ses priorit√©s. Cependant, son pragmatisme peut le rendre un peu rigide face aux nouvelles opportunit√©s.",
       conseil="Misez sur des strat√©gies √©quilibr√©es et √† long terme, mais restez ouvert √† des options plus dynamiques pour diversifier votre portefeuille."),
  list(capacite = "√âlev√©", connaissance = "Faible", risque = "Faible", animal = "ü¶å Cerf", description = "Timide et pr√©cautionneux, le Cerf pr√©f√®re √©viter les risques et rester dans un environnement s√©curis√©. Bien qu‚Äôil soit dot√© d‚Äôune grande capacit√©, il h√©site souvent √† l‚Äôexploiter pleinement par peur de l‚Äô√©chec.",
       conseil="Votre prudence est un atout, mais osez exploiter vos capacit√©s. Investissez dans des actifs s√ªrs tout en explorant prudemment des options √† faible risque.

"),
  list(capacite = "√âlev√©", connaissance = "Moyen", risque = "√âlev√©", animal = "ü¶© H√©ron", description = "Agile et pr√©cis, le H√©ron est un expert pour rep√©rer les bonnes opportunit√©s. Il sait attendre patiemment le moment id√©al pour agir, mais son go√ªt pour les d√©cisions rapides et risqu√©es peut parfois lui jouer des tours.",
       conseil="Continuez √† rep√©rer les opportunit√©s avec pr√©cision, mais prenez le temps d‚Äô√©valuer les risques avant d‚Äôagir. Une vision claire et une strat√©gie mesur√©e seront vos meilleurs alli√©s."),
  list(capacite = "√âlev√©", connaissance = "Moyen", risque = "Moyen", animal = "üêª Ours brun", description = "Puissant et stable, l‚ÄôOurs brun avance avec force et prudence. Sa patience et sa robustesse lui permettent de g√©rer les d√©fis sans perdre son calme. Cependant, il peut parfois √™tre trop lent √† r√©agir face √† des opportunit√©s urgentes.",
       conseil="Profitez de votre stabilit√© pour b√¢tir un portefeuille solide. Restez attentif aux tendances du march√© afin de ne pas manquer des occasions √† moyen terme."),
  list(capacite = "√âlev√©", connaissance = "Moyen", risque = "Faible", animal = "üê¢ Tortue g√©ante", description = "Sage et m√©thodique, la Tortue g√©ante avance lentement mais s√ªrement. Elle privil√©gie la s√©curit√© et prend des d√©cisions r√©fl√©chies. Bien que sa lenteur lui permette d‚Äô√©viter les erreurs, elle pourrait parfois acc√©l√©rer pour capter des opportunit√©s.",
       conseil="Continuez √† miser sur des placements stables et √† long terme, mais incluez quelques investissements dynamiques pour √©quilibrer votre approche."),
  list(capacite = "√âlev√©", connaissance = "√âlev√©", risque = "√âlev√©", animal = "ü¶Ö Aigle imp√©rial", description = "Visionnaire et puissant, l‚ÄôAigle imp√©rial survole les situations avec une perspective unique. Il sait rep√©rer les opportunit√©s strat√©giques gr√¢ce √† une vue d‚Äôensemble impressionnante, mais son audace peut parfois le pousser √† prendre des risques excessifs.",
       conseil="Exploitez votre vision strat√©gique, mais gardez un ≈ìil sur vos limites. Diversifiez vos placements pour assurer une croissance stable tout en maintenant un potentiel √©lev√©."),
  list(capacite = "√âlev√©", connaissance = "√âlev√©", risque = "Moyen", animal = "üê∫ Loup gris", description = "Intelligent et prudent, le Loup gris est un fin strat√®ge. Il √©value soigneusement les situations avant d‚Äôagir et maximise ses gains avec une efficacit√© redoutable. Sa capacit√© √† travailler en √©quipe ou en solo lui donne une grande flexibilit√©.",
       conseil="Continuez √† √©valuer et optimiser vos choix. Exploitez votre prudence naturelle pour √©quilibrer vos risques et b√¢tir une strat√©gie robuste."),
  list(capacite = "√âlev√©", connaissance = "√âlev√©", risque = "Faible", animal = "üêò √âl√©phant", description = "Imposant et r√©fl√©chi, l‚Äô√âl√©phant avance avec assurance. Sa sagesse et sa m√©moire exceptionnelle lui permettent de prendre des d√©cisions √©clair√©es. Bien qu‚Äôil avance lentement, il ne recule jamais devant un objectif ambitieux.",
       conseil="Restez fid√®le √† votre approche m√©thodique et r√©fl√©chie. Concentrez-vous sur des placements stables tout en explorant quelques options innovantes pour maintenir une croissance r√©guli√®re.

")
)

############

assign("animaux_scores", data.frame(
  Animal = c("üê¶ Dodo", "ü¶î H√©risson", "üêá Lapin", "üêê Ch√®vre des falaises", 
             "ü¶¶ Loutre", "ü¶Ü Canard", "üêç Serpent", "ü¶â Hibou", 
             "üêß Manchot", "üêí Singe hurleur", "ü¶° Blaireau", "ü¶• Paresseux", 
             "ü¶Ö Faucon p√®lerin", "ü¶´ Castor", "üêº Panda", "üêÖ Tigre", 
             "ü¶ä Lynx", "üê® Koala", "üêÜ Gu√©pard", "üê´ Chameau", "ü¶å Cerf", 
             "ü¶© H√©ron", "üêª Ours brun", "üê¢ Tortue g√©ante", "ü¶Ö Aigle imp√©rial", 
             "üê∫ Loup gris", "üêò √âl√©phant"),
  Capacit√© = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6),
  Connaissances = c(1, 1, 1, 3, 3, 3, 6, 6, 6, 1, 1, 1, 3, 3, 3, 6, 6, 6, 1, 1, 1, 3, 3, 3, 6, 6, 6),
  Risque = c(3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1, 3, 6, 1),
  Score = c(5, 8, 3, 7, 10, 5, 10, 13, 8, 7, 10, 5, 9, 12, 7, 12, 15, 10, 10, 13, 8, 12, 15, 10, 15, 18, 13)
), envir = .GlobalEnv)


#############################################################################################
######## Determination de l'annimal type
####################################################################################

determine_animal_type <- function(capacite, connaissance, risque, matrice_profils) {
  profil_animal <- matrice_profils[sapply(matrice_profils, function(x) {
    x$capacite == capacite &&
      x$connaissance == connaissance &&
      x$risque == risque
  })][[1]]
  
  if (is.null(profil_animal)) {
    return(list(
      animal = "Inconnu",
      emoji = "‚ùì",
      description = "Nous n'avons pas trouv√© de profil correspondant √† vos caract√©ristiques.",
      conseil = "Aucun conseil disponible."
    ))
  }
  
  return(list(
    animal = profil_animal$animal,
    emoji = ifelse(!is.null(profil_animal$emoji), profil_animal$emoji, ""), # Emoji peut √™tre NULL
    description = profil_animal$description,
    conseil = ifelse(!is.null(profil_animal$conseil), profil_animal$conseil, "Pas de conseil disponible.")
  ))
}

######################################
# D√©couverte de l'animal type
#####################################

animal_type_reveal <- function(user_data, matrice_profils) {
  cat(section_title_style("\n=== D√©couverte de votre animal type ===\n\n"))
  
  repeat {
    cat(question_style("Souhaitez-vous d√©couvrir votre animal type ? (oui/non) : "))
    decouvrir_animal <- tolower(readline())
    if (decouvrir_animal %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (decouvrir_animal == "non") {
    cat(info_style("\nOh non, nous √©tions si pr√®s du but ! Revenez quand vous serez pr√™t.\n"))
    return(NULL)
  }
  
  profil_animal <- determine_animal_type(
    user_data$capacite_investissement,
    user_data$niveau_connaissance,
    user_data$appetit_risque_categorie,
    matrice_profils
  )
  
  # V√©rification avant affichage
  if (!is.null(profil_animal)) {
    cat(success_style("\n‚ú® D'apr√®s nos analyses sur votre profil, il semblerait que pour le moment vous soyez : ‚ú®\n"))
    cat(highlight_style(paste0(profil_animal$animal, "\n")))
    
    # Affichage de la description (v√©rification qu'elle est bien pr√©sente)
    if (!is.null(profil_animal$description) && nzchar(profil_animal$description)) {
      cat(info_style(paste0("\nDescription : ", profil_animal$description, "\n")))
    } else {
      cat(warning_style("\nDescription : Aucune description disponible pour ce profil.\n"))
    }
    
    # Affichage du conseil (v√©rification qu'il est bien pr√©sent)
    if (!is.null(profil_animal$conseil) && nzchar(profil_animal$conseil)) {
      cat(highlight_style(paste0("\nConseil : ", profil_animal$conseil, "\n")))
    } else {
      cat(warning_style("\nConseil : Aucun conseil disponible pour ce profil.\n"))
    }
    
    # Conclusion
    cat(success_style("\nConclusion : "))
    if (user_data$niveau_connaissance == "Faible") {
      cat(warning_style("Votre profil indique que vous devriez encore approfondir vos connaissances avant d'investir dans les cryptos. Pas d'inqui√©tude, notre plateforme est l√† pour vous accompagner pas √† pas. üí™\n"))
    } else if (user_data$niveau_connaissance == "Moyen") {
      cat(info_style("Votre profil est en bonne voie pour investir dans les cryptos. Avec un peu plus d'exp√©rience, vous serez pr√™t √† saisir de grandes opportunit√©s. üöÄ\n"))
    } else if (user_data$niveau_connaissance == "√âlev√©") {
      cat(success_style("F√©licitations ! Votre profil est parfaitement adapt√© pour investir dans les cryptos. Continuez √† utiliser vos connaissances pour maximiser vos r√©sultats. üèÜ\n"))
    }
    
    # Message final
    cat(info_style("\nMaintenant que vous connaissez votre type d'investisseur, nous pouvons vous offrir un acc√®s personnalis√© √† nos outils d'investissement pour maximiser votre potentiel grace √† votre score annimal ! üåü\n"))
  } else {
    # Gestion du cas o√π profil_animal est NULL
    cat(error_style("\nErreur : Le profil animal est introuvable. Veuillez v√©rifier les param√®tres ou les donn√©es d'entr√©e. ‚ùå\n"))
  }
  
  return(list(
    animal_type = profil_animal$animal,
    animal_description = profil_animal$description
  ))
}

##############################################################
##### Determination de l'annimal score
##############################################################

determine_animal_score <- function(capacite, connaissance, risque) {
  # Conversion des inputs en scores
  capacite_points <- ifelse(capacite == "√âlev√©", 6, ifelse(capacite == "Moyen", 3, 1))
  connaissance_points <- ifelse(connaissance == "√âlev√©", 6, ifelse(connaissance == "Moyen", 3, 1))
  risque_points <- ifelse(risque == "Moyen", 6, ifelse(risque == "√âlev√©", 3, 1))
  
  # Calcul du score total
  animal_score <- capacite_points + connaissance_points + risque_points
  
  # Retourner le score calcul√©
  return(animal_score)
}


#######################################
# D√©couverte de l'Animal Score
#######################################

animal_score_reveal <- function(user_data) {
  cat(section_title_style("\n=== D√©couverte de votre Animal Score ===\n\n"))
  
  # Question √† l'utilisateur (plac√©e en premier)
  repeat {
    cat(question_style("Souhaitez-vous d√©couvrir votre Animal Score et les outils auxquels vous aurez acc√®s ? (oui/non) : "))
    decouvrir_score <- tolower(readline())
    if (decouvrir_score %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (decouvrir_score == "non") {
    cat(info_style("\nPas de probl√®me, revenez quand vous serez pr√™t √† d√©couvrir votre score.\n"))
    return(NULL)
  }
  
  # Calculer l'Animal Score
  animal_score <- determine_animal_score(
    capacite = user_data$capacite_investissement,
    connaissance = user_data$niveau_connaissance,
    risque = user_data$appetit_risque_categorie
  )
  
  # Explication approfondie de l'Animal Score (apr√®s la question)
  cat(highlight_style(
    "\n L'Animal Score est un indicateur cl√©, directement associ√© √† votre Animal Type.\n"
  ))
  cat(info_style(
    "Il permet de quantifier votre niveau. Le score minimum possible est (3) et le score maximum possible est (18).\n"
  ))
  
  cat("\n")
  
  # Pr√©sentation des outils CryptoWise Lite et Pro
  cat(question_style("üîç Quels outils sont disponibles avec CryptoWise ?\n"))
  
  # Pr√©sentation des outils CryptoWise Lite et Pro
  cat(info_secondary_style("1. CryptoWise Lite :\n"))
  cat(highlight_style("   ‚Ä¢ CryptoAcademy : "), "Apprenez tout sur le monde des cryptomonnaies et renforcez vos connaissances.\n\n")
  
  cat(info_secondary_style("2. CryptoWise Pro :\n"))
  cat(info_style("   Cette version avanc√©e inclut plusieurs outils puissants pour optimiser vos d√©cisions d'investissement :\n"))
  cat(highlight_style("   ‚Ä¢ P√©pitesHunter : "), "Identifiez les cryptomonnaies tendance.\n")
  cat(highlight_style("   ‚Ä¢ Cryptonews : "), "Suivez les √©volutions r√©glementaires.\n")
  cat(highlight_style("   ‚Ä¢ MarketScope : "), "Analysez, observez et √©valuez les performances globales du march√©.\n")
  
  # Importance du choix
  cat(success_style(
    "\nVotre Animal Score joue un r√¥le crucial dans la d√©termination des outils auxquels vous aurez acc√®s :\n"
  ))
  
  # Afficher le score et le message personnalis√© (apr√®s tout le reste)
  cat(success_style("\n‚ú® Votre Animal Score est : "), highlight_style(animal_score), "\n\n")
  
  if (animal_score < 7) {
    cat(warning_style(
      "Votre Animal Score indique que vous n'avez pas le profil ad√©quat pour investir sur le march√© des cryptos et que vous avez encore besoin de d√©velopper vos comp√©tences avant de pouvoir envisager d'investir pleinement.\n"
    ))
    cat("\n") # Espace entre les phrases
    cat(info_style(
      "Vous aurez donc acc√®s uniquement √† ", 
      info_secondary_style("CryptoWise Lite")
    ))
  } else if (animal_score >= 7 && animal_score <= 12) {
    cat(info_style(
      "Votre Animal Score montre que vous √™tes sur la bonne voie pour devenir un investisseur confirm√©, cependant un renforcement de votre niveau de connaissance du march√© s'impose.\n"
    ))
    cat("\n") # Espace entre les phrases
    cat(info_style(
      "Vous aurez pour le moment donc acc√®s uniquement √† ", 
      info_secondary_style("CryptoWise Interm√©diaire"), 
      ", qui comprend ", 
      highlight_style("CryptoAcademy"), 
      ". Cependant, avec un test de connaissances r√©ussi, vous pourrez d√©bloquer la version ", 
      info_secondary_style("CryptoWise Pro")
    ))
  } else if (animal_score > 12) {
    cat(success_style(
      "F√©licitations ! Votre Animal Score prouve que vous √™tes pr√™t √† investir sereinement.\n"
    ))
    cat("\n") # Espace entre les phrases
    cat(info_style(
      "Vous avez un acc√®s direct √† ", 
      info_secondary_style("CryptoWise Pro")))
  }
  
  # Phrase de remerciement
  cat("\n")
  cat(success_style(
    "Merci beaucoup d'avoir utilis√© notre outil d'analyse de votre profil.\n"
  ))
}


#######################################

start_app2 <- function() {
  cat(section_title_style("\n=== Passage √† l'√©tape 2 - √âvaluation de vos connaissance sur Smartprofile ===\n"))
  cat(success_style("\nVous avez d√©j√† d√©fini les bases de votre profil investisseur lors de la premi√®re partie.\n"))
  cat(info_style("\nNous avons appris √† mieux vous conna√Ætre en recueillant des informations cl√©s sur vos pr√©f√©rences de risque,\n"))
  cat(info_style("votre capacit√© financi√®re et votre horizon d‚Äôinvestissement.\n"))
  cat(highlight_style("\n--- √âtape suivante ---\n"))
  cat(info_style("\nNous allons maintenant approfondir votre profil en √©valuant vos connaissances financi√®res et en cryptomonnaies.\n"))
  cat(info_style("Ces tests, combin√©s √† votre auto-√©valuation, permettront de d√©terminer votre niveau global et de finaliser votre profil type.\n"))
  cat(info_style("√Ä l‚Äôissue de cette √©tape, vous d√©couvrirez quel type d‚Äôinvestisseur vous √™tes et recevrez des recommandations adapt√©es.\n\n"))
  cat(success_style("R√©sultats attendus :\n"))
  cat(info_secondary_style("- Un retour sur votre perception de vos comp√©tences.\n"))
  cat(info_secondary_style("- Une note g√©n√©rale sur vos connaissances.\n"))
  cat(info_secondary_style("- La mise √† jour de votre profil investisseur et la d√©couverte de votre animal type et animal score.\n\n"))
  cat(question_style("Appuyez sur Entr√©e pour continuer et plonger dans la deuxi√®me partie de l'analyse.\n"))
  readline()
  
  # √âtape 0 : Chargement des fichiers
  files <- load_files()
  profil_df <- files$profil_df
  finance_questions <- files$finance_questions
  crypto_questions <- files$crypto_questions
  
  # √âtape 1 : Auto-√©valuation
  auto_eval_result <- auto_evaluation()
  
  # √âtape 2 : Test de connaissances
  test_result <- test_de_connaissances(finance_questions, crypto_questions)
  
  # V√©rifie si l'utilisateur a compl√©t√© le test (si non, termine l'application)
  if (is.null(test_result)) {
    cat(warning_style("\nTest interrompu. Revenez quand vous serez pr√™t. Au revoir !\n"))
    return(NULL)
  }
  
  # √âtape 3 : Restitution des r√©sultats
  resultats_comparaison <- comparaison_auto_eval(auto_eval_result, test_result)
  
  # Lancer la mise √† jour du fichier utilisateur
  updated_profil_df <- mise_a_jour_profil(
    profil_df,
    auto_eval_result,
    resultats_comparaison,
    "//Users/mehdifehri/Desktop/Technique de programmation/Data work/updated_profil.xlsx"
  )
  
  # Assigner le dataframe √† l'environnement global
  assign("updated_profil_df", updated_profil_df, envir = .GlobalEnv)
  
  # √âtape 4 : D√©couverte de l'animal type
  animal_result <- animal_type_reveal(
    user_data = updated_profil_df,
    matrice_profils = matrice_profils
  )
  
  # Si l'utilisateur accepte, retourner les r√©sultats de l'animal type
  if (!is.null(animal_result)) {
    assign("animal_result", animal_result, envir = .GlobalEnv)
  }
  
  # √âtape 5 : D√©couverte de l'animal score
  animal_score_reveal(user_data = updated_profil_df)
  
  # √âtape 6 : Mise √† jour du DataFrame avec les nouvelles colonnes
  updated_profil_df <- updated_profil_df %>%
    mutate(
      animal_score = determine_animal_score(
        capacite = capacite_investissement,
        connaissance = niveau_connaissance,
        risque = appetit_risque_categorie
      ),
      version_debloquee = case_when(
        animal_score < 7 ~ "CryptoWise Lite",
        animal_score >= 7 & animal_score <= 12 ~ "CryptoWise Interm√©diaire",
        animal_score > 12 ~ "CryptoWise Pro"
      )
    )
  
  # Mise √† jour du DataFrame r√©capitulatif
  profil_recap <- updated_profil_df %>%
    mutate(
      type_animal = animal_result$animal_type,
      description = animal_result$animal_description,
      conseil = determine_animal_type(
        capacite = updated_profil_df$capacite_investissement,
        connaissance = updated_profil_df$niveau_connaissance,
        risque = updated_profil_df$appetit_risque_categorie,
        matrice_profils = matrice_profils
      )$conseil
    )
  
  # Assigner le DataFrame profil_recap dans l'environnement global
  assign("profil_recap", profil_recap, envir = .GlobalEnv)
  
  # Enregistrement du DataFrame profil_recap
  chemin_profil_recap <- "/Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_recap.xlsx"
  write_xlsx(profil_recap, chemin_profil_recap)
  
}


####################################################################################################
###
#####                                   
######                                   
#
#
##                                          Pepites Hunter
#####
###
###
###
####
####
###################################################################################################


############### P√©pites Hunter ###################
##############################################

# Chargement des biblioth√®ques n√©cessaires
library(crayon)  # Pour les styles de couleur
library(dplyr)   # Pour la manipulation des donn√©es
library(ggplot2) # Pour les visualisations (si n√©cessaire)
library(httr)    # Pour les appels API
library(jsonlite) # Pour travailler avec les donn√©es JSON
library(curl)
library(kableExtra)
library(cli)
library(scales)  # Pour le formatage des nombres
library(gtrendsR)

# D√©finition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline
pro_style <- red$bold  # Style pour PRO


################################################################################
############## Signal prix 
#################################################################################

#############################
# Dataframe global pour stocker les donn√©es
coingecko_data <- NULL

# Fonction pour t√©l√©charger les donn√©es depuis CoinGecko
download_coingecko_data <- function() {
  url <- "https://api.coingecko.com/api/v3/coins/markets"
  params <- list(
    vs_currency = "usd",
    order = "market_cap_desc",
    per_page = 250,
    page = 1,
    sparkline = FALSE
  )
  
  response <- GET(url, query = params)
  
  if (status_code(response) == 200) {
    data <- fromJSON(content(response, "text", encoding = "UTF-8"))
    assign("coingecko_data", data, envir = .GlobalEnv)
    cat(success_style("\nDonn√©es t√©l√©charg√©es avec succ√®s depuis CoinGecko !\n"))
  } else {
    cat(error_style("\nErreur lors de la r√©cup√©ration des donn√©es depuis CoinGecko. V√©rifiez votre connexion ou les param√®tres API.\n"))
    assign("coingecko_data", NULL, envir = .GlobalEnv)
  }
}

####################################################
# Fonction corrig√©e pour afficher un tableau avec colonnes fixes et couleurs
display_table_fixed_colored <- function(data, title) {
  # Largeurs fixes pour chaque colonne
  col_widths <- c(40, 15, 10)  # Largeurs pour chaque colonne
  
  # Fonction pour tronquer ou remplir les colonnes
  format_column <- function(column, width) {
    sapply(column, function(x) {
      x <- substr(x, 1, width)  # Tronque les cha√Ænes trop longues
      sprintf(paste0("%-", width, "s"), x)  # Ajoute des espaces si n√©cessaire
    })
  }
  
  # Formater les en-t√™tes
  header <- sprintf(
    "%-*s | %-*s | %-*s",
    col_widths[1], "Nom",
    col_widths[2], "Symbole",
    col_widths[3], "Variation"
  )
  
  # Formater les donn√©es
  formatted_data <- data.frame(
    Nom = format_column(data$name, col_widths[1]),
    Symbole = format_column(data$symbol, col_widths[2]),
    Variation = format_column(data$price_change_percentage_24h, col_widths[3])
  )
  
  # Appliquer des couleurs aux donn√©es
  formatted_data$Nom <- cli::col_cyan(formatted_data$Nom)
  formatted_data$Symbole <- cli::col_yellow(formatted_data$Symbole)
  formatted_data$Variation <- ifelse(
    as.numeric(gsub("%", "", data$price_change_percentage_24h)) >= 0,
    cli::col_green(formatted_data$Variation),  # Vert pour positif
    cli::col_red(formatted_data$Variation)    # Rouge pour n√©gatif
  )
  
  # Afficher le titre
  cat(cli::col_magenta(title), "\n")
  
  # Afficher les en-t√™tes
  cat(header, "\n")
  
  # Ligne de s√©paration
  cat(paste0(rep("-", sum(col_widths) + 6), collapse = ""), "\n")
  
  # Afficher chaque ligne de donn√©es
  for (i in 1:nrow(formatted_data)) {
    cat(sprintf(
      "%-*s | %-*s | %-*s\n",
      col_widths[1], formatted_data$Nom[i],
      col_widths[2], formatted_data$Symbole[i],
      col_widths[3], formatted_data$Variation[i]
    ))
  }
}


##########################################################
# Fonction pour analyser les variations de prix
process_price_signals <- function(data) {
  cat(section_title_style("\n=== Signal Prix ===\n"))
  
  cat(info_style("\nDans cette section, vous trouverez les "))
  cat(highlight_style("d√©tails des variations de prix des cryptomonnaies sur les derni√®res 24 heures"))
  cat(info_style(", tri√©es selon diff√©rents crit√®res pour une analyse pr√©cise et rapide.\n\n"))
  
  cat(success_style("=== Organisation des donn√©es : ===\n"))
  cat(info_style("- Les cryptomonnaies ayant connu "))
  cat(success_style("les plus fortes progressions"))
  cat(info_style(" sur 24 heures sont list√©es par ordre d√©croissant.\n"))
  cat(info_style("- Les cryptomonnaies ayant enregistr√© "))
  cat(warning_style("les plus fortes baisses"))
  cat(info_style(" sont tri√©es par ordre croissant.\n"))
  cat(info_style("- Nous mettons √©galement en avant un classement des "))
  cat(highlight_style("10 meilleures performances"))
  cat(info_style(" et des "))
  cat(highlight_style("10 pires performances"))
  cat(info_style(", pour identifier rapidement les signaux les plus marquants.\n\n"))
  
  cat(success_style("=== Source des donn√©es : ===\n"))
  cat(info_style("Les donn√©es affich√©es ici proviennent de "))
  cat(highlight_style("l'API CoinGecko"))
  cat(info_style(", une r√©f√©rence mondiale en mati√®re d‚Äôinformations sur les cryptomonnaies. Elles sont collect√©es et mises √† jour r√©guli√®rement pour garantir leur fiabilit√©.\n\n"))
  
  cat(success_style("=== Pr√©sentation des r√©sultats : ===\n"))
  cat(info_style("Les donn√©es sont organis√©es sous forme de tableaux contenant les informations suivantes :\n"))
  cat(info_style("- "))
  cat(highlight_style("Nom de la cryptomonnaie"))
  cat(info_style(" : Identification de l‚Äôactif.\n"))
  cat(info_style("- "))
  cat(highlight_style("Symbole"))
  cat(info_style(" : Abr√©viation officielle (par exemple, BTC pour Bitcoin).\n"))
  cat(info_style("- "))
  cat(highlight_style("Variation de prix sur 24h"))
  cat(info_style(" : Exprim√©e en pourcentage, arrondie √† deux d√©cimales pour plus de clart√©.\n\n"))
  
  cat(success_style("=== Structure des r√©sultats affich√©s : ===\n"))
  cat(info_style("1. "))
  cat(highlight_style("Top 50 Progressions"))
  cat(info_style(" : Liste des cryptomonnaies ayant enregistr√© les plus fortes hausses de prix.\n"))
  cat(info_style("2. "))
  cat(highlight_style("Top 50 Baisse"))
  cat(info_style(" : Liste des cryptomonnaies ayant subi les plus fortes baisses.\n"))
  cat(info_style("3. "))
  cat(highlight_style("Signaux Haussiers (Top 10)"))
  cat(info_style(" : Les 10 actifs les plus performants.\n"))
  cat(info_style("4. "))
  cat(highlight_style("Signaux Baissiers (Top 10)"))
  cat(info_style(" : Les 10 actifs ayant connu les plus grandes baisses.\n\n"))
  
  cat(warning_style("Note : "))
  cat(info_style("Ces donn√©es fournissent une vue d‚Äôensemble claire des mouvements r√©cents sur les 24 derni√®res heures.\n\n"))
  
  ############
  
  if (is.null(data) || nrow(data) == 0) {
    cat(error_style("\nErreur : Les donn√©es ne sont pas disponibles. Veuillez v√©rifier l'appel API.\n"))
    return()
  }
  
  ################## 
  # Nettoyage et pr√©paration des donn√©es
  cleaned_data <- data %>%
    select(name, symbol, price_change_percentage_24h) %>%
    mutate(
      price_change_percentage_24h = paste0(round(as.numeric(price_change_percentage_24h), 2), "%")
    )
  
  # Top 50 Progressions
  display_table_fixed_colored(
    cleaned_data %>% arrange(desc(as.numeric(gsub("%", "", price_change_percentage_24h)))) %>% head(50),
    "Tableau des variations en % des derni√®res 24 heures : Top 50 Progressions "
  )
  cat(cli::col_green("\nCe tableau pr√©sente les cryptomonnaies ayant enregistr√© les meilleures progressions sur les derni√®res 24 heures.\n\n"))
  
  # Top 50 Baisses
  display_table_fixed_colored(
    cleaned_data %>% arrange(as.numeric(gsub("%", "", price_change_percentage_24h))) %>% head(50),
    "Tableau des variations en % des derni√®res 24 heures : Top 50 Baisses"
  )
  cat(cli::col_red("\nCe tableau pr√©sente les cryptomonnaies ayant subi les plus fortes baisses sur les derni√®res 24 heures.\n\n"))
  
  # Signaux Haussiers (Top 10)
  display_table_fixed_colored(
    cleaned_data %>% arrange(desc(as.numeric(gsub("%", "", price_change_percentage_24h)))) %>% head(10),
    "Tableau des Signaux Haussiers (Top 10)"
  )
  cat(cli::col_green("\nLes 10 cryptomonnaies les plus performantes √† surveiller.\n\n"))
  
  # Signaux Baissiers (Top 10)
  display_table_fixed_colored(
    cleaned_data %>% arrange(as.numeric(gsub("%", "", price_change_percentage_24h))) %>% head(10),
    "Tableau des Signaux Baissiers (Top 10)"
  )
  cat(cli::col_red("\nLes 10 cryptomonnaies ayant subi les plus fortes baisses.\n"))
  
}


###############################################################################
##### 3 VOLUME ET TRADING
###############################################################################

# Fonction pour formater les grands nombres avec des espaces
format_number <- function(number) {
  # Conversion en milliards
  number_in_billions <- number / 1000000000
  # Formatage avec 2 d√©cimales
  formatted <- sprintf("%.2f", number_in_billions)
  # Ajout des espaces pour les milliers
  parts <- strsplit(formatted, "\\.")[[1]]
  whole_part <- parts[1]
  decimal_part <- parts[2]
  whole_part <- format(as.numeric(whole_part), big.mark = " ", scientific = FALSE)
  return(paste0(whole_part, ".", decimal_part))
}

# Fonction modifi√©e pour afficher un tableau avec les nouvelles colonnes
display_volume_table <- function(data, title) {
  # Largeurs fixes pour chaque colonne
  col_widths <- c(40, 15, 15, 15, 10)  # Largeurs ajust√©es pour les nouvelles colonnes
  
  # Fonction pour tronquer ou remplir les colonnes
  format_column <- function(column, width) {
    sapply(column, function(x) {
      x <- substr(x, 1, width)  # Tronque les cha√Ænes trop longues
      sprintf(paste0("%-", width, "s"), x)  # Ajoute des espaces si n√©cessaire
    })
  }
  
  # Formater les en-t√™tes
  header <- sprintf(
    "%-*s | %-*s | %-*s | %-*s | %-*s",
    col_widths[1], "Nom",
    col_widths[2], "Symbole",
    col_widths[3], "Volume (B$)",
    col_widths[4], "MarketCap (B$)",
    col_widths[5], "Liquidit√© %"
  )
  
  # Formater les donn√©es
  formatted_data <- data.frame(
    Nom = format_column(data$name, col_widths[1]),
    Symbole = format_column(data$symbol, col_widths[2]),
    Volume = format_column(data$volume_formatted, col_widths[3]),
    MarketCap = format_column(data$market_cap_formatted, col_widths[4]),
    Liquidite = format_column(data$liquidity_percentage, col_widths[5])
  )
  
  # Appliquer des couleurs aux donn√©es
  formatted_data$Nom <- cli::col_cyan(formatted_data$Nom)
  formatted_data$Symbole <- cli::col_yellow(formatted_data$Symbole)
  formatted_data$Volume <- cli::col_green(formatted_data$Volume)
  formatted_data$MarketCap <- cli::col_blue(formatted_data$MarketCap)
  formatted_data$Liquidite <- cli::col_magenta(formatted_data$Liquidite)
  
  # Afficher le titre
  cat(cli::col_magenta(title), "\n")
  
  # Afficher les en-t√™tes
  cat(header, "\n")
  
  # Ligne de s√©paration
  cat(paste0(rep("-", sum(col_widths) + 10), collapse = ""), "\n")
  
  # Afficher chaque ligne de donn√©es
  for (i in 1:nrow(formatted_data)) {
    cat(sprintf(
      "%-*s | %-*s | %-*s | %-*s | %-*s\n",
      col_widths[1], formatted_data$Nom[i],
      col_widths[2], formatted_data$Symbole[i],
      col_widths[3], formatted_data$Volume[i],
      col_widths[4], formatted_data$MarketCap[i],
      col_widths[5], formatted_data$Liquidite[i]
    ))
  }
}

# Fonction principale pour analyser les volumes et la liquidit√©
process_volume_trading <- function(data) {
  cat(section_title_style("\n=== Analyse des Volumes et de la Liquidit√© ===\n"))
  
  cat(section_title_style("\nDans cette section, vous trouverez les analyses des volumes de trading et de la liquidit√©"))
  cat(" des cryptomonnaies, bas√©es sur les donn√©es de l'API CoinGecko.\n\n")
  
  cat("Nous vous pr√©senterons :\n")
  cat(info_style(" La relation entre les volumes √©chang√©s et la capitalisation boursi√®re sur 24h\n"))
  cat(info_style(" Les niveau de volumes de trading\n"))  
  cat(info_style(" Les indicateurs cl√©s de liquidit√©\n\n"))
  
  cat(highlight_style("La compr√©hension de ces √©l√©ments est essentielle"))
  cat(info_secondary_style(" pour interpr√©ter l'activit√© du march√©, √©valuer la facilit√© √† acheter ou vendre un actif "))
  cat("et d√©tecter de potentielles anomalies.\n\n")
  
  cat(success_style("Plongeons maintenant dans l'analyse de ces donn√©es de volumes et de liquidit√©."))
  
  if (is.null(data) || nrow(data) == 0) {
    cat(error_style("\nErreur : Les donn√©es ne sont pas disponibles. Veuillez v√©rifier l'appel API.\n"))
    return()
  }
  
  # Pr√©paration et nettoyage des donn√©es
  cleaned_data <- data %>%
    select(name, symbol, total_volume, market_cap) %>%
    mutate(
      # Conversion en milliards avec formatage am√©lior√©
      volume_formatted = sapply(total_volume, format_number),
      market_cap_formatted = sapply(market_cap, format_number),
      # Calcul du ratio de liquidit√© (volume/market_cap en pourcentage)
      liquidity_ratio = (total_volume / market_cap) * 100,
      liquidity_percentage = sprintf("%.2f%%", liquidity_ratio)
    )
  
  # Top 100 par volume
  cat(section_title_style("\n=== Top 100 Cryptomonnaies par Volume de Trading ===\n\n"))
  cat(highlight_style("Analyse des volumes de trading sur 24 heures (exprim√©s en milliards USD) des 100 cryptomonnaies les plus actives selon les donn√©es temps r√©el de CoinGecko. La capitalisation boursi√®re est √©galement exprim√©e en milliards USD pour une √©valuation comparative pr√©cise. Le volume d'√©changes est un indicateur cl√© de la profondeur du march√© et de l'int√©r√™t des traders.\n\n"))
  display_volume_table(
    cleaned_data %>% 
      arrange(desc(total_volume)) %>% 
      head(100),
    "Classement par Volume de Trading (Top 100)"
  )
  
  # Top 50 par liquidit√© (les plus √©lev√©s)
  cat(section_title_style("\n=== Top 50 Cryptomonnaies par Taux de Liquidit√© ===\n\n"))
  cat(highlight_style("Classement des 50 actifs pr√©sentant les meilleurs ratios de liquidit√© (Volume 24h / Market Cap). Ce ratio, exprim√© en pourcentage, est un indicateur crucial de la capacit√© d'un actif √† √™tre √©chang√© sans impact significatif sur son prix. Les volumes et capitalisations sont exprim√©s en milliards USD, donn√©es valid√©es par CoinGecko.\n\n"))
  display_volume_table(
    cleaned_data %>% 
      arrange(desc(liquidity_ratio)) %>% 
      head(50),
    "Classement par Taux de Liquidit√© le Plus √âlev√© (Top 50)"
  )
  
  # Top 50 par liquidit√© (les plus faibles)
  cat(section_title_style("\n=== Top 50 Cryptomonnaies avec le Taux de Liquidit√© le Plus Faible ===\n\n"))
  cat(highlight_style("Identification des 50 actifs pr√©sentant les ratios de liquidit√© (Volume 24h / Market Cap) les plus faibles parmi les principales cryptomonnaies. Un faible ratio peut indiquer une concentration importante des d√©tenteurs ou une faible activit√© de trading. Volumes et capitalisations exprim√©s en milliards USD. Donn√©es fournies en temps r√©el par l'API CoinGecko.\n\n"))
  display_volume_table(
    cleaned_data %>% 
      arrange(liquidity_ratio) %>% 
      head(50),
    "Classement par Taux de Liquidit√© le Plus Faible (Top 50)"
  )
}

###############################################################################
####. Statistiques sociales
###############################################################################

# Fonction pour formater les grands nombres
format_large_number <- function(x) {
  format(x, big.mark = " ", scientific = FALSE)
}

# Fonction pour le formatage des tableaux
display_table_fixed_colored2 <- function(data) {
  # Largeurs fixes pour chaque type de colonne
  col_widths <- c(
    name = 30,
    symbol = 10,
    id = 25,
    market_cap = 20,
    twitter_followers = 20,
    sentiment_votes_up = 20,
    sentiment_votes_down = 20
  )
  
  # Fonction pour formater une colonne
  format_column <- function(values, width) {
    sapply(values, function(x) {
      x <- substr(as.character(x), 1, width)
      sprintf(paste0("%-", width, "s"), x)
    })
  }
  
  # Formater l'en-t√™te
  header_parts <- mapply(function(name, width) {
    sprintf(paste0("%-", width, "s"), toupper(name))
  }, names(data), col_widths[names(data)])
  
  header <- paste(header_parts, collapse = " | ")
  
  # Afficher l'en-t√™te
  cat(cli::col_yellow(header), "\n")
  cat(paste(rep("-", sum(col_widths[names(data)]) + (3 * (ncol(data) - 1))), collapse = ""), "\n")
  
  # Formater et afficher chaque ligne avec des couleurs
  for(i in 1:nrow(data)) {
    row_values <- mapply(function(value, col_name, width) {
      formatted <- format_column(value, width)
      switch(col_name,
             "name" = cli::col_cyan(formatted),
             "symbol" = cli::col_green(formatted),
             "id" = cli::col_magenta(formatted),
             "market_cap" = cli::col_yellow(formatted),
             "twitter_followers" = cli::col_blue(formatted),
             "sentiment_votes_up" = cli::col_green(formatted),
             "sentiment_votes_down" = cli::col_red(formatted),
             formatted)
    }, as.list(data[i,]), names(data), col_widths[names(data)])
    
    cat(paste(row_values, collapse = " | "), "\n")
  }
  cat("\n")
}

# Fonction pour t√©l√©charger les 250 premi√®res cryptos
get_top_cryptos <- function() {
  url <- "https://api.coingecko.com/api/v3/coins/markets"
  params <- list(
    vs_currency = "usd",
    order = "market_cap_desc",
    per_page = 250,
    page = 1,
    sparkline = FALSE
  )
  
  response <- GET(url, query = params)
  
  if (status_code(response) == 200) {
    data <- fromJSON(content(response, "text", encoding = "UTF-8"))
    cat(success_style("\nDonn√©es des 250 premi√®res cryptos t√©l√©charg√©es avec succ√®s !\n\n"))
    return(data)
  } else {
    cat(error_style("\nErreur lors de la r√©cup√©ration des donn√©es.\n"))
    return(NULL)
  }
}

# Fonction pour t√©l√©charger les donn√©es sociales
get_social_data <- function(id) {
  url <- paste0("https://api.coingecko.com/api/v3/coins/", id)
  response <- GET(url)
  
  if (status_code(response) == 200) {
    data <- fromJSON(content(response, "text", encoding = "UTF-8"))
    return(data)
  } else if (status_code(response) == 429) {
    cat(warning_style("\nLimite atteinte pour ", id, ". Pause de 61 secondes...\n"))
    Sys.sleep(61)
    return(NULL)
  } else {
    cat(error_style(paste0("\nErreur lors de la r√©cup√©ration des donn√©es pour ", id, "\n")))
    return(NULL)
  }
}

# Menu principal
social_main_menu <- function() {
  repeat {
    cat(section_title_style("\n Options - Social Metrics des Cryptos\n\n"))
    cat(question_style("0) Revenir au menu pr√©c√©dent\n"))
    cat("1) Visualiser les socials metrics sociales d'une crypto sp√©cifique\n")
    cat("2) Visualiser les socials metrics du march√© crypto en g√©n√©ral\n")
    
    # Lecture et validation de l'entr√©e utilisateur
    repeat {
      choix <- suppressWarnings(as.integer(readline(question_style("\nVeuillez entrer votre choix (0, 1 ou 2) : "))))
      
      # V√©rification si choix est NA ou hors limites
      if (!is.na(choix) && choix >= 0 && choix <= 2) {
        break
      }
      cat(warning_style("\nChoix invalide. Veuillez entrer 0, 1 ou 2 uniquement.\n"))
    }
    
    if (choix == 0) {
      cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
      break
    } else if (choix == 1) {
      visualiser_crypto_specifique()
    } else if (choix == 2) {
      visualiser_cryptos_generales()
    }
  }
}

# Visualisation d'une crypto sp√©cifique
visualiser_crypto_specifique <- function() {
  cat(section_title_style("\nVisualisation des socials metrics d'une crypto sp√©cifique\n"))
  
  repeat {
    connait_id <- tolower(readline(question_style("Connaissez-vous l'ID de la crypto ? (oui/non) : ")))
    if (connait_id %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (connait_id == "oui") {
    repeat {
      id <- readline(question_style("Veuillez entrer l'ID de la crypto : "))
      social_data <- get_social_data(id)
      
      if (!is.null(social_data)) {
        cat(success_style("\nDonn√©es pour ", id, " t√©l√©charg√©es avec succ√®s !\n\n"))
        
        # Cr√©ation d'un tableau format√©
        result_df <- data.frame(
          name = social_data$name,
          symbol = social_data$symbol,
          twitter_followers = format_large_number(social_data$community_data$twitter_followers),
          sentiment_votes_up = paste0(round(social_data$sentiment_votes_up_percentage, 2), "%"),
          sentiment_votes_down = paste0(round(social_data$sentiment_votes_down_percentage, 2), "%"),
          stringsAsFactors = FALSE
        )
        
        display_table_fixed_colored2(result_df)
        
        # Analyse du sentiment
        mood_global <- social_data$sentiment_votes_up_percentage
        cat(section_title_style("Analyse du Sentiment :\n\n"))
        cat("Mood Global : ", highlight_style(paste0(round(mood_global, 2), "%\n\n")))
        
        sentiment_message <- if (mood_global > 70) {
          success_style("Le sentiment est hyper positif - Bull Market en vue ! üöÄ")
        } else if (mood_global > 50) {
          success_style("Le sentiment est globalement positif üìà")
        } else if (mood_global > 30) {
          warning_style("Le sentiment est globalement n√©gatif üìâ")
        } else {
          error_style("Le sentiment est hyper n√©gatif - Bear Market en vue ! üêª")
        }
        
        cat(sentiment_message, "\n\n")
        break
      } else {
        cat(warning_style("\nID invalide ou probl√®me lors de la r√©cup√©ration. Veuillez r√©essayer.\n"))
      }
    }
  } else {
    top_cryptos <- get_top_cryptos()
    if (!is.null(top_cryptos)) {
      display_df <- top_cryptos %>% 
        select(name, id, market_cap) %>%
        head(250) %>%
        mutate(market_cap = paste0(format_large_number(round(market_cap / 1e9, 2)), " Mds $"))
      
      cat(section_title_style("\nListe des 250 plus grandes cryptos :\n\n"))
      display_table_fixed_colored2(display_df)
      readline(info_style("Veuillez noter l'ID qui vous int√©resse et appuyer sur Entr√©e pour continuer...\n"))
      visualiser_crypto_specifique()
    }
  }
}

# Visualisation des cryptos en g√©n√©ral
visualiser_cryptos_generales <- function() {
  repeat {
    cat(section_title_style("\nVisualisation des sociales metrics des cryptos\n\n"))
    cat(question_style("0) Retour au menu principal\n"))
    cat("1) Visualiser les 4 plus grandes cryptos (", warning_style("Temps d'attente: < 60 secondes"), ")\n")
    cat("2) Visualiser les 8 plus grandes cryptos (", warning_style("temps d'attente estim√© : 2 minutes"), ")\n")
    cat("3) Choisir un nombre personnalis√© de cryptos (", warning_style("Maximum 50"), ")\n")
    
    # Lecture et validation de l'entr√©e utilisateur
    repeat {
      choix <- suppressWarnings(as.integer(readline(question_style("\nVeuillez entrer votre choix (0-2 ou 5) : "))))
      
      # V√©rification si choix est NA ou hors limites
      if (!is.na(choix) && choix %in% c(0, 1, 2, 3)) {
        break
      }
      cat(warning_style("\nChoix invalide. Veuillez entrer un nombre valide.\n"))
    }
    
    if (choix == 0) {
      cat(info_style("\nRetour au menu principal...\n"))
      break
    } else if (choix == 3) {
      # Gestion du nombre personnalis√©
      repeat {
        nombre_perso <- suppressWarnings(as.integer(readline(question_style("\nEntrez le nombre de cryptos √† visualiser (maximum 50) : "))))
        
        if (!is.na(nombre_perso) && nombre_perso > 0 && nombre_perso <= 50) {
          temps_estime <- ceiling(nombre_perso / 4) * 1.5
          cat(warning_style(paste0("\nTemps d'attente estim√© : ", temps_estime, " minutes\n")))
          
          repeat {
            choix_confirme <- tolower(readline(question_style("Voulez-vous continuer ? (oui/non) : ")))
            if (choix_confirme %in% c("oui", "non")) break
            cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
          }
          
          if (choix_confirme == "oui") {
            top_cryptos <- get_top_cryptos()
            if (!is.null(top_cryptos)) {
              top_ids <- head(top_cryptos$id, nombre_perso)
              afficher_social_metrics(top_ids)
            }
          }
          break
        } else {
          cat(warning_style("\nNombre invalide. Veuillez entrer un nombre entre 1 et 50.\n"))
        }
      }
    } else if (choix >= 1 && choix <= 2) {
      nombre_cryptos <- choix * 4
      top_cryptos <- get_top_cryptos()
      if (!is.null(top_cryptos)) {
        top_ids <- head(top_cryptos$id, nombre_cryptos)
        afficher_social_metrics(top_ids)
      }
    }
  }
}


# Affichage des metrics sociales
afficher_social_metrics <- function(ids) {
  social_data_list <- list()
  sentiment_votes_raw <- numeric()  # Pour stocker les valeurs brutes des sentiments
  
  for (i in seq_along(ids)) {
    id <- ids[i]
    cat(info_style(paste0("\nT√©l√©chargement des donn√©es pour : ", id, "...\n")))
    
    social_data <- get_social_data(id)
    
    if (!is.null(social_data)) {
      sentiment_votes_raw <- c(sentiment_votes_raw, social_data$sentiment_votes_up_percentage)
      
      social_data_list[[i]] <- data.frame(
        name = social_data$name,
        symbol = social_data$symbol,
        twitter_followers = format_large_number(social_data$community_data$twitter_followers),
        sentiment_votes_up = paste0(round(social_data$sentiment_votes_up_percentage, 2), "%"),
        sentiment_votes_down = paste0(round(social_data$sentiment_votes_down_percentage, 2), "%"),
        stringsAsFactors = FALSE
      )
    }
    
    if (i %% 4 == 0 && i < length(ids)) {
      cat(warning_style("\nPause de 61 secondes pour respecter les limites de l'API...\n"))
      Sys.sleep(61)
    } else {
      Sys.sleep(2)
    }
  }
  
  cat("\nR√©sultats :\n\n")
  social_data_table <- do.call(rbind, social_data_list)
  display_table_fixed_colored2(social_data_table)
  
  # Calcul et affichage du sentiment global
  mood_global <- mean(sentiment_votes_raw)
  cat(section_title_style("Analyse du Sentiment Global :\n\n"))
  cat("Mood Global : ", highlight_style(paste0(round(mood_global, 2), "%\n\n")))
  
  # Analyse du sentiment
  sentiment_message <- if (mood_global > 70) {
    success_style("Le sentiment est hyper positif - Bull Market en vue ! üöÄ")
  } else if (mood_global > 50) {
    success_style("Le sentiment est globalement positif üìà")
  } else if (mood_global > 30) {
    warning_style("Le sentiment est globalement n√©gatif üìâ")
  } else {
    error_style("Le sentiment est hyper n√©gatif - Bear Market en vue ! üêª")
  }
  
  cat(sentiment_message, "\n\n")
}

# Ex√©cution du menu principal

###############################################################################@
######## TREND ANALYSIS
################################################################################

# Fonction am√©lior√©e pour formater les grands nombres
format_large_number <- function(x) {
  sapply(x, function(value) {
    if (is.na(value)) {
      "N/A"
    } else {
      format(value, big.mark = " ", scientific = FALSE)
    }
  })
}

display_table_fixed_colored_generique <- function(data, title = NULL) {
  data <- as.data.frame(lapply(data, function(x) {
    ifelse(is.na(x), "N/A", x)
  }))
  
  col_widths <- c(
    rank = 5,
    name = 40,
    symbol = 10,
    score = 10,
    market_cap_rank = 15,
    price_change = 15,
    market_cap = 20
  )
  
  format_column <- function(values, width) {
    sapply(values, function(x) {
      x <- substr(as.character(x), 1, width)
      sprintf(paste0("%-", width, "s"), x)
    })
  }
  
  if (!is.null(title)) {
    cat(section_title_style(paste0("\n", title, "\n\n")))
  }
  
  header_parts <- mapply(function(name, width) {
    if (is.na(width)) {
      toupper(name)
    } else {
      sprintf(paste0("%-", width, "s"), toupper(name))
    }
  }, names(data), col_widths[names(data)])
  
  header <- paste(header_parts, collapse = " | ")
  cat(cli::col_yellow(header), "\n")
  cat(paste(rep("-", nchar(header)), collapse = ""), "\n")
  
  for (i in 1:nrow(data)) {
    row_values <- mapply(function(value, col_name, width) {
      formatted <- format_column(value, width)
      switch(col_name,
             "name" = cli::col_cyan(formatted),
             "symbol" = cli::col_green(formatted),
             "score" = cli::col_yellow(formatted),
             "market_cap_rank" = cli::col_magenta(formatted),
             "price_change" = {
               if (value == "N/A") {
                 formatted
               } else {
                 value <- as.numeric(gsub("%", "", value))
                 if (value >= 0) cli::col_green(formatted) else cli::col_red(formatted)
               }
             },
             formatted)
    }, as.list(data[i,]), names(data), col_widths[names(data)])
    
    cat(paste(row_values, collapse = " | "), "\n")
  }
  cat("\n")
}

##################
display_table_fixed_colored_option4 <- function(data, title = NULL) {
  data <- as.data.frame(lapply(data, function(x) as.character(x)))
  data[is.na(data)] <- "N/A"
  
  col_widths <- c(
    name = 40,
    market_cap = 20,
    change_24h = 15
  )
  
  format_column <- function(values, width) {
    sapply(values, function(x) {
      x <- substr(as.character(x), 1, width)
      sprintf(paste0("%-", width, "s"), x)
    })
  }
  
  if (!is.null(title)) {
    cat(section_title_style(paste0("\n", title, "\n\n")))
  }
  
  header_parts <- mapply(function(name, width) {
    sprintf(paste0("%-", width, "s"), toupper(name))
  }, names(data), col_widths[names(data)])
  
  header <- paste(header_parts, collapse = " | ")
  cat(cli::col_yellow(header), "\n")
  cat(paste(rep("-", nchar(header)), collapse = ""), "\n")
  
  for (i in 1:nrow(data)) {
    row_values <- mapply(function(value, col_name, width) {
      formatted <- format_column(value, width)
      switch(col_name,
             "name" = cli::col_cyan(formatted),
             "market_cap" = cli::col_green(formatted),
             "change_24h" = {
               value <- as.numeric(gsub("%", "", value))
               if (is.na(value)) cli::col_yellow(formatted)
               else if (value >= 0) cli::col_green(formatted) else cli::col_red(formatted)
             },
             formatted)
    }, as.list(data[i,]), names(data), col_widths[names(data)])
    
    cat(paste(row_values, collapse = " | "), "\n")
  }
  cat("\n")
}

# Fonction pour r√©cup√©rer les tendances
get_trends <- function() {
  tryCatch({
    response <- GET("https://api.coingecko.com/api/v3/search/trending")
    
    if (status_code(response) == 200) {
      data <- fromJSON(rawToChar(response$content))
      return(data)
    } else {
      cat(error_style("\nErreur lors de la r√©cup√©ration des tendances. Code:", status_code(response), "\n"))
      return(NULL)
    }
  }, error = function(e) {
    cat(error_style("\nErreur de connexion √† l'API:", e$message, "\n"))
    return(NULL)
  })
}

# Fonction pour obtenir les informations d'une crypto sp√©cifique
get_coin_info <- function(id) {
  tryCatch({
    response <- GET(paste0("https://api.coingecko.com/api/v3/coins/", id))
    
    if (status_code(response) == 200) {
      data <- fromJSON(rawToChar(response$content))
      return(data)
    } else {
      cat(error_style("\nErreur lors de la r√©cup√©ration des informations. Code:", status_code(response), "\n"))
      return(NULL)
    }
  }, error = function(e) {
    cat(error_style("\nErreur de connexion √† l'API:", e$message, "\n"))
    return(NULL)
  })
}

# Fonction pour obtenir les cat√©gories
get_categories <- function() {
  tryCatch({
    response <- GET("https://api.coingecko.com/api/v3/coins/categories")
    
    if (status_code(response) == 200) {
      data <- fromJSON(rawToChar(response$content))
      return(data)
    } else {
      cat(error_style("\nErreur lors de la r√©cup√©ration des cat√©gories. Code:", status_code(response), "\n"))
      return(NULL)
    }
  }, error = function(e) {
    cat(error_style("\nErreur de connexion √† l'API:", e$message, "\n"))
    return(NULL)
  })
}

#######################################
# Fonction pour l'analyse des tendances (Option 1)
analyze_trends <- function() {
  cat(section_title_style("\n=== Analyse des Tendances de Recherche ===\n\n"))
  
  # Texte explicatif
  cat(info_style("Cette section vous pr√©sente les cryptomonnaies et NFTs actuellement en tendance sur CoinGecko.\n\n"))
  cat(info_style("Les donn√©es affich√©es sont bas√©es sur :\n"))
  cat(info_style("- Le volume de recherches effectu√©es par les utilisateurs sur CoinGecko.\n"))
  cat(info_style("- Les interactions des utilisateurs sur des plateformes sociales comme Twitter et Reddit.\n\n"))
  cat(info_style("Ces tendances sont calcul√©es sur une p√©riode r√©cente (souvent quelques jours √† une semaine)\n"))
  cat(info_style("et sont mises √† jour r√©guli√®rement pour refl√©ter les changements d'int√©r√™t des utilisateurs.\n\n"))
  cat(success_style("Vous trouverez ci-dessous les actifs les plus populaires, class√©s par recherche et int√©r√™t :\n\n"))
  
  trends_data <- get_trends()
  if (!is.null(trends_data)) {
    # Cryptos en tendance
    crypto_trends <- data.frame(
      name = trends_data$coins$item$name,
      symbol = toupper(trends_data$coins$item$symbol)
    )
    
    cat(success_style("\nTop Cryptos les plus recherch√©es :\n"))
    display_table_fixed_colored_generique(head(crypto_trends, 100))
    
    # NFTs en tendance
    nft_trends <- data.frame(
      name = trends_data$nfts$name,
      symbol = toupper(trends_data$nfts$symbol)
    )
    
    cat(success_style("\nTop NFTs les plus recherch√©s :\n"))
    display_table_fixed_colored_generique(head(nft_trends, 50))
  }
  
  readline(question_style("\nAppuyez sur Entr√©e pour revenir au menu..."))
}

#####################################
# Fonction pour le score de tendance (Option 2)
trend_score_analysis <- function() {
  cat(section_title_style("\n=== Score de Tendance ===\n\n"))
  
  # Explication du score de tendance
  cat(highlight_style("Le score de tendance refl√®te l'int√©r√™t des utilisateurs envers une cryptomonnaie.\n\n"))
  cat(info_style("Ce score est bas√© sur :\n"))
  cat(info_style("- Le volume de recherches et d'interactions sur CoinGecko.\n"))
  cat(info_style("- Les mentions et interactions sur des plateformes sociales comme Twitter et Reddit.\n\n"))
  cat(info_style("La p√©riode d'analyse couvre environ 30 jours. Les donn√©es sont mises √† jour\n"))
  cat(info_style("r√©guli√®rement pour refl√©ter les tendances actuelles.\n\n"))
  cat(info_style("Contrairement aux variations de prix ou √† la capitalisation, ce score mesure\n"))
  cat(info_style("l'int√©r√™t global et non financier envers une cryptomonnaie donn√©e.\n\n"))
  
  # Lecture du score
  cat(success_style("Lecture du score :\n"))
  cat(info_style("- Un score √©lev√© (par exemple, 15-20) indique une forte popularit√© r√©cente.\n"))
  cat(info_style("- Un score de 0 signifie un int√©r√™t tr√®s faible ou inexistant.\n"))
  cat(info_style("- La plage des scores observ√©s varie g√©n√©ralement entre 0 et environ 15-20,\n"))
  cat(info_style("  mais elle n'a pas de limite fixe sup√©rieure.\n\n"))
  
  cat(success_style("Les cryptos les plus populaires du moment sont affich√©es ci-dessous :\n\n"))
  
  trends_data <- get_trends()
  if (!is.null(trends_data)) {
    # Construction des donn√©es pour le tableau
    trend_scores <- data.frame(
      name = trends_data$coins$item$name,
      symbol = toupper(trends_data$coins$item$symbol),
      market_cap_rank = trends_data$coins$item$market_cap_rank,
      score = trends_data$coins$item$score
    )
    
    # Tri des cryptos par score d√©croissant
    trend_scores <- trend_scores %>%
      arrange(desc(score))
    
    # Augmentation de la limite d'affichage (affiche tout ce qui est disponible)
    cat(success_style("Classement par popularit√© :\n"))
    display_table_fixed_colored_generique(head(trend_scores, 100))
  } else {
    cat(error_style("\nImpossible de r√©cup√©rer les tendances actuellement. Veuillez r√©essayer plus tard.\n"))
  }
  
  readline(question_style("\nAppuyez sur Entr√©e pour revenir au menu..."))
}


####################################################
# Fonction pour afficher les cryptos disponibles
show_available_coins <- function() {
  cat(section_title_style("\nListe des Cryptos Disponibles\n"))
  
  # Faire la requ√™te pour obtenir la liste des cryptos
  tryCatch({
    response <- GET("https://api.coingecko.com/api/v3/coins/list")
    
    if (status_code(response) == 200) {
      coins <- fromJSON(rawToChar(response$content))
      
      # Cr√©ation du dataframe pour l'affichage
      coins_df <- data.frame(
        name = coins$name,
        symbol = toupper(coins$symbol),
        id = coins$id
      )
      
      # Affichage pagin√© (20 par page)
      total_pages <- ceiling(nrow(coins_df) / 20)
      page <- 1
      
      repeat {
        # Afficher la page courante
        start_idx <- ((page - 1) * 20) + 1
        end_idx <- min(page * 20, nrow(coins_df))
        current_page <- coins_df[start_idx:end_idx, ]
        
        cat(section_title_style(sprintf("\nPage %d/%d\n\n", page, total_pages)))
        display_table_fixed_colored_generique(current_page)
        
        # Options de navigation
        cat(question_style("\nOptions :\n"))
        cat("1) Page suivante\n")
        cat("2) Page pr√©c√©dente\n")
        cat("3) Aller √† une page sp√©cifique\n")
        cat("4) Rechercher par nom\n")
        cat("0) Retour au menu pr√©c√©dent\n")
        
        choix <- suppressWarnings(as.integer(readline(question_style("\nVotre choix : "))))
        
        if (is.na(choix)) next
        
        if (choix == 0) break
        
        switch(choix,
               "1" = {
                 if (page < total_pages) page <- page + 1
                 else cat(warning_style("\nVous √™tes d√©j√† √† la derni√®re page.\n"))
               },
               "2" = {
                 if (page > 1) page <- page - 1
                 else cat(warning_style("\nVous √™tes d√©j√† √† la premi√®re page.\n"))
               },
               "3" = {
                 new_page <- suppressWarnings(as.integer(readline(question_style(
                   sprintf("\nEntrez le num√©ro de page (1-%d) : ", total_pages)))))
                 if (!is.na(new_page) && new_page >= 1 && new_page <= total_pages) {
                   page <- new_page
                 } else {
                   cat(warning_style("\nNum√©ro de page invalide.\n"))
                 }
               },
               "4" = {
                 search_term <- tolower(readline(question_style("\nEntrez le terme √† rechercher : ")))
                 found_coins <- coins_df[grep(search_term, tolower(coins_df$name)), ]
                 
                 if (nrow(found_coins) > 0) {
                   cat(success_style("\nR√©sultats de la recherche :\n"))
                   display_table_fixed_colored_generique(head(found_coins, 20))
                   readline(question_style("\nAppuyez sur Entr√©e pour continuer..."))
                 } else {
                   cat(warning_style("\nAucune crypto trouv√©e avec ce terme.\n"))
                 }
               })
      }
      
    } else {
      cat(error_style("\nErreur lors de la r√©cup√©ration de la liste. Code:", status_code(response), "\n"))
    }
  }, error = function(e) {
    cat(error_style("\nErreur de connexion √† l'API:", e$message, "\n"))
  })
}

# Fonction pour afficher les informations d√©taill√©es d'une crypto
display_coin_info <- function(coin_data) {
  cat(section_title_style(paste("\nInformations d√©taill√©es pour", coin_data$name, "\n")))
  
  # Informations de base
  cat(success_style("\n=== Informations de Base ===\n"))
  cat(info_style("Nom: "), coin_data$name, "\n")
  cat(info_style("Symbole: "), toupper(coin_data$symbol), "\n")
  cat(info_style("Rang Market Cap: "), coin_data$market_cap_rank, "\n")
  
  # Prix et variations
  cat(success_style("\n=== Prix et Variations ===\n"))
  if (!is.null(coin_data$market_data)) {
    cat(info_style("Prix actuel (USD): $"), format(coin_data$market_data$current_price$usd, scientific = FALSE), "\n")
    cat(info_style("Variation 24h: "), 
        ifelse(coin_data$market_data$price_change_percentage_24h >= 0,
               success_style(paste0("+", round(coin_data$market_data$price_change_percentage_24h, 2), "%")),
               warning_style(paste0(round(coin_data$market_data$price_change_percentage_24h, 2), "%"))), "\n")
  }
  
  # Capitalisation
  if (!is.null(coin_data$market_data$market_cap)) {
    cat(success_style("\n=== Capitalisation ===\n"))
    cat(info_style("Market Cap (USD): $"), format_large_number(coin_data$market_data$market_cap$usd), "\n")
    cat(info_style("Volume 24h (USD): $"), format_large_number(coin_data$market_data$total_volume$usd), "\n")
  }
  
  # Donn√©es sociales
  if (!is.null(coin_data$community_data)) {
    cat(success_style("\n=== M√©triques Sociales ===\n"))
    cat(info_style("Twitter Followers: "), format_large_number(coin_data$community_data$twitter_followers), "\n")
    if (!is.null(coin_data$community_data$reddit_subscribers)) {
      cat(info_style("Reddit Subscribers: "), format_large_number(coin_data$community_data$reddit_subscribers), "\n")
    }
  }
  
  # Description
  if (!is.null(coin_data$description$en)) {
    cat(success_style("\n=== Description ===\n"))
    cat(info_style(coin_data$description$en), "\n")
  }
  
  readline(question_style("\nAppuyez sur Entr√©e pour continuer..."))
}

##########################################################
# Fonction pour les informations sur les projets (Option 3)
project_information <- function() {
  cat(section_title_style("\n=== Informations sur les Projets ===\n\n"))
  
  # Texte introductif
  cat(highlight_style("Cette section vous permet d'explorer des informations d√©taill√©es sur les projets des cryptomonnaies disponibles.\n\n"))
  cat(info_style("Vous pouvez :\n"))
  cat(info_style("- Rechercher des d√©tails sur les projets d'une cryptomonnaie sp√©cifique en entrant son ID ou son nom.\n"))
  cat(info_style("- Explorer les 15 projets les plus populaires et en tendance actuellement.\n"))
  cat(info_style("- Parcourir les cryptos disponibles dans des cat√©gories sp√©cifiques comme DeFi, NFT, Gaming, etc.\n\n"))
  cat(success_style("Les donn√©es affich√©es incluent les noms, symboles, prix, variations, rangs de capitalisation et bien plus encore !\n\n"))
  
  
  repeat {
    cat(section_title_style("\n=== Informations sur les Projets ===\n\n"))
    cat(question_style("1) Rechercher une crypto sp√©cifique\n"))
    cat("2) Voir le top 15 des projets en tendance\n")
    cat("3) Rechercher par cat√©gorie\n")
    cat(question_style("0) Retour au menu principal\n"))
    
    choix <- suppressWarnings(as.integer(readline(question_style("\nVotre choix (0-3) : "))))
    
    if (is.na(choix) || choix < 0 || choix > 3) {
      cat(warning_style("\nChoix invalide. Veuillez r√©essayer.\n"))
      next
    }
    
    if (choix == 0) break
    
    switch(choix,
           "1" = search_specific_crypto(),
           "2" = show_top_15_projects(),
           "3" = search_by_category())
  }
}

# Sous-fonctions pour l'option 3
search_specific_crypto <- function() {
  repeat {
    cat(section_title_style("\nRecherche d'une Crypto Sp√©cifique\n"))
    connait_id <- tolower(readline(question_style("\nConnaissez-vous l'ID de la crypto ? (oui/non) : ")))
    
    if (connait_id %in% c("oui", "non")) {
      if (connait_id == "oui") {
        id <- readline(question_style("Entrez l'ID de la crypto : "))
        coin_data <- get_coin_info(id)
        
        if (!is.null(coin_data)) {
          display_coin_info(coin_data)
        }
      } else {
        show_available_coins()
      }
      break
    }
    
    cat(warning_style("\nVeuillez r√©pondre par 'oui' ou 'non'.\n"))
  }
}

##############
show_top_15_projects <- function() {
  cat(section_title_style("\n=== Top 15 Projets en Tendance ===\n\n"))
  
  # Texte explicatif
  cat(highlight_style("Ce classement refl√®te les cryptomonnaies actuellement en tendance sur CoinGecko.\n\n"))
  cat(info_style("Les tendances sont calcul√©es en fonction de :\n"))
  cat(info_style("- Le volume de recherches des utilisateurs sur CoinGecko.\n"))
  cat(info_style("- Les interactions sur des plateformes sociales comme Twitter et Reddit.\n"))
  cat(info_style("- L'engagement global des utilisateurs (listes de favoris, consultations fr√©quentes).\n\n"))
  cat(info_style("Ce classement est dynamique et se concentre sur l'int√©r√™t r√©cent, souvent sur les 7 derniers jours.\n"))
  cat(info_style("Les cryptomonnaies affich√©es peuvent inclure des projets √©mergents ou moins connus,\n"))
  cat(info_style("attirant soudainement l'attention des utilisateurs.\n\n"))
  cat(success_style("Vous trouverez ci-dessous les 15 projets les plus populaires actuellement :\n\n"))
  
  # R√©cup√©ration des tendances
  trends_data <- get_trends()
  if (!is.null(trends_data)) {
    # Construction du tableau avec des informations suppl√©mentaires
    trending_projects <- data.frame(
      name = trends_data$coins$item$name,
      symbol = toupper(trends_data$coins$item$symbol),
      market_cap_rank = trends_data$coins$item$market_cap_rank,
      url = paste0("https://www.coingecko.com/en/coins/", trends_data$coins$item$id) # G√©n√©ration de l'URL
    )
    
    # Affichage des r√©sultats
    for (i in 1:min(15, nrow(trending_projects))) {
      project <- trending_projects[i, ]
      cat(success_style(paste0("\n", i, ". ", project$name, " (", project$symbol, ")\n")))
      cat(info_style("   Rang Market Cap : ", project$market_cap_rank, "\n"))
      cat(info_style("   URL du Projet : ", project$url, "\n"))
      
      # Appel de l'API pour r√©cup√©rer les d√©tails du projet avec gestion des erreurs
      details <- tryCatch({
        get_coin_info(trends_data$coins$item$id[i])
      }, error = function(e) {
        NULL
      })
      
      if (!is.null(details)) {
        # Extraction de la capitalisation boursi√®re
        market_cap_billion <- ifelse(!is.null(details$market_data$market_cap$usd), 
                                     details$market_data$market_cap$usd / 1e9, NA)
        
        # Formatage des nombres
        formatted_market_cap <- ifelse(!is.na(market_cap_billion), 
                                       paste0(format(round(market_cap_billion, 2), big.mark = " "), " Mds $"), 
                                       "N/A")
        
        # Affichage des donn√©es suppl√©mentaires
        cat(info_style("   Capitalisation : ", formatted_market_cap, "\n"))
      } else {
        cat(warning_style("   Impossible de r√©cup√©rer les d√©tails suppl√©mentaires.\n"))
      }
      
      # Pause de 1 seconde entre les requ√™tes pour limiter le d√©bit
      Sys.sleep(1)
    }
  } else {
    cat(warning_style("\nAucune donn√©e disponible pour les projets en tendance.\n"))
  }
}


#########################

search_by_category <- function() {
  categories <- get_categories()
  if (!is.null(categories)) {
    cat(section_title_style("\nCat√©gories Disponibles\n\n"))
    
    for (i in 1:length(categories$name)) {
      cat(sprintf("%d) %s\n", i, categories$name[i]))
    }
    
    cat(question_style("\n0) Retour\n"))
    
    choix <- suppressWarnings(as.integer(readline(question_style("\nChoisissez une cat√©gorie (0-", length(categories$name), ") : "))))
    
    if (!is.na(choix) && choix > 0 && choix <= length(categories$name)) {
      show_category_projects(categories$id[choix])
    }
  }
}

# Fonction pour afficher les projets d'une cat√©gorie
show_category_projects <- function(category_id) {
  tryCatch({
    url <- paste0("https://api.coingecko.com/api/v3/coins/markets")
    params <- list(
      vs_currency = "usd",
      category = category_id,
      order = "market_cap_desc",
      per_page = 50,
      page = 1,
      sparkline = FALSE
    )
    
    response <- GET(url, query = params)
    
    if (status_code(response) == 200) {
      data <- fromJSON(rawToChar(response$content))
      
      if (length(data) > 0) {
        projects_df <- data.frame(
          name = data$name,
          symbol = toupper(data$symbol),
          market_cap = format_large_number(data$market_cap),
          price_change = paste0(round(data$price_change_percentage_24h, 2), "%")
        )
        
        cat(section_title_style(paste("\nProjets dans la cat√©gorie :", category_id, "\n")))
        display_table_fixed_colored_generique(projects_df)
        
        # Options pour voir plus de d√©tails
        repeat {
          cat(question_style("\nOptions :\n"))
          cat("1) Voir les d√©tails d'un projet\n")
          cat("0) Retour\n")
          
          choix <- suppressWarnings(as.integer(readline(question_style("\nVotre choix (0-1) : "))))
          
          if (is.na(choix) || choix < 0 || choix > 1) {
            cat(warning_style("\nChoix invalide.\n"))
            next
          }
          
          if (choix == 0) break
          
          if (choix == 1) {
            project_id <- readline(question_style("\nEntrez l'ID du projet √† consulter : "))
            coin_data <- get_coin_info(project_id)
            if (!is.null(coin_data)) {
              display_coin_info(coin_data)
            }
          }
        }
      } else {
        cat(warning_style("\nAucun projet trouv√© dans cette cat√©gorie.\n"))
      }
    } else {
      cat(error_style("\nErreur lors de la r√©cup√©ration des projets. Code:", status_code(response), "\n"))
    }
  }, error = function(e) {
    cat(error_style("\nErreur lors de la r√©cup√©ration des projets:", e$message, "\n"))
  })
}

#################################################################
## Fonction pour l'analyse des cat√©gories (Option 4)
category_analysis <- function() {
  cat(section_title_style("\n=== Analyse des Cat√©gories et Secteurs ===\n\n"))
  cat(highlight_style("Cette section explore les dynamiques des diff√©rentes cat√©gories de cryptomonnaies.\n\n"))
  cat(info_style("Les cat√©gories regroupent les projets selon leur utilit√©, √©cosyst√®me ou secteur d'activit√©.\n"))
  cat(info_style("Les donn√©es affich√©es incluent :\n"))
  cat(info_style("- Le nom de chaque cat√©gorie.\n"))
  cat(info_style("- La capitalisation de march√© totale (en milliards de dollars).\n"))
  cat(info_style("- La variation de capitalisation sur 24 heures, exprim√©e en pourcentage.\n\n"))
  cat(info_style("Ces informations sont utiles pour :\n"))
  cat(info_style("- Rep√©rer les secteurs en forte croissance ou en d√©clin.\n"))
  cat(info_style("- Comprendre les tendances g√©n√©rales du march√© crypto.\n"))
  cat(info_style("- D√©couvrir de nouvelles niches et opportunit√©s d'investissement.\n\n"))
  cat(success_style("Les cat√©gories les plus importantes et leurs variations sur 24 heures sont affich√©es ci-dessous :\n"))
  
  categories <- get_categories()
  if (!is.null(categories)) {
    # Vue d'ensemble √©conomique
    cat(success_style("\nVue d'ensemble des cat√©gories :\n"))
    
    # Construction du tableau avec gestion des valeurs NA
    summary_df <- data.frame(
      name = ifelse(is.na(categories$name), "N/A", categories$name),
      market_cap = ifelse(is.na(categories$market_cap), 
                          "N/A", 
                          paste0(format(round(as.numeric(categories$market_cap) / 1e9, 2), big.mark = " "), " Mds $")),
      change_24h = ifelse(is.na(categories$market_cap_change_24h), "N/A", paste0(round(categories$market_cap_change_24h, 2), "%"))
    )
    
    # Limiter l'affichage aux 20 premi√®res cat√©gories
    summary_df <- head(summary_df, 20)
    
    # Affichage du tableau
    display_table_fixed_colored_option4(summary_df, "R√©sum√© des Cat√©gories")
    
    # Cat√©gories en croissance/d√©clin
    top_growing <- head(arrange(summary_df, desc(as.numeric(gsub("%", "", change_24h)))), 10)
    top_declining <- head(arrange(summary_df, as.numeric(gsub("%", "", change_24h))), 10)
    
    cat(success_style("\nTop 10 Cat√©gories en Croissance :\n"))
    display_table_fixed_colored_option4(top_growing)
    
    cat(warning_style("\nTop 10 Cat√©gories en D√©clin :\n"))
    display_table_fixed_colored_option4(top_declining)
  } else {
    cat(warning_style("\nAucune donn√©e disponible pour les cat√©gories.\n"))
  }
  
  readline(question_style("\nAppuyez sur Entr√©e pour revenir au menu..."))
}


# Fonction pour l'analyse des variations horaires (Option 5)
hot_hour_analysis <- function() {
  cat(section_title_style("\n=== Hot Hour Analysis ===\n\n"))
  cat(highlight_style("Cette section met en √©vidence les plus fortes variations de prix des cryptomonnaies\n"))
  cat(info_style("et des NFTs sur une p√©riode r√©cente (24 heures).\n\n"))
  cat(info_style("Les donn√©es incluent :\n"))
  cat(info_style("- Les cryptomonnaies avec les plus fortes hausses ou baisses de prix.\n"))
  cat(info_style("- Les NFTs avec les variations de prix planchers les plus significatives.\n\n"))
  cat(info_style("Utilit√© de cette analyse :\n"))
  cat(info_style("- Identifier les projets les plus volatils et dynamiques du moment.\n"))
  cat(info_style("- Rep√©rer des opportunit√©s d'investissement ou des points d'entr√©e sur le march√©.\n"))
  cat(info_style("- Suivre les tendances du march√© en temps r√©el.\n\n"))
  cat(success_style("Les cryptomonnaies et NFTs les plus dynamiques des derni√®res 24 heures sont affich√©s ci-dessous :\n\n"))
  
  
  trends_data <- get_trends()
  if (!is.null(trends_data)) {
    # Cryptos
    crypto_changes <- data.frame(
      name = trends_data$coins$item$name,
      symbol = toupper(trends_data$coins$item$symbol),
      price_change = sapply(trends_data$coins$item$data$price_change_percentage_24h$usd, function(x) {
        if (is.null(x) || is.na(x)) {
          "N/A"
        } else {
          paste0(round(as.numeric(x), 2), "%")
        }
      })
    )
    
    # Top 50 hausses
    cat(success_style("\n Top Hausses Cryptos (24h) :\n"))
    valid_changes <- crypto_changes[crypto_changes$price_change != "N/A", ]
    if (nrow(valid_changes) > 0) {
      top_gainers <- head(arrange(valid_changes, desc(as.numeric(gsub("%", "", price_change)))), 50)
      display_table_fixed_colored_generique(top_gainers)
    } else {
      cat(warning_style("Aucune donn√©e de variation disponible.\n"))
    }
    
    # Top 50 baisses
    cat(warning_style("\nTop Baisses Cryptos (24h) :\n"))
    if (nrow(valid_changes) > 0) {
      top_losers <- head(arrange(valid_changes, as.numeric(gsub("%", "", price_change))), 50)
      display_table_fixed_colored_generique(top_losers)
    } else {
      cat(warning_style("Aucune donn√©e de variation disponible.\n"))
    }
    
    # NFTs
    if (length(trends_data$nfts) > 0) {
      nft_changes <- data.frame(
        name = trends_data$nfts$name,
        symbol = toupper(trends_data$nfts$symbol),
        price_change = sapply(trends_data$nfts$floor_price_24h_percentage_change, function(x) {
          if (is.null(x) || is.na(x)) {
            "N/A"
          } else {
            paste0(round(as.numeric(x), 2), "%")
          }
        })
      )
      
      valid_nft_changes <- nft_changes[nft_changes$price_change != "N/A", ]
      
      # Top 10 NFT hausses
      cat(success_style("\nTop NFTs en Hausse :\n"))
      if (nrow(valid_nft_changes) > 0) {
        top_nft_gainers <- head(arrange(valid_nft_changes, desc(as.numeric(gsub("%", "", price_change)))), 10)
        display_table_fixed_colored_generique(top_nft_gainers)
      } else {
        cat(warning_style("Aucune donn√©e de variation disponible.\n"))
      }
      
      # Top 10 NFT baisses
      cat(warning_style("\nTop NFTs en Baisse :\n"))
      if (nrow(valid_nft_changes) > 0) {
        top_nft_losers <- head(arrange(valid_nft_changes, as.numeric(gsub("%", "", price_change))), 10)
        display_table_fixed_colored_generique(top_nft_losers)
      } else {
        cat(warning_style("Aucune donn√©e de variation disponible.\n"))
      }
    }
  }
  
  readline(question_style("\nAppuyez sur Entr√©e pour revenir au menu..."))
}


# Menu 
################################

trend_menu <- function() {
  repeat {
    # Message d'introduction
    cat(section_title_style("\n=== Analyse des Tendances du March√© Crypto ===\n"))
    cat(info_style("\nBienvenue dans l'analyseur de tendances. Cet outil vous permet d'explorer\n"))
    cat(info_style("les tendances actuelles du march√© des cryptomonnaies et des NFTs.\n"))
    
    # Options du menu
    cat(section_title_style("\nOptions Disponibles :\n\n"))
    cat(question_style("0) Retour au menu P√©pite\n"))
    cat("1) Analyse des tendances (Top Cryptos et Top NFTs)\n")
    cat("2) Score de tendance et popularit√©\n")
    cat("3) Information d√©taill√©e sur les projets\n")
    cat("4) Analyse des cat√©gories et secteurs\n")
    cat("5) Hot Hour (Variations horaires)\n")
    
    # Lecture et validation du choix
    repeat {
      choix <- suppressWarnings(as.integer(readline(question_style("\nVeuillez entrer votre choix (0-5) : "))))
      
      if (!is.na(choix) && choix >= 0 && choix <= 5) {
        break
      }
      cat(warning_style("\nChoix invalide. Veuillez entrer un nombre entre 0 et 5.\n"))
    }
    
    # Traitement du choix
    if (choix == 0) {
      cat(info_style("\nRetour au menu P√©pite...\n"))
      break
    }
    
    # Ex√©cution de la fonction correspondante
    switch(choix,
           "1" = analyze_trends(),
           "2" = trend_score_analysis(),
           "3" = project_information(),
           "4" = category_analysis(),
           "5" = hot_hour_analysis())
  }
}

# Ex√©cution du menu principal des tendances


###############################################################################@
########   GOOGLE TREND
################################################################################

# Fonction pour l'analyse Google Trends
google_trend_analysis <- function() {
  repeat {
    cat(section_title_style("\n=== Analyse Google Trends des Cryptomonnaies ===\n"))
    
    # Texte d'introduction d√©taill√©
    cat(success_style("\nBienvenue sur l'analyseur de tendances Google pour les cryptomonnaies !\n\n"))
    
    cat(info_style("Cette analyse utilise l'API officielle de Google Trends pour vous fournir\n"))
    cat(info_style("des informations pr√©cises sur l'int√©r√™t mondial pour les cryptomonnaies.\n\n"))
    
    cat(highlight_style("Fonctionnement de l'outil :\n"))
    cat("‚Ä¢ Collecte en temps r√©el des donn√©es de recherche Google\n")
    cat("‚Ä¢ Analyse des 30 principales cryptomonnaies par capitalisation\n")
    cat("‚Ä¢ Mesure de l'int√©r√™t relatif et des pics de popularit√©\n")
    cat("‚Ä¢ Classement bas√© sur les tendances de recherche mondiales\n\n")
    
    cat(info_secondary_style("Les r√©sultats vous permettront de :\n"))
    cat("‚Ä¢ Identifier les cryptos qui suscitent le plus d'int√©r√™t\n")
    cat("‚Ä¢ Rep√©rer les tendances √©mergentes\n")
    cat("‚Ä¢ Comprendre l'√©volution de la popularit√© des projets\n")
    cat("‚Ä¢ Comparer l'int√©r√™t relatif entre diff√©rentes p√©riodes\n\n")
    
    cat(warning_style("Note importante : "), info_style("Les donn√©es refl√®tent uniquement l'int√©r√™t des recherches\n"))
    cat(info_style("Google et ne constituent pas des conseils d'investissement.\n\n"))
    
    # Choix du type d'analyse
    cat(section_title_style("Type d'analyse disponible :\n"))
    cat("1) Analyse globale (Top 30)\n")
    cat("2) Analyse d'une crypto sp√©cifique\n")
    cat(question_style("0) Retour au menu principal\n"))
    
    analyse_choix <- readline(question_style("\nChoisissez votre type d'analyse (0-2) : "))
    
    if (analyse_choix == "0") {
      cat(info_style("\nRetour au menu principal...\n"))
      break
    }
    
    # Proposer les horizons temporels
    cat(section_title_style("\nHorizons temporels disponibles :\n"))
    cat(highlight_style("\nAnalyse court terme :\n"))
    cat("1) Derni√®re heure\n")
    cat("2) 4 derni√®res heures\n")
    cat("3) Derni√®res 24 heures\n")
    
    cat(highlight_style("\nAnalyse moyen terme :\n"))
    cat("4) Derni√®re semaine\n")
    cat("5) Dernier mois\n")
    cat("6) Derniers 3 mois\n")
    
    cat(highlight_style("\nAnalyse long terme :\n"))
    cat("7) Derni√®re ann√©e\n")
    cat("8) 5 derni√®res ann√©es\n")
    cat(question_style("0) Retour\n"))
    
    choix <- readline(question_style("\nChoisissez votre horizon temporel (0-8) : "))
    
    if (choix == "0") {
      next
    }
    
    # D√©finir la p√©riode en fonction du choix
    periode <- switch(choix,
                      "1" = "now 1-H",
                      "2" = "now 4-H",
                      "3" = "now 1-d",
                      "4" = "now 7-d",
                      "5" = "today 1-m",
                      "6" = "today 3-m",
                      "7" = "today 12-m",
                      "8" = "today 5-y",
                      {
                        cat(warning_style("\nChoix invalide. Utilisation de la p√©riode par d√©faut (1 mois).\n"))
                        "today 1-m"
                      })
    
    if (analyse_choix == "2") {
      # Analyse d'une crypto sp√©cifique
      cat(section_title_style("\nAnalyse d'une crypto sp√©cifique\n"))
      cat(info_style("Entrez l'ID de la crypto (exemple : 'bitcoin', 'ethereum', etc.)\n"))
      crypto_id <- readline(question_style("ID de la crypto : "))
      
      # V√©rifier si l'ID existe dans les donn√©es
      if (!(crypto_id %in% coingecko_data$id)) {
        cat(error_style("\nID non trouv√© dans la base de donn√©es.\n"))
        next
      }
      
      cryptos <- c(crypto_id)
      cat(info_style(sprintf("\nAnalyse de %s en cours...\n", crypto_id)))
    } else {
      # Analyse globale
      cryptos <- head(coingecko_data$id, 30)
    }
    
    nb_groupes <- ceiling(length(cryptos) / 5)
    temps_estime <- nb_groupes * 15  # 15 secondes par groupe en moyenne
    
    cat(section_title_style("\nAnalyse en cours...\n"))
    cat(info_style(sprintf("- Nombre de cryptos analys√©es : %d\n", length(cryptos))))
    cat(info_style(sprintf("- Temps estim√© : environ %d secondes\n", temps_estime)))
    
    # Initialiser les r√©sultats
    results_list <- list()
    compteur <- 0
    
    # Barre de progression
    cat(success_style("Progression de l'analyse :\n"))
    for(i in seq(1, length(cryptos), 5)) {
      compteur <- compteur + 1
      pourcentage <- round(compteur/nb_groupes * 100)
      barre <- paste(rep("=", pourcentage/2), collapse="")
      spaces <- paste(rep(" ", 50-nchar(barre)), collapse="")
      cat(sprintf("\r[%s%s] %d%%", barre, spaces, pourcentage))
      
      end_idx <- min(i+4, length(cryptos))
      batch_cryptos <- cryptos[i:end_idx]
      
      trends <- tryCatch({
        gtrends(
          keyword = paste0(batch_cryptos, " crypto"),
          time = periode,
          onlyInterest = TRUE
        )
      }, error = function(e) {
        cat(warning_style(sprintf("\nGroupe %d : Erreur de requ√™te. Passage au suivant.\n", compteur)))
        NULL
      })
      
      if (!is.null(trends) && !is.null(trends$interest_over_time)) {
        temp_results <- trends$interest_over_time %>%
          group_by(keyword) %>%
          summarise(
            mean_interest = mean(hits, na.rm = TRUE),
            max_interest = max(hits, na.rm = TRUE)
          )
        results_list[[length(results_list) + 1]] <- temp_results
      }
      
      Sys.sleep(0.5)
    }
    
    cat("\n")  # Nouvelle ligne apr√®s la barre de progression
    
    # Traitement et affichage des r√©sultats
    if (length(results_list) > 0) {
      all_results <- do.call(rbind, results_list)
      
      final_results <- all_results %>%
        filter(!is.na(mean_interest)) %>%
        mutate(
          keyword = gsub(" crypto", "", keyword),
          mean_interest = round(mean_interest, 2),
          max_interest = round(max_interest, 2)
        ) %>%
        arrange(desc(mean_interest))
      
      if (nrow(final_results) > 0) {
        display_df <- data.frame(
          Rang = 1:nrow(final_results),
          Crypto = final_results$keyword,
          Interet = final_results$mean_interest,
          Pic = final_results$max_interest,
          stringsAsFactors = FALSE
        )
        
        titre <- if(analyse_choix == "2") {
          sprintf("\nR√©sultats pour %s\n", toupper(crypto_id))
        } else {
          "\nTop 30 des Cryptos les Plus Recherch√©es\n"
        }
        
        cat(section_title_style(titre))
        cat(info_secondary_style("(Classement bas√© sur l'int√©r√™t moyen des recherches Google)\n\n"))
        
        # En-t√™tes du tableau
        cat(cli::col_yellow(paste(
          sprintf("%-6s", "RANG"),
          sprintf("%-20s", "CRYPTO"),
          sprintf("%-15s", "INT√âR√äT MOY"),
          sprintf("%-15s", "PIC"),
          "\n"
        )))
        
        # Ligne de s√©paration
        cat(paste(rep("-", 60), collapse = ""), "\n")
        
        # Contenu du tableau avec couleurs
        print_df <- if(analyse_choix == "2") display_df else head(display_df, 30)
        for(i in 1:nrow(print_df)) {
          rang_color <- if(i <= 3) cli::col_green else if(i <= 10) cli::col_blue else cli::col_white
          interet_color <- if(print_df$Interet[i] >= 50) cli::col_green else if(print_df$Interet[i] >= 20) cli::col_yellow else cli::col_red
          pic_color <- if(print_df$Pic[i] >= 80) cli::col_green else if(print_df$Pic[i] >= 40) cli::col_yellow else cli::col_red
          
          cat(paste0(
            rang_color(sprintf("%-6d", print_df$Rang[i])),
            cli::col_cyan(sprintf("%-20s", print_df$Crypto[i])),
            interet_color(sprintf("%-15s", paste0(print_df$Interet[i], "%"))),
            pic_color(sprintf("%-15s", paste0(print_df$Pic[i], "%"))),
            "\n"
          ))
        }
        
        # L√©gende des couleurs avec meilleure pr√©sentation
        cat("\n", section_title_style("=== L√âGENDE ==="), "\n\n")
        
        # L√©gende pour le rang
        cat(info_secondary_style("Position dans le classement :"), "\n")
        cat(sprintf("   %s %s\n", cli::col_green("‚óè"), "Top 3"))
        cat(sprintf("   %s %s\n", cli::col_blue("‚óè"), "Top 4-10"))
        cat(sprintf("   %s %s\n", cli::col_white("‚óè"), "Autres positions"))
        
        # L√©gende pour l'int√©r√™t moyen
        cat(info_secondary_style("\nNiveau d'int√©r√™t moyen :"), "\n")
        cat(sprintf("   %s %s\n", cli::col_green("‚óè"), "√âlev√©     (‚â• 50%)"))
        cat(sprintf("   %s %s\n", cli::col_yellow("‚óè"), "Moyen     (‚â• 20%)"))
        cat(sprintf("   %s %s\n", cli::col_red("‚óè"), "Faible    (< 20%)"))
        
        # L√©gende pour les pics d'int√©r√™t
        cat(info_secondary_style("\nPic d'int√©r√™t :"), "\n")
        cat(sprintf("   %s %s\n", cli::col_green("‚óè"), "Fort      (‚â• 80%)"))
        cat(sprintf("   %s %s\n", cli::col_yellow("‚óè"), "Moyen     (‚â• 40%)"))
        cat(sprintf("   %s %s\n", cli::col_red("‚óè"), "Faible    (< 40%)"))
        
        cat("\n", highlight_style("NOTE : "), info_style("Les pourcentages repr√©sentent le niveau d'int√©r√™t relatif par rapport au pic maximum (100%).\n\n"))
      } else {
        cat(warning_style("\nAucun r√©sultat valide n'a pu √™tre obtenu.\n"))
      }
    } else {
      cat(error_style("\nAucune donn√©e n'a pu √™tre r√©cup√©r√©e. Veuillez r√©essayer plus tard.\n"))
    }
    
    cat(question_style("\nAppuyez sur Entr√©e pour effectuer une nouvelle analyse ou tapez '0' pour quitter : "))
    reponse <- readline()
    if (reponse == "0") {
      cat(info_style("\nRetour au menu principal...\n"))
      break
    }
  }
}


################################################################################
#########                  LUNAR CRUSH (API Payante)
################################################################################

lunar_crush <- function() {
  # Message d'introduction
  cat(section_title_style("\nBienvenue sur LunarCrush - Analyse Crypto avanc√©e !\n"))
  cat(success_style("\n===========================================================\n"))
  cat(highlight_style("LunarCrush est une plateforme innovante qui fournit des analyses approfondies sur les cryptomonnaies. Voici ce qu'elle offre :\n"))
  
  cat(highlight_style("\nAnalyse des tendances sociales :"), 
      info_style("D√©couvrez les cryptomonnaies les plus mentionn√©es sur les r√©seaux sociaux, identifiez les tendances √©mergentes et √©valuez l'int√©r√™t communautaire."), "\n")
  
  cat(highlight_style("\nAnalyse des tendances de recherche :"), 
      info_style("Obtenez un aper√ßu des recherches les plus populaires pour les cryptos sur diverses plateformes."), "\n")
  
  cat(highlight_style("\nAltRank :"), 
      info_style("Classement unique qui combine l'activit√© sociale et les indicateurs de march√© pour √©valuer les opportunit√©s cach√©es."), "\n")
  
  cat(highlight_style("\nGalaxy Score :"), 
      info_style("Un score exclusif bas√© sur une combinaison de donn√©es sociales, de march√© et techniques pour mesurer la sant√© et la qualit√© d'une crypto."), "\n")
  
  cat(success_style("\n===========================================================\n"))
  
  # Message indiquant que l'outil est en pause
  cat(warning_style("\nActuellement, notre outil est en cours de d√©veloppement car l'API LunarCrush n√©cessite un abonnement payant.\n"))
  cat(warning_style("\nLa construction de cet outil est donc temporairement en pause.\n"))
  
  # Menu principal pour LunarCrush
  repeat {
    cat(section_title_style("\n=== Menu LunarCrush ===\n"))
    options <- c(
      question_style("Retour au menu P√©pitesHunter"),
      "Analyse des tendances sociales",
      "Analyse des tendances de recherche",
      "AltRank",
      "Galaxy Score"
    )
    
    for (i in seq_along(options)) {
      cat(paste0(i - 1, ". ", options[i], "\n"))
    }
    
    choix <- readline(question_style("Veuillez choisir une option (par num√©ro) : "))
    
    if (choix == "0") {
      cat(question_style("\nRetour au menu P√©pitesHunter...
"))
      break
    } else if (choix %in% c("1", "2", "3", "4")) {
      option <- options[as.numeric(choix) + 1]
      cat(success_style(paste0("\nVous avez choisi : ", option, "\n")))
      
      # Explication sp√©cifique √† chaque option
      if (option == "Analyse des tendances sociales") {
        cat(info_style("\nL'analyse des tendances sociales vous permet de rep√©rer les cryptomonnaies les plus mentionn√©es sur les r√©seaux sociaux. Ces informations peuvent aider √† identifier des opportunit√©s avant qu'elles ne deviennent mainstream.\n"))
      } else if (option == "Analyse des tendances de recherche") {
        cat(info_style("\nCette option analyse les termes de recherche pour les cryptos, ce qui peut indiquer un int√©r√™t croissant ou une tendance en d√©veloppement.\n"))
      } else if (option == "AltRank") {
        cat(info_style("\nAltRank combine l'activit√© sociale et les indicateurs de march√© pour classer les cryptos, en mettant en lumi√®re celles qui ont un potentiel cach√©.\n"))
      } else if (option == "Galaxy Score") {
        cat(info_style("\nGalaxy Score est un indicateur unique qui √©value la sant√© globale et la qualit√© d'une crypto en fonction de donn√©es sociales, de march√© et techniques.\n"))
      }
      
      # Message indiquant que la fonctionnalit√© est indisponible
      cat(warning_style("\nCette fonctionnalit√© est en cours de construction.\n"))
      cat(warning_style("\nMalheureusement, l'API LunarCrush est payante et n√©cessite un abonnement.\n"))
    } else {
      cat(warning_style("\nChoix invalide. Veuillez s√©lectionner un num√©ro parmi les options disponibles.\n"))
    }
  }
}

# Appel √† la fonction principale



################################################################################
#########                  Santiment (API Payante)
################################################################################

santiment <- function() {
  # Message d'introduction
  cat(section_title_style("\nBienvenue sur Santiment - Analyse Crypto avanc√©e !\n"))
  cat(success_style("\n===========================================================\n"))
  cat(highlight_style("Santiment est une plateforme sp√©cialis√©e dans l'analyse des cryptomonnaies, ax√©e sur quatre types de donn√©es principales :\n"))
  
  cat(highlight_style("\nDonn√©es on-chain :"), 
      info_style("Cela inclut les transactions en temps r√©el, les flux d'√©changes, et les donn√©es blockchain pertinentes. Ces analyses permettent d'identifier les mouvements de \"whales\" (grands d√©tenteurs de crypto) ou des changements inhabituels dans les activit√©s on-chain."), "\n")
  
  cat(highlight_style("\nSignaux sociaux :"), 
      info_style("Analyse des discussions sur les r√©seaux sociaux pour d√©tecter les tendances √©mergentes et les sentiments autour des cryptomonnaies."), "\n")
  
  cat(highlight_style("\nAnalyse de sentiment de march√© :"), 
      info_style("Utilise des m√©triques pour comprendre si le sentiment global des investisseurs est optimiste, pessimiste ou neutre."), "\n")
  
  cat(highlight_style("\nDonn√©es de d√©veloppement :"), 
      info_style("Donn√©es sur l'activit√© des d√©veloppeurs des projets blockchain, incluant les commits GitHub ou l'√©volution des projets techniques."), "\n")
  
  cat(success_style("\n===========================================================\n"))
  
  # Message indiquant que l'outil est en pause
  cat(warning_style("\nActuellement, cet outil est en cours de d√©veloppement car l'API Santiment n√©cessite un abonnement payant.\n"))
  cat(warning_style("\nLa construction de cet outil est donc temporairement en pause.\n"))
  
  # Menu principal pour Santiment
  repeat {
    cat(section_title_style("\n=== Menu Santiment ===\n"))
    options <- c(
      question_style("Retour au menu P√©pitesHunter"),
      "Analyse des donn√©es on-chain",
      "Analyse des signaux sociaux",
      "Analyse du sentiment de march√©",
      "Suivi des donn√©es de d√©veloppement"
    )
    
    for (i in seq_along(options)) {
      cat(paste0(i - 1, ". ", options[i], "\n"))
    }
    
    choix <- readline(info_style("Veuillez choisir une option (par num√©ro) : "))
    
    if (choix == "0") {
      cat(question_style("\nRetour au menu P√©pitesHunter...
"))
      break
    } else if (choix %in% c("1", "2", "3", "4")) {
      option <- options[as.numeric(choix) + 1]
      cat(success_style(paste0("\nVous avez choisi : ", option, "\n")))
      
      # Message indiquant que la fonctionnalit√© est indisponible
      cat(warning_style("\nCette fonctionnalit√© est en cours de construction.\n"))
      cat(warning_style("\nMalheureusement, l'API Santiment est payante et n√©cessite un abonnement.\n"))
    } else {
      cat(warning_style("\nChoix invalide. Veuillez s√©lectionner un num√©ro parmi les options disponibles.\n"))
    }
  }
}

# Appel √† la fonction principale

##################################################
# Appel √† la fonction P√©pitesHunter
##################################################


pepite_hunter <- function() {
  cat(section_title_style("\nP√©pitesHunter - Cryptowise Copilote :\n"))
  cat(success_style("\n===========================================================\n"))
  cat(highlight_style("Bienvenue sur votre outil unique pour d√©tecter les signaux de probable run sur des cryptomonnaies prometteuses.\n"))
  cat(info_secondary_style("\nAvec P√©pitesHunter, vous pouvez :\n"))
  cat("- Analyser les cryptos les plus recherch√©es sur diff√©rentes plateformes.\n")
  cat("- Observer leur progression sur plusieurs p√©riodes temporelles.\n")
  cat("- Identifier les mouvements potentiels avant qu'ils ne deviennent des tendances majeures.\n")
  cat(info_secondary_style("\n Nos options:\n"))
  cat("- ", highlight_style("Signal Prix"), ": Observer en temps r√©el les variations de prix des cryptos et d√©tecter les signaux de rupture.\n")
  cat("- ", highlight_style("Volume et Trading"), ": Analyser les volumes de trading pour identifier les cryptos les plus liquides.\n")
  cat("- ", highlight_style("Statistiques Sociales"), ": Explorer les m√©triques sociales pour mesurer l‚Äôengagement et les opinions.\n")
  cat("- ", highlight_style("Analyse des Tendances et Recherches Populaires"), ": D√©couvrir les cryptos en vogue gr√¢ce √† des analyses des tendances actuelles.\n")
  cat("- ", highlight_style("Google Trend"), ": Suivre les recherches Google pour identifier les cryptos qui suscitent le plus d‚Äôint√©r√™t.\n")
  cat("- ", highlight_style("Lunar Crush"), ": Plonger dans les insights sociaux d√©taill√©s des cryptomonnaies.\n")
  cat("- ", highlight_style("Santiment"), ": √âtudier les donn√©es on-chain et le sentiment global du march√© crypto.\n")
  
  cat(success_style("===========================================================\n"))
  
  # T√©l√©charger les donn√©es une fois au d√©but
  download_coingecko_data()
  
  # V√©rifier si les donn√©es ont √©t√© correctement t√©l√©charg√©es
  if (is.null(coingecko_data) || nrow(coingecko_data) == 0) {
    cat(error_style("\nImpossible de continuer : les donn√©es n'ont pas √©t√© t√©l√©charg√©es correctement.\n"))
    return()
  }
  
  
  repeat {
    cat(section_title_style("\n=== Menu des outils P√©pitesHunter ===\n"))
    cat(question_style("0) Retour au menu principal\n"))
    cat("1) Signal Prix\n")
    cat("2) Volume et Trading\n")
    cat("3) Statistiques Sociales\n")
    cat("4) Analyse des Tendances et Recherches Populaires\n")
    cat("5) Google Trend\n")
    cat("6) Lunar Crush (", warning_style("restreinte"), ")\n")
    cat("7) Santiment (", warning_style("restreinte"), ")\n")
    
    
    choix <- readline(question_style("\nVotre choix : "))
    
    if (choix == "0") {
      cat(info_style("\nRetour au menu principal...\n"))
      break
    } else if (choix == "1") {
      process_price_signals(coingecko_data)
    } else if (choix == "2") {
      process_volume_trading(coingecko_data)
    } else if (choix == "3") {
      social_main_menu()
    } else if (choix == "4") {
      trend_menu()
    } else if (choix == "5") {
      google_trend_analysis()
    } else if (choix == "6") {
      lunar_crush()
    } else if (choix == "7") {
      santiment()
    } else {
      cat(warning_style("\nOption invalide. Veuillez r√©essayer.\n"))
    }
  }
}


# Appel √† la fonction P√©pitesHunter

####################################################################################################
###
#####                                   
######                                   
#
#
##                                          Crypto News
#####
###
###
###
####
####
###################################################################################################


library(httr)
library(stringr)
library(xml2)
library(rvest)
library(lubridate)
library(tibble)
library(dplyr)
library(crayon)

# D√©finition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline
pro_style <- red$bold  # Style pour PRO

cryptonews <- function() {
  # Message d'accueil avec styles
  cat(success_style("=== Bienvenue sur CryptoNews ===\n\n"),
      info_style("Notre application vous permet de suivre l'actualit√© crypto en temps r√©el :\n"),
      highlight_style("‚Ä¢ Acc√©dez aux 25 derni√®res d√©p√™ches les plus r√©centes\n"),
      highlight_style("‚Ä¢ Informations tri√©es chronologiquement\n"),
      highlight_style("‚Ä¢ Mises √† jour en temps r√©el\n\n"),
      info_secondary_style("Restez inform√© des derni√®res tendances du march√© crypto !\n\n"))
  
  # Message de chargement
  cat(info_style("\nChargement des donn√©es en cours"), info_style("..."))
  Sys.sleep(1)
  cat(info_style("."))
  Sys.sleep(1)
  cat(info_style("."))
  Sys.sleep(1)
  cat(info_style(".\n\n"))
  
  # D√©finition du user agent
  user_agent <- user_agent(
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 \
     (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
  )
  
  # URL de base
  urlpage <- "https://coinmarketcap.com/fr/"
  
  #### Function to get the HTML page ####
  get_page <- function(urlpage) {
    Sys.sleep(7 + runif(1, 0, 8))  # Pause "anti-bot"
    res <- httr::GET(urlpage, user_agent)
    html <- xml2::read_html(httr::content(res, "text"))
    clean_html <- str_replace_all(as.character(html), "[\\t\\r\\n\\f]", "")
    return(clean_html)
  }
  
  # On r√©cup√®re la page CoinMarketCap Community (en fran√ßais)
  html_coinmarket <- get_page("https://coinmarketcap.com/community/fr/articles/browse/?sort=-publishedOn")
  
  # Regex pour extraire les donn√©es
  title_pattern       <- '"title":"(.*?)","subtitle"'
  url_pattern         <- '"sourceUrl":"(.*?)","id"'
  datetime_pattern    <- '"releasedAt":"(.*?)"'
  likes_pattern       <- '"likes":(\\d+),'
  shares_pattern      <- '"shares":(\\d+),'
  views_pattern       <- '"views":(\\d+),'
  announcement_pattern<- '"announcement":(true|false)'
  avatar_pattern      <- '"avatarUrl":"(.*?)"'
  cover_pattern       <- '"cover":"(.*?)"'
  subtitle_pattern    <- '"subtitle":"(.*?)","sourceName"'
  source_pattern      <- '"sourceName":"(.*?)","language"'
  language_pattern    <- '"language":"(.*?)","sourceUrl"'
  assets_pattern      <- '"assets":\\[(.*?)\\]'
  
  # Extraction des blocs "assets" de type JSON (crypto mentionn√©es)
  articles <- str_match_all(html_coinmarket, assets_pattern)[[1]][, 2]
  
  # Fonction pour extraire les Noms, IDs, Symboles de chaque article
  extract_crypto_info <- function(article) {
    slugs    <- str_match_all(article, '"slug":"(.*?)"')[[1]][, 2]
    coin_ids <- str_match_all(article, '"coinId":(\\d+)')[[1]][, 2]
    symbols  <- str_match_all(article, '"symbol":"(.*?)"')[[1]][, 2]
    
    list(
      CryptoNames = paste(slugs, collapse = " - "),
      CoinIDs     = paste(coin_ids, collapse = " - "),
      Symbols     = paste(symbols, collapse = " - ")
    )
  }
  
  # Appliquer la fonction pour chaque bloc "assets"
  crypto_data    <- lapply(articles, extract_crypto_info)
  crypto_data_df <- do.call(rbind, lapply(crypto_data, as.data.frame))
  
  # Extraire les autres informations
  titles        <- unlist(str_match_all(html_coinmarket, title_pattern)[[1]][, 2])
  urls          <- unlist(str_match_all(html_coinmarket, url_pattern)[[1]][, 2])
  datetimes_raw <- unlist(str_match_all(html_coinmarket, datetime_pattern)[[1]][, 2])
  
  # Conversion de la date/heure UTC en fuseau Europe/Paris
  datetimes_utc <- ymd_hms(datetimes_raw, tz = "UTC")
  dates_paris   <- as.Date(with_tz(datetimes_utc, tzone = "Europe/Paris"))
  times_paris   <- format(with_tz(datetimes_utc, tzone = "Europe/Paris"), "%H:%M:%S")
  
  likes         <- as.integer(unlist(str_match_all(html_coinmarket, likes_pattern)[[1]][, 2]))
  shares        <- as.integer(unlist(str_match_all(html_coinmarket, shares_pattern)[[1]][, 2]))
  views         <- as.integer(unlist(str_match_all(html_coinmarket, views_pattern)[[1]][, 2]))
  announcements <- as.logical(unlist(str_match_all(html_coinmarket, announcement_pattern)[[1]][, 2]))
  avatars       <- unlist(str_match_all(html_coinmarket, avatar_pattern)[[1]][, 2])
  covers        <- unlist(str_match_all(html_coinmarket, cover_pattern)[[1]][, 2])
  subtitles     <- unlist(str_match_all(html_coinmarket, subtitle_pattern)[[1]][, 2])
  sources       <- unlist(str_match_all(html_coinmarket, source_pattern)[[1]][, 2])
  languages     <- unlist(str_match_all(html_coinmarket, language_pattern)[[1]][, 2])
  
  # V√©rification des longueurs
  if (!all(lengths(list(
    titles, urls, dates_paris, likes, shares, views, announcements,
    avatars, covers, subtitles, sources, languages, crypto_data_df$CryptoNames
  )) == length(titles))) {
    stop("Les longueurs des variables extraites ne correspondent pas.")
  }
  
  # Tableau final
  data <- data.frame(
    Title        = titles,
    URL          = urls,
    Date         = dates_paris,
    Time         = times_paris,
    Likes        = likes,
    Shares       = shares,
    Views        = views,
    Announcement = announcements,
    AvatarURL    = avatars,
    CoverURL     = covers,
    Subtitles    = subtitles,
    Source       = sources,
    Language     = languages,
    CryptoNames  = crypto_data_df$CryptoNames,
    CoinIDs      = crypto_data_df$CoinIDs,
    Symbols      = crypto_data_df$Symbols,
    stringsAsFactors = FALSE
  )
  
  # Conversion en tibble
  data_tibble <- as_tibble(data)
  
  # =======================
  # Fonctions annexes
  # =======================
  
  #### Fonction 10 articles "SYMBOLS" r√©cents ####
  get_recent_articles_by_symbol <- function(data, symbol, n = 10) {
    filtered_articles <- data %>%
      filter(grepl(paste0("\\b", symbol, "\\b"), Symbols)) %>%
      arrange(desc(Date), desc(Time))
    
    selected_articles <- filtered_articles %>%
      select(Title, Subtitles, Symbols, Date, Time, URL, Likes, Shares, Views)
    
    head(selected_articles, n)
  }
  
  #### Fonction pour g√©n√©rer un tableau HTML stylis√© ####
  generate_html_table <- function(data) {
    rows <- apply(data, 1, function(row) {
      title_link <- sprintf('<a href="%s" target="_blank">%s</a>', row["URL"], row["Title"])
      sprintf('<tr>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%d</td>
                 <td>%d</td>
                 <td>%d</td>
               </tr>',
              title_link, row["Subtitles"], row["Symbols"], row["Date"], row["Time"],
              as.integer(row["Likes"]), as.integer(row["Shares"]), as.integer(row["Views"]))
    })
    
    table_html <- sprintf('
      <table border="1" style="border-collapse: collapse; width: 100%%; text-align: left;">
        <thead>
          <tr>
            <th>Title</th>
            <th>Subtitles</th>
            <th>Symbols</th>
            <th>Date</th>
            <th>Time</th>
            <th>Likes</th>
            <th>Shares</th>
            <th>Views</th>
          </tr>
        </thead>
        <tbody>
          %s
        </tbody>
      </table>', paste(rows, collapse = "\n"))
    
    return(table_html)
  }
  
  #### Fonction 10 articles qui ont le + de : Likes / Shares / Views ####
  get_top_articles <- function(data, metric = c("Likes", "Shares", "Views"), n = 10) {
    metric <- match.arg(metric)
    
    top_articles <- data %>%
      arrange(desc(!!sym(metric))) %>%
      select(Title, Subtitles, Symbols, Date, Time, URL, Likes, Shares, Views)
    
    head(top_articles, n)
  }
  
  #### Fonction 10 articles en choisissant "Symbol" + Likes/Shares/Views ####
  get_top_articles_by_symbol_and_metric <- function(data, symbol, metric = c("Likes", "Shares", "Views"), n = 10) {
    metric <- match.arg(metric)
    
    filtered_articles <- data %>%
      filter(grepl(paste0("\\b", symbol, "\\b"), Symbols))
    
    sorted_articles <- filtered_articles %>%
      arrange(desc(!!sym(metric))) %>%
      select(Title, Subtitles, Symbols, Date, Time, URL, Likes, Shares, Views)
    
    head(sorted_articles, n)
  }
  
  #### Sortie articles en Html ####
  generate_styled_html <- function(data, symbol, metric = c("Likes", "Shares", "Views"), n = 10, output_file = "top_articles.html") {
    filtered_data <- get_top_articles_by_symbol_and_metric(data, symbol, metric, n)
    
    rows <- apply(filtered_data, 1, function(row) {
      title_link <- sprintf('<a href="%s" target="_blank">%s</a>', row["URL"], row["Title"])
      sprintf('<tr>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%s</td>
                 <td>%d</td>
                 <td>%d</td>
                 <td>%d</td>
               </tr>',
              title_link, row["Subtitles"], row["Symbols"], row["Date"], row["Time"],
              as.integer(row["Likes"]), as.integer(row["Shares"]), as.integer(row["Views"]))
    })
    
    css <- "
      <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; color: #333; }
        tr:nth-child(even) { background-color: #f9f9f9; }
        tr:hover { background-color: #f1f1f1; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
        h1 { color: #333; }
      </style>
    "
    
    table_html <- sprintf('
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Top Articles</title>
        %s
      </head>
      <body>
        <h1>Top %d Articles for %s Sorted by %s</h1>
        <table>
          <thead>
            <tr>
              <th>Title</th>
              <th>Subtitles</th>
              <th>Symbols</th>
              <th>Date</th>
              <th>Time</th>
              <th>Likes</th>
              <th>Shares</th>
              <th>Views</th>
            </tr>
          </thead>
          <tbody>
            %s
          </tbody>
        </table>
      </body>
      </html>
    ', css, n, symbol, metric, paste(rows, collapse = "\n"))
    
    writeLines(table_html, output_file)
  }
  
  # Affichage des 25 premiers titres
  cat(section_title_style("\nVoici les 25 premiers titres des articles :\n\n"))
  cat(paste(seq_along(head(data$Title, 25)), " - ", head(data$Title, 25), sep = ""), sep = "\n")
  
  # Message pour quitter apr√®s l'affichage
  cat("\n", question_style("\nAppuyez sur Entr√©e pour revenir au menu principal..."))
  invisible(readline())
  cat(success_style("\nRetour au menu principal...\n"))
  return(invisible())
}

# Pour ex√©cuter la fonction :

####################################################################################################
###
#####                                   
######                                   
#
#
##                                          Market Scope
#####
###
###
###
####
####
###################################################################################################

############### Market scope ###################
##########################################
######################################
#################################
##########################
###############


# Chargement des biblioth√®ques n√©cessaires
library(crayon)      # Pour des styles de couleur dans la console
library(dplyr)       # Pour la manipulation de donn√©es
library(ggplot2)     # Pour les graphiques
library(httr)        # Pour les appels API
library(jsonlite)    # Pour les donn√©es JSON
library(curl)
library(kableExtra)
library(cli)
library(scales)      # Pour formater les nombres
library(gtrendsR)
library(TTR)         # Pour les indicateurs techniques
library(plotly)      # Optionnel : graphiques interactifs
library(lubridate)   # Pour manipuler les dates
library(zoo)         # Pour na.approx()
library(gridExtra)   # Pour grid.arrange()


# D√©finition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline
pro_style <- red$bold  # Style pour PRO

################################################################################
##########################
##################                      BITCOIN PULSE
#############
#########@
################################################################################
# Fonction pour r√©cup√©rer les donn√©es CoinGecko
get_coingecko_data <- function(endpoint, params = list()) {
  base_url <- "https://api.coingecko.com/api/v3"
  url <- paste0(base_url, endpoint)
  
  response <- tryCatch({
    GET(url, query = params)
  }, error = function(e) {
    cat(error_style("\nErreur de connexion √† l'API CoinGecko. V√©rifiez votre connexion internet.\n"))
    return(NULL)
  })
  
  if (is.null(response)) return(NULL)
  
  if (status_code(response) == 200) {
    return(fromJSON(rawToChar(response$content)))
  } else if (status_code(response) == 429) {
    cat(warning_style("\nLimite d'API atteinte. Pause de 60 secondes...\n"))
    Sys.sleep(61)
    return(get_coingecko_data(endpoint, params))
  } else {
    cat(error_style(paste("\nErreur API:", status_code(response), "\n")))
    return(NULL)
  }
}

##########################
# Fonction pour calculer les moyennes mobiles
calculate_moving_averages <- function(data, horizon_days) {
  if (as.numeric(horizon_days) == 1) return(list())
  
  ma_periods <- if (as.numeric(horizon_days) <= 7) {
    c(4, 6, 7)
  } else if (as.numeric(horizon_days) <= 30) {
    c(7, 14, 21)
  } else {
    c(20, 50, 200)
  }
  
  ma_list1 <- list()
  for (period in ma_periods) {
    if (period <= length(data)) {
      ma_list1[[paste0("MA", period)]] <- list(
        values      = SMA(data, n = period),
        period      = period,
        description = paste0("Moyenne mobile sur ", period, " jours")
      )
    }
  }
  return(ma_list1)
}

##########################
# Fonction d'analyse des tendances
analyze_trend <- function(price, ma_values) {
  if (length(ma_values) < 2) return(NULL)
  
  ma_short <- tail(ma_values[[1]]$values, 1)
  ma_long  <- tail(ma_values[[length(ma_values)]]$values, 1)
  
  trend_strength <- abs((price - ma_long) / ma_long) * 100
  
  if (price > ma_short && price > ma_long) {
    list(
      direction   = "HAUSSI√àRE",
      strength    = trend_strength,
      description = sprintf("Tendance haussi√®re confirm√©e (%.2f%% au-dessus de la MM longue)", trend_strength)
    )
  } else if (price < ma_short && price < ma_long) {
    list(
      direction   = "BAISSI√àRE",
      strength    = trend_strength,
      description = sprintf("Tendance baissi√®re confirm√©e (%.2f%% en-dessous de la MM longue)", trend_strength)
    )
  } else {
    list(
      direction   = "NEUTRE",
      strength    = trend_strength,
      description = "Phase de consolidation - pas de tendance claire"
    )
  }
}

##########################
# Fonction pour calculer des m√©triques sur les donn√©es
calculate_metrics <- function(data) {
  # On calcule diff(log(data$price)) = rendements log
  price_diff <- diff(log(data$price))
  
  variance   <- var(price_diff, na.rm = TRUE)
  std_dev    <- sqrt(variance)
  volatility <- std_dev * 100
  
  list(
    volatility = volatility,
    variance   = variance,
    std_dev    = std_dev * 100,
    expectation= mean(data$price, na.rm = TRUE),
    current    = tail(data$price, 1),
    max        = max(data$price, na.rm = TRUE),
    min        = min(data$price, na.rm = TRUE),
    from_high  = ((tail(data$price, 1) - max(data$price)) / max(data$price)) * 100,
    from_low   = ((tail(data$price, 1) - min(data$price)) / min(data$price))  * 100,
    max_volume = max(data$volume, na.rm = TRUE),
    min_volume = min(data$volume, na.rm = TRUE)
  )
}

##########################
# Fonction pour cr√©er et configurer les graphiques (comme dans CryptoFocus)
create_analysis_plot <- function(data, y_col, ma_cols, title, y_label, is_volume = FALSE) {
  suppressWarnings({
    
    p <- ggplot(data, aes(x = date)) +
      geom_line(aes_string(y = y_col), color = "#2E86C1", size = 1)
    
    # Ajouter les moyennes mobiles s'il y en a
    if (length(ma_cols) > 0) {
      for (i in seq_along(ma_cols)) {
        p <- p + geom_line(aes_string(y = ma_cols[i]),
                           color    = c("#E74C3C", "#F39C12", "#27AE60")[i],
                           size     = 0.8,
                           linetype = "dashed")
      }
    }
    
    # √âchelle Y
    if (is_volume) {
      p <- p + scale_y_continuous(labels = function(x) paste0(format(x / 1e9, digits = 2), " Mds $"))
    } else {
      p <- p + scale_y_continuous(labels = scales::label_number(big.mark = " "))
    }
    
    # √âchelle X : date en POSIXct
    p <- p + scale_x_datetime(date_breaks = "7 days", date_labels = "%Y-%m-%d")
    
    p + labs(
      title = title,
      x     = "Date",
      y     = y_label
    ) +
      theme_minimal() +
      theme(
        plot.title       = element_text(size = 14, face = "bold"),
        axis.title       = element_text(size = 12),
        axis.text        = element_text(size = 10),
        panel.grid.minor = element_blank()
      )
  })
}

##########################
# Fonction principale
bitcoin_pulse <- function() {
  
  repeat {
    cat(section_title_style("\n=== BitcoinPulse : Une Analyse Technique du Bitcoin ===\n\n"))
    cat(highlight_style("BitcoinPulse vous offre une analyse d√©taill√©e et p√©dagogique du march√© Bitcoin.\n"))
    cat("Gr√¢ce √† des indicateurs techniques (moyennes mobiles, volatilit√©, volumes), vous comprendrez mieux la dynamique du march√©.\n")
    cat("Chaque section pr√©sente des explications pour interpr√©ter ces indicateurs.\n\n")
    
    # Menu d'horizon
    horizons <- list(
      "1" = list(days = "7",   label = "7 jours - Analyse court terme"),
      "2" = list(days = "14",  label = "14 jours - Analyse swing trading"),
      "3" = list(days = "30",  label = "30 jours - Analyse mensuelle"),
      "4" = list(days = "90",  label = "90 jours - Analyse trimestrielle"),
      "5" = list(days = "180", label = "180 jours - Analyse semestrielle"),
      "6" = list(days = "365", label = "365 jours - Analyse annuelle")
    )
    
    cat(section_title_style("\nS√©lection de l'horizon d'analyse :\n\n"))
    for (i in seq_along(horizons)) {
      cat(sprintf("%d) %s\n", i, horizons[[as.character(i)]]$label))
    }
    cat(question_style("0) Retour (quitter BitcoinPulse)\n\n"))
    
    choix <- readline(question_style("Votre choix (0-6) : "))
    if (!choix %in% c("0", "1", "2", "3", "4", "5", "6")) {
      cat(error_style("Option invalide. Veuillez choisir entre 0 et 6.\n"))
      next
    }
    
    if (choix == "0") {
      cat(info_style("\nVous avez choisi de quitter BitcoinPulse. √Ä bient√¥t!\n"))
      break
    }
    
    # R√©cup√©ration du nombre de jours
    days <- horizons[[choix]]$days
    
    # R√©cup√©ration des donn√©es Bitcoin
    btc_data <- get_coingecko_data(
      "/coins/bitcoin/market_chart",
      list(vs_currency = "usd", days = days, interval = "daily")
    )
    
    if (is.null(btc_data)) {
      cat(error_style("\nErreur de r√©cup√©ration des donn√©es. R√©essayez plus tard.\n"))
      next
    }
    
    # Pr√©paration du data.frame
    # On utilise POSIXct (millisecondes => division par 1000), comme dans CryptoFocus
    market_data <- data.frame(
      date   = as.POSIXct(btc_data$prices[, 1] / 1000, origin = "1970-01-01"),
      price  = btc_data$prices[, 2],
      volume = btc_data$total_volumes[, 2]
    ) %>%
      distinct(date, .keep_all = TRUE) %>%
      arrange(date)
    
    # Interpolation des √©ventuels NA
    market_data$price  <- zoo::na.approx(market_data$price,  rule = 2)
    market_data$volume <- zoo::na.approx(market_data$volume, rule = 2)
    
    # Calcul des moyennes mobiles
    ma_price  <- calculate_moving_averages(market_data$price, days)
    ma_volume <- calculate_moving_averages(market_data$volume, days)
    
    # Int√©grer les moyennes mobiles dans le data.frame
    for (ma_type in c("price", "volume")) {
      ma_list1 <- if (ma_type == "price") ma_price else ma_volume
      for (ma_name in names(ma_list1)) {
        market_data[[paste0(ma_type, "_", ma_name)]] <- ma_list1[[ma_name]]$values
      }
    }
    
    # Cr√©ation des graphiques (m√™mes fonctions que dans CryptoFocus)
    price_plot <- create_analysis_plot(
      market_data,
      "price",
      paste0("price_MA", sapply(ma_price, function(x) x$period)),
      paste("Bitcoin - √âvolution du Prix sur", days, "jours"),
      "Prix (USD)"
    )
    
    volume_plot <- create_analysis_plot(
      market_data,
      "volume",
      paste0("volume_MA", sapply(ma_volume, function(x) x$period)),
      paste("Bitcoin - √âvolution du Volume sur", days, "jours"),
      "Volume (USD)",
      is_volume = TRUE
    )
    
    # Affichage des graphiques
    print(price_plot)
    cat(warning_style("\nNote : Les donn√©es historiques ne pr√©sagent pas des performances futures.\n"))
    print(volume_plot)
    
    # Calcul des m√©triques et analyse
    metrics <- calculate_metrics(market_data)
    trend   <- analyze_trend(metrics$current, ma_price)
    
    # Affichage du rapport
    cat(section_title_style("\n=== RAPPORT D'ANALYSE BITCOIN ===\n\n"))
    
    cat(highlight_style("M√âTRIQUES DE PRIX\n"))
    cat("--------------------------------\n")
    cat("Prix actuel     : ", cli::col_green(paste("$", format(metrics$current, big.mark = " "))), "\n")
    cat("Plus haut       : ", cli::col_yellow(paste("$", format(metrics$max,    big.mark = " "))), "\n")
    cat("Plus bas        : ", cli::col_yellow(paste("$", format(metrics$min,    big.mark = " "))), "\n")
    cat("√âcart du haut   : ", ifelse(
      metrics$from_high >= 0,
      cli::col_green(paste0("+", format(metrics$from_high, digits = 2), "%")),
      cli::col_red(paste0(format(metrics$from_high, digits = 2), "%"))
    ), "\n")
    cat("√âcart du bas    : ", ifelse(
      metrics$from_low >= 0,
      cli::col_green(paste0("+", format(metrics$from_low, digits = 2), "%")),
      cli::col_red(paste0(format(metrics$from_low, digits = 2), "%"))
    ), "\n")
    
    cat("\n", highlight_style("M√âTRIQUES DE VOLUME\n"))
    cat("--------------------------------\n")
    cat("Volume actuel (fin p√©riode) : ", cli::col_blue(paste(format(tail(market_data$volume, 1) / 1e9, digits = 2), "Mds $")), "\n")
    cat("Volume moyen                : ", cli::col_blue(paste(format(mean(market_data$volume) / 1e9, digits = 2), "Mds $")), "\n")
    cat("Volume max                  : ", cli::col_green(paste(format(metrics$max_volume / 1e9, digits = 2), "Mds $")), "\n")
    cat("Volume min                  : ", cli::col_red(paste(format(metrics$min_volume / 1e9, digits = 2), "Mds $")), "\n")
    
    cat("\n", highlight_style("ANALYSE TECHNIQUE\n"))
    cat("--------------------------------\n")
    cat("Volatilit√© (√©cart-type) : ", cli::col_blue(paste0(format(metrics$volatility, digits = 2), "%")), "\n")
    cat("Esp√©rance (moyenne)     : ", cli::col_blue(paste("$", format(metrics$expectation, big.mark = " "))), "\n")
    
    if (!is.null(trend)) {
      trend_color <- switch(
        trend$direction,
        "HAUSSI√àRE" = cli::col_green,
        "BAISSI√àRE" = cli::col_red,
        cli::col_white
      )
      cat("Tendance               : ", trend_color(trend$description), "\n")
    } else {
      cat("Tendance               : Neutre / Ind√©termin√©e\n")
    }
    
    cat("\n", highlight_style("MOYENNES MOBILES\n"))
    cat("--------------------------------\n")
    for (ma in ma_price) {
      current_price <- tail(market_data$price, 1)
      ma_value      <- tail(ma$values, 1)
      position <- if (current_price > ma_value) {
        cli::col_green(" (Prix au-dessus)")
      } else {
        cli::col_red(" (Prix en-dessous)")
      }
      cat(sprintf("‚Ä¢ MM%d : $%s%s\n", ma$period, format(ma_value, big.mark = " "), position))
    }
    
    cat(highlight_style("\nD√©finitions et Conseils :\n\n"))
    
    cat(highlight_style("Moyennes Mobiles (MM) :\n"))
    cat("Les moyennes mobiles lissent les fluctuations de prix, r√©v√©lant la tendance sous-jacente.\n\n")
    
    cat(highlight_style("Analyse de la Tendance :\n"))
    cat("- Haussi√®re : le prix se maintient au-dessus des MM (courte et longue).\n")
    cat("- Baissi√®re : le prix se maintient en dessous de ces MM.\n")
    cat("- Neutre    : le prix oscille autour des MM sans direction claire.\n\n")
    
    cat(highlight_style("Volatilit√© :\n"))
    cat("Mesure l'intensit√© des fluctuations de prix (calcul√©e via l'√©cart type des rendements log).\n\n")
    
    cat(highlight_style("Volume :\n"))
    cat("Repr√©sente la quantit√© de BTC √©chang√©e. Les volumes importants peuvent signifier un march√© plus actif.\n\n")
    
    cat(section_title_style("Conclusion :\n"))
    cat("Cette analyse technique donne un aper√ßu du comportement r√©cent du Bitcoin.\n")
    cat("Pour une strat√©gie d'investissement compl√®te, combinez ces informations √† d'autres facteurs (actualit√©, macro-√©conomie, etc.).\n")
    cat("Rappel : Les performances pass√©es ne garantissent pas les performances futures.\n")
    
    cat(warning_style("\nNote : Les donn√©es historiques ne pr√©sagent pas des performances futures.\n"))
    
    readline(info_secondary_style("\nAppuyez sur Entr√©e pour continuer..."))
  }
}


#################### fonction n√©cessaire altcoin tracker

# D'abord les fonctions utilitaires n√©cessaires
safe_format_number <- function(x) {
  if (is.null(x) || length(x) == 0 || is.na(x)) return("N/A")
  return(format_number(x))
}

safe_format_percent <- function(x) {
  if (is.null(x) || length(x) == 0 || is.na(x)) return("N/A")
  return(paste0(format(round(x, 2)), "%"))
}


####################
# Fonction AltcoinTracker corrig√©e
# Version am√©lior√©e d'AltcoinTracker
altcoin_tracker <- function() {
  cat(section_title_style("\n=== AltcoinTracker : Analyse de la Dominance du March√© ===\n\n"))
  
  cat(info_style("AltcoinTracker analyse la r√©partition de la capitalisation\n"))
  cat(info_style("entre Bitcoin, Ethereum et les altcoins.\n\n"))
  
  # R√©cup√©ration des donn√©es des 250 premi√®res cryptos
  cat(info_secondary_style("R√©cup√©ration des donn√©es de march√©...\n"))
  
  tryCatch({
    market_data <- get_coingecko_data(
      "/coins/markets",
      list(
        vs_currency = "usd",
        order = "market_cap_desc",
        per_page = 250,
        sparkline = FALSE
      )
    )
    
    if (is.null(market_data)) {
      cat(error_style("\nImpossible de r√©cup√©rer les donn√©es. Veuillez r√©essayer plus tard.\n"))
      return()
    }
    
    # Calcul des capitalisations
    total_market_cap <- sum(market_data$market_cap, na.rm = TRUE)
    btc_market_cap <- market_data$market_cap[market_data$id == "bitcoin"]
    eth_market_cap <- market_data$market_cap[market_data$id == "ethereum"]
    alt_market_cap <- total_market_cap - btc_market_cap - eth_market_cap
    
    # Calcul des dominances
    btc_dominance <- (btc_market_cap / total_market_cap) * 100
    eth_dominance <- (eth_market_cap / total_market_cap) * 100
    alt_dominance <- (alt_market_cap / total_market_cap) * 100
    
    # Affichage des r√©sultats
    cat(section_title_style("\nAnalyse de la Dominance du March√©\n"))
    cat(info_style("(Bas√© sur les 250 plus grandes capitalisations)\n\n"))
    
    # Tableau de dominance
    cat(cli::col_yellow(paste(
      sprintf("%-20s", "ACTIF"),
      sprintf("%-15s", "DOMINANCE"),
      sprintf("%-20s", "MARKET CAP"),
      "\n"
    )))
    
    cat(paste(rep("-", 55), collapse = ""), "\n")
    
    # Bitcoin
    cat(paste0(
      cli::col_yellow(sprintf("%-20s", "Bitcoin")),
      cli::col_green(sprintf("%-15s", sprintf("%.2f%%", btc_dominance))),
      cli::col_white(sprintf("%-20s", safe_format_number(btc_market_cap))),
      "\n"
    ))
    
    # Ethereum
    cat(paste0(
      cli::col_yellow(sprintf("%-20s", "Ethereum")),
      cli::col_green(sprintf("%-15s", sprintf("%.2f%%", eth_dominance))),
      cli::col_white(sprintf("%-20s", safe_format_number(eth_market_cap))),
      "\n"
    ))
    
    # Altcoins
    cat(paste0(
      cli::col_yellow(sprintf("%-20s", "Autres Altcoins")),
      cli::col_green(sprintf("%-15s", sprintf("%.2f%%", alt_dominance))),
      cli::col_white(sprintf("%-20s", safe_format_number(alt_market_cap))),
      "\n"
    ))
    
    # Capitalisation totale
    cat(paste(rep("-", 55), collapse = ""), "\n")
    cat(paste0(
      cli::col_yellow(sprintf("%-20s", "Total")),
      cli::col_green(sprintf("%-15s", "100%")),
      cli::col_white(sprintf("%-20s", safe_format_number(total_market_cap))),
      "\n\n"
    ))
    
    # R√©sum√© en texte
    cat(highlight_style("R√©partition actuelle du march√© :\n\n"))
    cat(sprintf("‚Ä¢ Bitcoin repr√©sente %.2f%% du march√© avec une capitalisation de %s\n", 
                btc_dominance, safe_format_number(btc_market_cap)))
    cat(sprintf("‚Ä¢ Ethereum repr√©sente %.2f%% du march√© avec une capitalisation de %s\n", 
                eth_dominance, safe_format_number(eth_market_cap)))
    cat(sprintf("‚Ä¢ Les autres altcoins repr√©sentent %.2f%% du march√© avec une capitalisation totale de %s\n\n", 
                alt_dominance, safe_format_number(alt_market_cap)))
    
    cat(info_secondary_style("Note : Ces calculs sont bas√©s sur les 250 plus grandes capitalisations du march√©.\n"))
    
    cat("\n", info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
    readline()
    
  }, error = function(e) {
    cat(error_style("\nUne erreur est survenue lors de l'analyse. Veuillez r√©essayer plus tard.\n"))
    cat(error_style("D√©tails de l'erreur : ", conditionMessage(e), "\n"))
  })
}


# Fonction pour afficher la liste des cryptos disponibles
display_available_cryptos <- function() {
  cat(info_secondary_style("\nR√©cup√©ration de la liste des cryptomonnaies...\n"))
  
  coins <- get_coingecko_data("/coins/markets", 
                              list(vs_currency = "usd",
                                   order = "market_cap_desc",
                                   per_page = 250,
                                   page = 1))
  
  if (is.null(coins)) {
    cat(error_style("\nImpossible de r√©cup√©rer la liste. Veuillez r√©essayer plus tard.\n"))
    return(NULL)
  }
  
  # Cr√©er un dataframe format√©
  coins_df <- data.frame(
    Rang = 1:nrow(coins),
    ID = coins$id,
    Nom = coins$name,
    Symbole = toupper(coins$symbol),
    "Market Cap" = sapply(coins$market_cap, format_number),
    stringsAsFactors = FALSE
  )
  
  # Afficher le tableau
  cat(cli::col_yellow(paste(
    sprintf("%-6s", "RANG"),
    sprintf("%-25s", "NOM"),
    sprintf("%-10s", "SYMBOLE"),
    sprintf("%-15s", "MARKET CAP"),
    sprintf("%-25s", "ID"),
    "\n"
  )))
  
  cat(paste(rep("-", 81), collapse = ""), "\n")
  
  for(i in 1:nrow(coins_df)) {
    cat(paste0(
      cli::col_white(sprintf("%-6s", coins_df$Rang[i])),
      cli::col_cyan(sprintf("%-25s", substr(coins_df$Nom[i], 1, 24))),
      cli::col_green(sprintf("%-10s", coins_df$Symbole[i])),
      cli::col_yellow(sprintf("%-15s", coins_df$`Market Cap`[i])),
      cli::col_blue(sprintf("%-25s", substr(coins_df$ID[i], 1, 24))),
      "\n"
    ))
  }
  
  return(coins_df$ID)
}

################################

# Fonction pour calculer la corr√©lation entre deux s√©ries de prix
calculate_correlation <- function(prices1, prices2) {
  # Assurer la m√™me longueur
  min_length <- min(length(prices1), length(prices2))
  prices1 <- tail(prices1, min_length)
  prices2 <- tail(prices2, min_length)
  
  # Calculer les rendements
  returns1 <- diff(log(prices1))
  returns2 <- diff(log(prices2))
  
  # Calculer la corr√©lation
  correlation <- cor(returns1, returns2, use = "complete.obs")
  return(correlation)
}

# Fonction pour afficher l'analyse comparative
display_comparative_analysis <- function(crypto_data, btc_data, days) {
  cat(section_title_style("\nAnalyse Comparative avec Bitcoin\n\n"))
  
  # Calcul des variations
  crypto_change <- ((tail(crypto_data$price, 1) - crypto_data$price[1]) / crypto_data$price[1]) * 100
  btc_change <- ((tail(btc_data$price, 1) - btc_data$price[1]) / btc_data$price[1]) * 100
  
  # Calcul de la corr√©lation
  correlation <- calculate_correlation(crypto_data$price, btc_data$price)
  beta <- (correlation * sd(diff(log(crypto_data$price)))) / sd(diff(log(btc_data$price)))
  
  # Affichage des r√©sultats
  cat(highlight_style("Performance sur la p√©riode :\n"))
  cat(sprintf("%-20s : ", "Votre crypto"), 
      ifelse(crypto_change >= 0,
             cli::col_green(paste0("+", format_percent(crypto_change))),
             cli::col_red(format_percent(crypto_change))), "\n")
  
  cat(sprintf("%-20s : ", "Bitcoin"), 
      ifelse(btc_change >= 0,
             cli::col_green(paste0("+", format_percent(btc_change))),
             cli::col_red(format_percent(btc_change))), "\n\n")
  
  cat(highlight_style("M√©triques de corr√©lation :\n"))
  cat(sprintf("Corr√©lation avec BTC : %.2f\n", correlation))
  cat(sprintf("Beta : %.2f\n", beta))
  
  interpretation <- if(abs(correlation) >= 0.7) {
    "Forte corr√©lation avec Bitcoin"
  } else if(abs(correlation) >= 0.3) {
    "Corr√©lation mod√©r√©e avec Bitcoin"
  } else {
    "Faible corr√©lation avec Bitcoin"
  }
  
  cat("\n", info_secondary_style("Interpr√©tation : "), interpretation, "\n")
}

######################################################################################
####   
#######
#################         CRYPTO FOCUS
#########
####
######################################################

#############################
# Fonctions utilitaires pour le formatage des donn√©es

format_number <- function(x) {
  if (is.na(x)) return("N/A")
  suffixes  <- c("", "k", "M", "B", "T")
  magnitude <- floor(log10(abs(x)) / 3)
  magnitude <- min(magnitude, length(suffixes) - 1)
  if (magnitude == 0) {
    return(format(round(x, 2), big.mark = " "))
  }
  scaled <- x / 10^(magnitude * 3)
  return(paste0(format(round(scaled, 2), big.mark = " "), suffixes[magnitude + 1]))
}

format_percent <- function(x) {
  if (is.na(x)) return("N/A")
  return(paste0(format(round(x, 2)), "%"))
}

#############################
# Fonction pour r√©cup√©rer les donn√©es CoinGecko
get_coingecko_data <- function(endpoint, params = list()) {
  base_url <- "https://api.coingecko.com/api/v3"
  url <- paste0(base_url, endpoint)
  
  response <- tryCatch({
    GET(url, query = params)
  }, error = function(e) {
    cat(error_style("\n[ERREUR] Connexion √† l'API CoinGecko √©chou√©e. V√©rifiez votre connexion internet.\n"))
    return(NULL)
  })
  
  if (is.null(response)) return(NULL)
  
  if (status_code(response) == 200) {
    return(fromJSON(rawToChar(response$content)))
  } else if (status_code(response) == 429) {
    cat(warning_style("\n[AVERTISSEMENT] Limite d'API atteinte. Pause de 60 secondes...\n"))
    Sys.sleep(61)
    return(get_coingecko_data(endpoint, params))
  } else {
    cat(error_style(paste("\n[ERREUR API]:", status_code(response), "\n")))
    return(NULL)
  }
}

#############################
# Fonction pour afficher la liste des cryptos disponibles
display_available_cryptos <- function() {
  cat(info_secondary_style("\n>> R√©cup√©ration de la liste des cryptomonnaies en cours...\n"))
  
  # Ici, on va chercher 250 cryptos au lieu de 100
  coins <- get_coingecko_data(
    "/coins/markets", 
    list(
      vs_currency = "usd",
      order       = "market_cap_desc",
      per_page    = 250,
      page        = 1
    )
  )
  
  if (is.null(coins)) {
    cat(error_style("\n[ERREUR] Impossible de r√©cup√©rer la liste. R√©essayez plus tard.\n"))
    return(NULL)
  }
  
  cat(cli::col_yellow(paste(
    sprintf("%-6s", "RANG"),
    sprintf("%-30s", "NOM"),
    sprintf("%-15s", "SYMBOLE"),
    sprintf("%-25s", "ID"),
    "\n"
  )))
  cat(paste(rep("-", 76), collapse = ""), "\n")
  
  for (i in seq_along(coins$id)) {
    cat(paste0(
      cli::col_white(sprintf("%-6s", i)),
      cli::col_cyan(sprintf("%-30s", substr(coins$name[i], 1, 29))),
      cli::col_green(sprintf("%-15s", toupper(coins$symbol[i]))),
      cli::col_blue(sprintf("%-25s", substr(coins$id[i], 1, 24))),
      "\n"
    ))
  }
  
  cat("\n", question_style("Tapez 'exit' pour revenir en arri√®re ou entrez l'ID de la crypto choisie : "))
  choice <- readline()
  if (tolower(choice) == "exit") return(NULL)
  return(choice)
}

#############################
# Fonction pour calculer les moyennes mobiles
calculate_moving_averages <- function(data, horizon_days) {
  # Si horizon = 1 jour, on n'affiche pas de moyennes mobiles
  if (as.numeric(horizon_days) == 1) return(list())
  
  ma_periods <- if (as.numeric(horizon_days) <= 7) {
    c(4, 6, 7)
  } else if (as.numeric(horizon_days) <= 30) {
    c(7, 14, 21)
  } else {
    c(20, 50, 200)
  }
  
  ma_list2 <- list()
  for (period in ma_periods) {
    if (period <= length(data)) {
      ma_list2[[paste0("MA", period)]] <- list(
        values      = SMA(data, n = period),
        period      = period,
        description = paste0("Moyenne mobile sur ", period, " jours")
      )
    }
  }
  return(ma_list2)
}

#############################
# Fonction pour cr√©er les graphiques (avec marquage min/max)
create_analysis_plot <- function(data, y_col, ma_cols, title, y_label, is_volume = FALSE) {
  suppressWarnings({
    # 1) Graphique de base
    p <- ggplot(data, aes(x = date, group = 1)) +
      geom_line(aes_string(y = y_col), color = "#2E86C1", size = 1)
    
    # 2) Ajout des moyennes mobiles si pr√©sentes
    if (length(ma_cols) > 0) {
      for (i in seq_along(ma_cols)) {
        p <- p + geom_line(aes_string(y = ma_cols[i]), 
                           color     = c("#E74C3C", "#F39C12", "#27AE60")[i],
                           size      = 0.8, 
                           linetype  = "dashed")
      }
    }
    
    # 3) Marquage du plus haut et plus bas
    #    (sauf si c'est du volume => pourquoi pas, on peut le faire aussi)
    max_idx <- which.max(data[[y_col]])
    min_idx <- which.min(data[[y_col]])
    if (length(max_idx) == 1 && length(min_idx) == 1) {
      # Point max
      p <- p + 
        geom_point(aes(x = data$date[max_idx], y = data[[y_col]][max_idx]), 
                   color = "red", size = 2) +
        geom_text(
          aes(
            x = data$date[max_idx],
            y = data[[y_col]][max_idx],
            label = "Max"
          ),
          vjust = -1, color = "red", size = 3
        )
      # Point min
      p <- p + 
        geom_point(aes(x = data$date[min_idx], y = data[[y_col]][min_idx]),
                   color = "green", size = 2) +
        geom_text(
          aes(
            x = data$date[min_idx],
            y = data[[y_col]][min_idx],
            label = "Min"
          ),
          vjust = 1.5, color = "green", size = 3
        )
    }
    
    # 4) Echelle de l'axe Y
    if (is_volume) {
      p <- p + scale_y_continuous(labels = function(x) paste0(format(x / 1e9, digits = 2), " Mds $"))
    } else {
      p <- p + scale_y_continuous(labels = scales::label_number(big.mark = " "))
    }
    
    # 5) Echelle de l'axe X : date en POSIXct
    p <- p + scale_x_datetime(
      date_breaks = "7 days", 
      date_labels = "%Y-%m-%d"
    )
    
    # 6) Labels et th√®me
    p + labs(
      title = title, 
      x     = "Date", 
      y     = y_label
    ) +
      theme_minimal() +
      theme(
        plot.title       = element_text(size = 14, face = "bold"),
        axis.title       = element_text(size = 12),
        axis.text        = element_text(size = 10),
        panel.grid.minor = element_blank()
      )
  })
}

#############################
# Fonction de s√©lection de l'horizon temporel
select_timeframe <- function() {
  cat(section_title_style("\n[CHOIX DE L'HORIZON] S√©lection de l'horizon temporel d'analyse :\n\n"))
  cat("1) 7 jours  - Analyse court terme\n")
  cat("2) 14 jours - Analyse swing trading\n")
  cat("3) 30 jours - Analyse mensuelle\n")
  cat("4) 90 jours - Analyse trimestrielle\n")
  cat("5) 180 jours - Analyse semestrielle\n")
  cat("6) 365 jours - Analyse annuelle\n")
  cat(question_style("0) Retour\n\n"))
  
  repeat {
    choix <- readline(question_style("Votre choix (0-6) : "))
    if (choix %in% c("0", "1", "2", "3", "4", "5", "6")) {
      break
    }
    cat(error_style("Option invalide. Veuillez choisir entre 0 et 6.\n"))
  }
  
  days <- switch(
    choix,
    "0" = NULL,
    "1" = "7",
    "2" = "14",
    "3" = "30",
    "4" = "90",
    "5" = "180",
    "6" = "365"
  )
  
  return(days)
}

#############################
# Fonction pour calculer les m√©triques
calculate_metrics <- function(data) {
  # On calcule la volatilit√© sur la base de diff(log()) (rendement log)
  price_diff <- diff(log(data$price))
  variance   <- var(price_diff, na.rm = TRUE)
  std_dev    <- sqrt(variance)
  volatility <- std_dev * 100
  
  list(
    volatility   = volatility,
    variance     = variance,
    std_dev      = std_dev * 100,
    expectation  = mean(data$price, na.rm = TRUE),
    current      = tail(data$price, 1),
    max          = max(data$price, na.rm = TRUE),
    min          = min(data$price, na.rm = TRUE),
    from_high    = ((tail(data$price, 1) - max(data$price)) / max(data$price)) * 100,
    from_low     = ((tail(data$price, 1) - min(data$price))  / min(data$price))  * 100,
    max_volume   = max(data$volume, na.rm = TRUE),
    min_volume   = min(data$volume, na.rm = TRUE)
  )
}

#############################
# Fonction d'analyse des tendances
analyze_trend <- function(price, ma_values) {
  if (length(ma_values) < 2) return(NULL)
  
  ma_short <- tail(ma_values[[1]]$values, 1)
  ma_long  <- tail(ma_values[[length(ma_values)]]$values, 1)
  trend_strength <- abs((price - ma_long) / ma_long) * 100
  
  if (price > ma_short && price > ma_long) {
    list(
      direction   = "HAUSSI√àRE",
      strength    = trend_strength,
      description = sprintf("Tendance haussi√®re confirm√©e (%.2f%% au-dessus de la MM longue)", trend_strength)
    )
  } else if (price < ma_short && price < ma_long) {
    list(
      direction   = "BAISSI√àRE",
      strength    = trend_strength,
      description = sprintf("Tendance baissi√®re confirm√©e (%.2f%% en-dessous de la MM longue)", trend_strength)
    )
  } else {
    list(
      direction   = "NEUTRE",
      strength    = trend_strength,
      description = "Phase de consolidation - pas de tendance claire"
    )
  }
}

#############################
calculate_correlation <- function(prices1, prices2) {
  # V√©rifier longueur
  if (length(prices1) != length(prices2)) {
    stop("Les s√©ries de prix doivent avoir la m√™me longueur pour calculer la corr√©lation.")
  }
  
  returns1 <- c(NA, diff(log(prices1)))
  returns2 <- c(NA, diff(log(prices2)))
  
  valid_indices <- !is.na(returns1) & !is.na(returns2)
  returns1 <- returns1[valid_indices]
  returns2 <- returns2[valid_indices]
  
  if (length(returns1) < 2 || length(returns2) < 2) {
    warning("Pas assez de donn√©es pour calculer la corr√©lation")
    return(NA)
  }
  
  cor(returns1, returns2)
}

#############################
# Analyse Comparative : crypto vs. un autre actif (Bitcoin ou autre)
display_comparative_analysis <- function(crypto_df, other_df, days, other_name = "Bitcoin") {
  
  cat(section_title_style("\n=== Analyse Comparative ===\n\n"))
  cat(info_style("Cette section compare la performance de votre crypto √† celle de "), highlight_style(other_name), info_style(".\n"))
  cat(info_style("Un graphique base 100 est trac√©, et nous calculons la corr√©lation\n"))
  cat(info_style("et le b√™ta pour √©valuer la sensibilit√© de la crypto par rapport √† "), highlight_style(other_name), info_style(".\n\n"))
  
  cat(highlight_style("D√©finitions :\n"))
  cat("- Corr√©lation : mesure la lin√©arit√© entre deux s√©ries de prix. Une corr√©lation √©lev√©e (proche de 1) signifie qu'elles\n")
  cat("  √©voluent souvent dans le m√™me sens. Une corr√©lation proche de 0 indique peu de lien, et n√©gative indique une opposition.\n\n")
  cat("- B√™ta : mesure la sensibilit√© de l'actif par rapport √† la r√©f√©rence. Un b√™ta > 1 indique que l'actif\n")
  cat("  amplifie les mouvements de la r√©f√©rence, tandis qu'un b√™ta < 1 indique qu'il r√©agit plus faiblement.\n")
  cat("  Par exemple, un b√™ta de 1.5 signifie que si la r√©f√©rence (ex: Bitcoin) monte de 1%, l'actif monte en moyenne de 1.5%.\n\n")
  
  if (nrow(crypto_df) < 2 || nrow(other_df) < 2) {
    cat(error_style("Donn√©es insuffisantes : moins de 2 points disponibles pour cette p√©riode.\n"))
    return()
  }
  
  # Variation sur la p√©riode
  crypto_change <- ((tail(crypto_df$price, 1) - head(crypto_df$price, 1)) / head(crypto_df$price, 1)) * 100
  other_change  <- ((tail(other_df$price,   1) - head(other_df$price,   1)) / head(other_df$price,   1)) * 100
  relative_perf <- crypto_change - other_change
  
  # Dates communes
  common_dates <- sort(intersect(crypto_df$date, other_df$date))
  if (length(common_dates) < 2) {
    cat(error_style("Pas assez de dates communes pour comparer la crypto et "), highlight_style(other_name), ".\n")
    return()
  }
  
  crypto_idx <- match(common_dates, crypto_df$date)
  other_idx  <- match(common_dates, other_df$date)
  
  prices_crypto <- crypto_df$price[crypto_idx]
  prices_other  <- other_df$price[other_idx]
  
  crypto_returns <- diff(log(prices_crypto))
  other_returns  <- diff(log(prices_other))
  
  if (length(crypto_returns) < 2 || length(other_returns) < 2) {
    cat(error_style("Pas assez de points (rendements) pour calculer la corr√©lation.\n"))
    return()
  }
  
  correlation <- cor(crypto_returns, other_returns, use = "complete.obs")
  sd_crypto   <- sd(crypto_returns, na.rm = TRUE)
  sd_other    <- sd(other_returns,  na.rm = TRUE)
  beta_calc   <- correlation * (sd_crypto / sd_other)
  
  cat(highlight_style("Performance sur la p√©riode :\n"))
  period_str <- if (days == "1") "24 heures" else paste(days, "jours")
  cat(sprintf("P√©riode d'analyse : %s\n\n", period_str))
  
  cat(sprintf("%-20s : ", "Votre crypto"), 
      ifelse(crypto_change >= 0,
             cli::col_green(paste0("+", format_percent(crypto_change))),
             cli::col_red(format_percent(crypto_change))),
      "\n")
  
  cat(sprintf("%-20s : ", other_name), 
      ifelse(other_change >= 0,
             cli::col_green(paste0("+", format_percent(other_change))),
             cli::col_red(format_percent(other_change))),
      "\n")
  
  cat(sprintf("%-20s : ", "Performance relative"),
      ifelse(relative_perf >= 0,
             cli::col_green(paste0("+", format_percent(relative_perf))),
             cli::col_red(format_percent(relative_perf))),
      " vs ", other_name, "\n\n", sep = "")
  
  cat(highlight_style("M√©triques de corr√©lation :\n"))
  cat(sprintf("Corr√©lation avec %s : %.2f\n", other_name, correlation))
  cat(sprintf("Beta : %.2f\n\n", beta_calc))
  
  correlation_text <- if (is.na(correlation) || is.nan(correlation)) {
    "Corr√©lation non calculable (donn√©es insuffisantes)"
  } else if (abs(correlation) >= 0.7) {
    "Forte corr√©lation"
  } else if (abs(correlation) >= 0.3) {
    "Corr√©lation mod√©r√©e"
  } else {
    "Faible corr√©lation"
  }
  
  cat(info_secondary_style("Interpr√©tation : "), correlation_text, " avec ", other_name, "\n")
  
  # Graphique base 100
  base_crypto <- prices_crypto[1]
  base_other  <- prices_other[1]
  
  if (is.na(base_crypto) || base_crypto == 0 ||
      is.na(base_other)  || base_other == 0) {
    cat(error_style("Impossible de tracer le graphique : prix de base invalide.\n"))
    return()
  }
  
  crypto_norm <- (prices_crypto / base_crypto) * 100
  other_norm  <- (prices_other  / base_other)  * 100
  
  df_plot <- data.frame(
    date         = common_dates,
    crypto_price = crypto_norm,
    other_price  = other_norm
  )
  
  # Conversion en POSIXct (millisecondes => / 1000) si besoin
  # Si ton "common_dates" est d√©j√† POSIXct, pas besoin de reconvertir.
  # Sinon :
  df_plot$date <- as.POSIXct(df_plot$date, origin = "1970-01-01")
  
  p <- ggplot(df_plot, aes(x = date)) +
    geom_line(aes(y = crypto_price), color = "#E74C3C", size = 1) +
    geom_line(aes(y = other_price),  color = "#F39C12", size = 1, linetype = "dashed") +
    theme_minimal() +
    labs(
      title = paste("Performance Relative (Base 100) - vs", other_name),
      x     = "Date",
      y     = "Performance (%)"
    ) +
    scale_y_continuous(labels = function(x) paste0(round(x, 1), "%")) +
    scale_x_datetime(date_breaks = "7 days", date_labels = "%Y-%m-%d") +
    theme(
      plot.title       = element_text(size = 14, face = "bold"),
      axis.title       = element_text(size = 12),
      axis.text        = element_text(size = 10),
      legend.position  = "bottom",
      panel.grid.major = element_line(color = "gray80"),
      panel.grid.minor = element_line(color = "gray90")
    )
  
  cat(info_style("\nNote : Les performances pass√©es ne pr√©sagent pas des performances futures.\n"))
  print(p)
}

#############################
# Fonction principale
crypto_focus <- function() {
  final_result <- NULL
  
  cat(success_style("--------------------------------------------------------------\n"))
  cat(success_style("    BIENVENUE DANS CRYPTO FOCUS : Votre Outil d'Analyse\n"))
  cat(success_style("--------------------------------------------------------------\n\n"))
  
  cat(info_style("Cet outil vous permet d'explorer une cryptomonnaie √† travers :\n"))
  cat(info_style("- Une analyse technique (prix, moyennes mobiles, volatilit√©, etc.)\n"))
  cat(info_style("- Une analyse comparative par rapport √† Bitcoin ou un autre actif\n"))
  cat(info_style("\nATTENTION : Les performances pass√©es ne pr√©sagent pas des performances futures.\n"))
  cat(info_style("Cet outil ne constitue pas un conseil financier. Utilisez-le √† vos propres risques.\n\n"))
  
  repeat {
    cat(section_title_style("\n=== CryptoFocus : Menu Principal ===\n\n"))
    cat(info_style("√Ä tout moment, vous pouvez taper 'exit' pour quitter l'application.\n\n"))
    
    # Demande √† l'utilisateur s'il conna√Æt l'ID de la crypto
    repeat {
      cat(question_style("Connaissez-vous l'ID (CoinGecko) de la crypto √† analyser ? (oui/non/exit) : "))
      connait_id <- tolower(readline())
      
      # Possibilit√© de quitter imm√©diatement
      if (connait_id == "exit") {
        cat(info_style("\nVous avez choisi de quitter l'application. √Ä bient√¥t!\n"))
        return(final_result)
      }
      
      if (connait_id %in% c("oui", "non")) {
        break
      }
      
      cat(error_style("\nVeuillez r√©pondre par 'oui', 'non' ou 'exit'.\n"))
    }
    
    ### Fonction pour s√©lectionner l'ID
    analyze_crypto <- function() {
      crypto_id <- NULL
      
      repeat {
        if (connait_id == "oui") {
          cat(question_style("\nEntrez l'ID de la crypto (ou 'exit' pour quitter) : "))
          crypto_id <- readline()
          if (tolower(crypto_id) == "exit") return(NULL)
        } else {
          # Si l'utilisateur ne conna√Æt pas l'ID, on affiche la liste
          crypto_id <- display_available_cryptos()
          if (is.null(crypto_id)) return(NULL)
        }
        
        # V√©rifier si l'ID existe via l'API
        coin_data <- get_coingecko_data(paste0("/coins/", crypto_id))
        if (!is.null(coin_data)) {
          return(list(id = crypto_id, data = coin_data))
        }
        
        cat(error_style("\nL'ID communiqu√© ne semble pas fonctionner.\n"))
        cat("1) Essayer un autre ID\n")
        cat("0) Retourner au menu principal\n")
        
        choix <- readline(question_style("Votre choix (0-1) : "))
        if (choix == "0") return(NULL)
      }
    }
    
    crypto_result <- analyze_crypto()
    if (is.null(crypto_result)) {
      cat(info_style("\nVous avez choisi de revenir au menu principal ou de quitter.\n"))
      next  # On revient au repeat principal
    }
    
    crypto_id  <- crypto_result$id
    coin_data  <- crypto_result$data
    coin_name  <- toupper(coin_data$name)
    
    cat(section_title_style(paste0("\n=== Analyse de ", coin_name, " ===\n\n")))
    cat(info_style("Vous pouvez maintenant choisir le type d'analyse. √Ä tout moment, tapez 'exit' pour quitter.\n\n"))
    
    ### Nouveau menu (analyse technique / analyse comparative / retour)
    repeat {
      cat(section_title_style("Choisissez le type d'analyse :\n"))
      cat("1) Analyse technique et graphique\n")
      cat("2) Analyse comparative\n")
      cat(question_style("0) Retour au menu principal (ou 'exit' pour quitter)\n\n"))
      
      choix_type <- tolower(readline(question_style("Votre choix (0-2) : ")))
      if (choix_type == "exit") {
        cat(info_style("\nFermeture de l'application. √Ä bient√¥t!\n"))
        return(final_result)
      }
      
      if (choix_type == "0") {
        cat(info_style("\nRetour au menu principal...\n"))
        break
      }
      else if (choix_type == "1") {
        ### Analyse technique
        cat(info_style("\nVous avez choisi l'analyse technique et graphique.\n"))
        cat(info_style("Nous allons maintenant d√©finir l'horizon d'analyse (en jours).\n\n"))
        
        repeat {
          days <- select_timeframe()
          if (is.null(days)) {
            cat(info_style("\nRetour au choix d'analyse pr√©c√©dent...\n"))
            break  # On revient au menu 1/2/0
          }
          
          cat(info_secondary_style("\n>> R√©cup√©ration des donn√©es historiques sur "), days, " jours...\n", sep = "")
          
          # R√©cup√©ration des donn√©es de march√© (crypto + BTC)
          hist_data <- get_coingecko_data(
            paste0("/coins/", crypto_id, "/market_chart"),
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          btc_data <- get_coingecko_data(
            "/coins/bitcoin/market_chart",
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          
          if (is.null(hist_data) || is.null(btc_data)) {
            cat(error_style("\nImpossible de r√©cup√©rer les donn√©es historiques. R√©essayez plus tard.\n"))
            break
          }
          
          # Pr√©paration du data.frame
          # CoinGecko renvoie le temps en millisecondes => division par 1000
          market_data <- data.frame(
            date   = as.POSIXct(hist_data$prices[, 1] / 1000, origin = "1970-01-01"),
            price  = hist_data$prices[, 2],
            volume = hist_data$total_volumes[, 2]
          ) %>% arrange(date)
          
          # Remplir d'√©ventuels NA par interpolation
          market_data$price  <- zoo::na.approx(market_data$price,  rule = 2)
          market_data$volume <- zoo::na.approx(market_data$volume, rule = 2)
          
          # Calcul des moyennes mobiles
          ma_price  <- calculate_moving_averages(market_data$price, days)
          ma_volume <- calculate_moving_averages(market_data$volume, days)
          
          # Ajouter les colonnes MA au data.frame
          for (ma_type in c("price", "volume")) {
            ma_list2 <- if (ma_type == "price") ma_price else ma_volume
            for (ma_name in names(ma_list2)) {
              market_data[[paste0(ma_type, "_", ma_name)]] <- ma_list2[[ma_name]]$values
            }
          }
          
          # Cr√©ation des graphiques
          price_plot <- create_analysis_plot(
            market_data,
            "price",
            paste0("price_MA", sapply(ma_price, function(x) x$period)),
            paste(coin_name, "- √âvolution du Prix sur", days, "jours"),
            "Prix (USD)"
          )
          volume_plot <- create_analysis_plot(
            market_data,
            "volume",
            paste0("volume_MA", sapply(ma_volume, function(x) x$period)),
            paste(coin_name, "- √âvolution du Volume sur", days, "jours"),
            "Volume (USD)",
            is_volume = TRUE
          )
          
          # Affichage
          print(price_plot)
          cat(warning_style("\nIMPORTANT : Les performances pass√©es ne pr√©sagent pas des performances futures.\n"))
          print(volume_plot)
          
          # Calcul et affichage des m√©triques
          metrics <- calculate_metrics(market_data)
          trend   <- analyze_trend(metrics$current, ma_price)
          
          cat(section_title_style("\n=== RAPPORT D'ANALYSE TECHNIQUE ===\n"))
          cat(highlight_style("M√âTRIQUES DE PRIX\n"))
          cat("------------------------------------\n")
          cat("Prix actuel    : ", cli::col_green(paste("$", format(metrics$current, big.mark = " "))), "\n")
          cat("Plus haut      : ", cli::col_yellow(paste("$", format(metrics$max,    big.mark = " "))), "\n")
          cat("Plus bas       : ", cli::col_yellow(paste("$", format(metrics$min,    big.mark = " "))), "\n")
          cat("√âcart du haut  : ", ifelse(
            metrics$from_high >= 0,
            cli::col_green(paste0("+", format(metrics$from_high, digits = 2), "%")),
            cli::col_red(paste0(format(metrics$from_high, digits = 2), "%"))
          ), "\n")
          cat("√âcart du bas   : ", ifelse(
            metrics$from_low >= 0,
            cli::col_green(paste0("+", format(metrics$from_low, digits = 2), "%")),
            cli::col_red(paste0(format(metrics$from_low, digits = 2), "%"))
          ), "\n")
          
          cat("\n", highlight_style("M√âTRIQUES DE VOLUME\n"))
          cat("------------------------------------\n")
          cat("Volume 24h     : ", cli::col_blue(paste(format(tail(market_data$volume, 1) / 1e9, digits = 2), "Mds $")), "\n")
          cat("Volume moyen   : ", cli::col_blue(paste(format(mean(market_data$volume) / 1e9, digits = 2), "Mds $")), "\n")
          cat("Volume max     : ", cli::col_green(paste(format(metrics$max_volume / 1e9, digits = 2), "Mds $")), "\n")
          cat("Volume min     : ", cli::col_red(paste(format(metrics$min_volume / 1e9, digits = 2), "Mds $")), "\n")
          
          cat("\n", highlight_style("ANALYSE TECHNIQUE\n"))
          cat("------------------------------------\n")
          cat("Volatilit√© (√©cart-type): ", cli::col_blue(paste0(format(metrics$volatility, digits = 2), "%")), "\n")
          cat("Esp√©rance (moyenne)    : ", cli::col_blue(paste("$", format(metrics$expectation, big.mark = " "))), "\n")
          
          if (!is.null(trend)) {
            trend_color <- switch(trend$direction,
                                  "HAUSSI√àRE" = cli::col_green,
                                  "BAISSI√àRE" = cli::col_red,
                                  cli::col_white)
            cat("Tendance               : ", trend_color(trend$description), "\n")
          } else {
            cat("Tendance               : Indisponible / Neutre\n")
          }
          
          cat("\n", highlight_style("MOYENNES MOBILES\n"))
          cat("------------------------------------\n")
          for (ma in ma_price) {
            current_price <- tail(market_data$price, 1)
            ma_value      <- tail(ma$values, 1)
            if (is.na(ma_value)) next
            position <- if (current_price > ma_value) {
              cli::col_green(" (Prix au-dessus)")
            } else {
              cli::col_red(" (Prix en-dessous)")
            }
            cat(sprintf("‚Ä¢ MM%d : $%s%s\n", ma$period, format(ma_value, big.mark = " "), position))
          }
          
          cat(info_style("\nAnalyse technique termin√©e. Les donn√©es ci-dessus sont purement indicatives.\n"))
          cat(info_style("N'oubliez pas que ce n'est pas un conseil financier.\n"))
          
          final_result <<- list(
            raw_crypto_data    = hist_data,
            raw_btc_data       = btc_data,
            prepared_crypto_df = market_data,
            coin_id            = crypto_id
          )
        }
        
      }
      else if (choix_type == "2") {
        ### Analyse comparative
        cat(info_style("\nVous avez choisi l'analyse comparative.\n"))
        cat(info_style("1) Comparer √† Bitcoin\n"))
        cat(info_style("2) Comparer √† une autre crypto (ou actif) via un ID CoinGecko\n"))
        cat(info_style("0) Retour\n\n"))
        
        choix_comp <- tolower(readline(question_style("Votre choix (0-2) : ")))
        if (choix_comp == "0") {
          cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
          next
        } else if (choix_comp == "1") {
          # Comparaison avec Bitcoin
          days <- select_timeframe()
          if (is.null(days)) {
            cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
            next
          }
          
          cat(info_secondary_style("\n>> R√©cup√©ration des donn√©es historiques...\n"))
          hist_data <- get_coingecko_data(
            paste0("/coins/", crypto_id, "/market_chart"),
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          btc_data <- get_coingecko_data(
            "/coins/bitcoin/market_chart",
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          
          if (is.null(hist_data) || is.null(btc_data)) {
            cat(error_style("\nImpossible de r√©cup√©rer les donn√©es historiques.\n"))
            next
          }
          
          # Pr√©paration
          market_data <- data.frame(
            date   = as.POSIXct(hist_data$prices[, 1] / 1000, origin = "1970-01-01"),
            price  = hist_data$prices[, 2],
            volume = hist_data$total_volumes[, 2]
          ) %>% arrange(date)
          
          market_data$price  <- zoo::na.approx(market_data$price,  rule = 2)
          market_data$volume <- zoo::na.approx(market_data$volume, rule = 2)
          
          btc_market_data <- data.frame(
            date  = as.POSIXct(btc_data$prices[, 1] / 1000, origin = "1970-01-01"),
            price = btc_data$prices[, 2]
          ) %>% arrange(date)
          
          # Alignement
          common_dates   <- intersect(market_data$date, btc_market_data$date)
          crypto_aligned <- market_data[market_data$date %in% common_dates, ]
          btc_aligned    <- btc_market_data[btc_market_data$date %in% common_dates, ]
          
          crypto_aligned <- crypto_aligned[order(crypto_aligned$date), ]
          btc_aligned    <- btc_aligned[order(btc_aligned$date), ]
          
          # Appel de la fonction d'analyse comparative
          display_comparative_analysis(crypto_aligned, btc_aligned, days, other_name = "Bitcoin")
          readline(info_secondary_style("\nAppuyez sur Entr√©e pour continuer..."))
          
        } else if (choix_comp == "2") {
          # Comparaison avec un autre ID
          cat(question_style("\nEntrez l'ID de la crypto (ou actif) √† comparer (ex: ethereum, dogecoin...) : "))
          other_id <- readline()
          if (tolower(other_id) == "exit") {
            cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
            next
          }
          
          days <- select_timeframe()
          if (is.null(days)) {
            cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
            next
          }
          
          cat(info_secondary_style("\n>> R√©cup√©ration des donn√©es historiques...\n"))
          hist_data <- get_coingecko_data(
            paste0("/coins/", crypto_id, "/market_chart"),
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          other_data <- get_coingecko_data(
            paste0("/coins/", other_id, "/market_chart"),
            list(vs_currency = "usd", days = days, interval = if (days == "1") "minute" else "daily")
          )
          
          if (is.null(hist_data) || is.null(other_data)) {
            cat(error_style("\nImpossible de r√©cup√©rer les donn√©es historiques pour l'un des actifs.\n"))
            next
          }
          
          market_data <- data.frame(
            date   = as.POSIXct(hist_data$prices[, 1] / 1000, origin = "1970-01-01"),
            price  = hist_data$prices[, 2],
            volume = hist_data$total_volumes[, 2]
          ) %>% arrange(date)
          
          market_data$price  <- zoo::na.approx(market_data$price,  rule = 2)
          market_data$volume <- zoo::na.approx(market_data$volume, rule = 2)
          
          other_market_data <- data.frame(
            date  = as.POSIXct(other_data$prices[, 1] / 1000, origin = "1970-01-01"),
            price = other_data$prices[, 2]
          ) %>% arrange(date)
          
          common_dates   <- intersect(market_data$date, other_market_data$date)
          crypto_aligned <- market_data[market_data$date %in% common_dates, ]
          other_aligned  <- other_market_data[other_market_data$date %in% common_dates, ]
          
          crypto_aligned <- crypto_aligned[order(crypto_aligned$date), ]
          other_aligned  <- other_aligned[order(other_aligned$date), ]
          
          display_comparative_analysis(
            crypto_aligned, 
            other_aligned, 
            days, 
            other_name = paste0(other_id)
          )
          readline(info_secondary_style("\nAppuyez sur Entr√©e pour continuer..."))
          
        } else {
          cat(error_style("\nOption invalide. Veuillez choisir entre 0, 1 ou 2.\n"))
        }
      } else {
        cat(error_style("\nOption invalide. Veuillez choisir entre 0, 1 ou 2.\n"))
      }
    } # Fin du repeat (choix de type d'analyse)
    
  }  # Fin du repeat principal
  
  cat(info_style("\nFin de CryptoFocus. Merci de votre visite !\n"))
  return(final_result)
}


########################################
market_view <- function() {
  tryCatch({
    cat(section_title_style("\n=== Market View : Vue Globale du March√© ===\n\n"))
    
    cat(info_style("Market View vous offre une vue d'ensemble du march√© des cryptomonnaies,\n"))
    cat(info_style("en pr√©sentant les 100 cryptos les plus capitalis√©es.\n\n"))
    
    # Introduction p√©dagogique
    cat(highlight_style("Comprendre les m√©triques affich√©es :\n"))
    cat("‚Ä¢ Market Cap : Valeur totale = Prix √ó Nombre de tokens en circulation\n")
    cat("‚Ä¢ Variation 24h : Changement de prix sur les derni√®res 24 heures\n")
    cat("‚Ä¢ Volume 24h : Valeur totale des √©changes sur 24 heures\n")
    cat("‚Ä¢ Ratio Vol/Cap : Volume 24h / Market Cap (indicateur de liquidit√©)\n")
    cat("‚Ä¢ Circulation : Quantit√© de tokens actuellement en circulation\n")
    cat("‚Ä¢ Max Limit : Plafond maximum de tokens √©mis (si d√©fini)\n")
    cat("‚Ä¢ Saturation : (Circulation / Max Limit) √ó 100 : Indique √† quel point la cr√©ation de tokens\n")
    cat("               est proche du maximum autoris√©.\n\n")
    
    cat(info_secondary_style("R√©cup√©ration des donn√©es de march√©...\n"))
    
    # R√©cup√©rer les donn√©es
    market_data <- get_coingecko_data(
      "/coins/markets",
      list(
        vs_currency = "usd",
        order       = "market_cap_desc",
        per_page    = 100,  # On r√©cup√®re 100 cryptos
        sparkline   = FALSE
      )
    )
    
    if (is.null(market_data)) {
      cat(error_style("\nImpossible de r√©cup√©rer les donn√©es. Veuillez r√©essayer plus tard.\n"))
      return()
    }
    
    # √âviter les doublons √©ventuels (par l'ID coingecko)
    market_data <- market_data %>%
      distinct(id, .keep_all = TRUE)
    
    # Calculer les statistiques globales
    total_market_cap <- sum(market_data$market_cap, na.rm = TRUE)
    total_volume     <- sum(market_data$total_volume, na.rm = TRUE)
    avg_change       <- mean(market_data$price_change_percentage_24h, na.rm = TRUE)
    
    # Afficher les statistiques globales
    cat(section_title_style("\nStatistiques Globales du March√© :\n"))
    cat("Market Cap Total    : ", cli::col_green(safe_format_number(total_market_cap)), " $\n")
    cat("Volume Total 24h    : ", cli::col_blue(safe_format_number(total_volume)), " $\n")
    cat("Variation Moyenne   : ", 
        ifelse(avg_change >= 0,
               cli::col_green(paste0("+", safe_format_percent(avg_change))),
               cli::col_red(safe_format_percent(avg_change))), "\n\n")
    
    # Construire l'ent√™te du tableau
    cat(cli::col_yellow(
      paste(
        sprintf("%-4s",  "RANG"),
        sprintf("%-20s","NOM"),
        sprintf("%-8s", "SYMBOLE"),
        sprintf("%-15s","PRIX"),
        sprintf("%-15s","VAR 24H"),
        sprintf("%-15s","VOLUME 24H"),
        sprintf("%-15s","MARKET CAP"),
        sprintf("%-12s","CIRC"),
        sprintf("%-12s","MAX LIMIT"),
        sprintf("%-10s","SAT (%)"),
        "\n"
      )
    ))
    
    cat(paste(rep("-", 130), collapse = ""), "\n")
    
    # Boucle pour afficher chaque crypto
    for(i in 1:nrow(market_data)) {
      
      # Extraire les champs
      price     <- safe_format_number(market_data$current_price[i])
      change    <- market_data$price_change_percentage_24h[i]
      volume    <- safe_format_number(market_data$total_volume[i])
      mcap      <- safe_format_number(market_data$market_cap[i])
      circ_val  <- market_data$circulating_supply[i]
      max_val   <- market_data$max_supply[i]
      
      # Format circulation & max limit en abr√©g√© (k, M, B)
      circ_str  <- safe_format_number(circ_val)
      max_str   <- if (!is.na(max_val)) safe_format_number(max_val) else "N/A"
      
      # Calculer la saturation
      # => si max_val est NA ou 0, on ne calcule pas
      if (!is.na(max_val) && max_val > 0) {
        sat_percent <- (circ_val / max_val) * 100
      } else {
        sat_percent <- NA
      }
      
      sat_str <- if (!is.na(sat_percent)) {
        paste0(round(sat_percent, 2), "%")
      } else {
        "N/A"
      }
      
      # D√©terminer la couleur pour la variation
      change_color <- if (is.na(change)) {
        cli::col_white
      } else if (change >= 0) {
        cli::col_green
      } else {
        cli::col_red
      }
      
      # Affichage de la ligne
      cat(paste0(
        cli::col_white(sprintf("%-4d", i)),                               # RANG
        cli::col_cyan(sprintf("%-20s", substr(market_data$name[i], 1, 19))), # NOM
        cli::col_yellow(sprintf("%-8s", toupper(substr(market_data$symbol[i], 1, 7)))),  # SYMBOLE
        cli::col_white(sprintf("%-15s", price)),                          # PRIX
        change_color(sprintf("%-15s", ifelse(is.na(change),
                                             "N/A",
                                             paste0(round(change, 2), "%")))),
        cli::col_blue(sprintf("%-15s", volume)),                         # VOLUME 24H
        cli::col_green(sprintf("%-15s", mcap)),                          # MARKET CAP
        cli::col_white(sprintf("%-12s", circ_str)),                      # CIRC
        cli::col_white(sprintf("%-12s", max_str)),                       # MAX LIMIT
        cli::col_white(sprintf("%-10s", sat_str))                        # SAT (%)
      ))
      
      cat("\n")
      
      # Ligne de s√©paration tous les 10 rangs
      if(i %% 10 == 0) {
        cat(cli::col_white(paste(rep("-", 130), collapse = "")), "\n")
      }
    }
    
    cat("\n", highlight_style("NOTE : "), info_style("Les donn√©es sont actualis√©es en temps r√©el depuis CoinGecko.\n"))
    cat("\n", info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
    readline()
    
  }, error = function(e) {
    cat(error_style("\nUne erreur est survenue lors de l'analyse. Veuillez r√©essayer plus tard.\n"))
    cat(error_style("D√©tails de l'erreur : ", conditionMessage(e), "\n"))
    cat("\n", info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
    readline()
  })
}


##############
################## Fear 
##########
#########
# ---------------------------------------------------------------------------
# 1) Fonction pour r√©cup√©rer l'index Fear & Greed "actuel" (dernier point)
# ---------------------------------------------------------------------------
get_fear_greed_data <- function() {
  url <- "https://api.alternative.me/fng/"
  response <- GET(url)
  
  if (status_code(response) != 200) {
    cat(red("Erreur : Impossible de r√©cup√©rer les donn√©es (statut != 200).\n"))
    return(NULL)
  }
  
  raw_text <- rawToChar(response$content)
  raw <- fromJSON(raw_text, simplifyVector = FALSE)
  
  if (!is.null(raw$data) && length(raw$data) > 0) {
    first_entry <- raw$data[[1]]
    if (is.list(first_entry) && "value" %in% names(first_entry)) {
      return(first_entry)
    } else {
      cat(red("Format inattendu des donn√©es re√ßues.\n"))
      return(NULL)
    }
  } else {
    cat(red("Les donn√©es re√ßues sont vides ou mal format√©es.\n"))
    return(NULL)
  }
}

# ---------------------------------------------------------------------------
# 2) Fonction pour r√©cup√©rer l'historique Fear & Greed (par d√©faut 30 jours)
# ---------------------------------------------------------------------------
get_fear_greed_history <- function(limit = 30) {
  url <- paste0("https://api.alternative.me/fng/?limit=", limit)
  response <- GET(url)
  
  if (status_code(response) != 200) {
    cat(red("Erreur : Impossible de r√©cup√©rer l'historique (statut != 200).\n"))
    return(NULL)
  }
  
  raw_text <- rawToChar(response$content)
  raw <- fromJSON(raw_text, simplifyVector = FALSE)
  
  if (!is.null(raw$data) && length(raw$data) > 0) {
    df <- do.call(rbind, lapply(raw$data, function(entry) {
      data.frame(
        value = as.numeric(entry$value),
        value_classification = entry$value_classification,
        timestamp = as.POSIXct(as.numeric(entry$timestamp), origin = "1970-01-01"),
        stringsAsFactors = FALSE
      )
    }))
    return(df)
  } else {
    cat(red("Les donn√©es historiques sont vides ou mal format√©es.\n"))
    return(NULL)
  }
}

# ---------------------------------------------------------------------------
# 3) Fonction principale d'affichage du Fear & Greed Index
# ---------------------------------------------------------------------------
display_fear_greed_index <- function() {
  cat("\n", bgBlue$white("=== Fear & Greed Index : Sentiment du March√© ==="), "\n\n")
  
  cat(white$italic("L'indice Fear & Greed refl√®te le sentiment g√©n√©ral du march√© crypto\n"))
  cat(white$italic("en combinant plusieurs m√©triques : volatilit√©, volume, dominance Bitcoin,\n"))
  cat(white$italic("tendances sociales et enqu√™tes de march√©.\n\n"))
  
  cat(yellow$bold("√âchelle d'interpr√©tation :\n"))
  cat("0-24    : ", red("Peur Extr√™me"), " (Possible opportunit√© d'achat)\n")
  cat("25-44   : ", yellow("Peur"), "\n")
  cat("45-55   : ", white("Neutre"), "\n")
  cat("56-75   : ", green("Avidit√©"), "\n")
  cat("76-100  : ", green("Avidit√© Extr√™me"), " (Possible zone de vente)\n\n")
  
  # 1) R√©cup√©ration de la donn√©e actuelle
  fng_data <- get_fear_greed_data()
  if (is.null(fng_data)) {
    cat(red("Erreur : Impossible de r√©cup√©rer les donn√©es actuelles.\n"))
    return()
  }
  
  current_value <- as.numeric(fng_data$value)
  current_classification <- fng_data$value_classification
  current_timestamp <- as.POSIXct(as.numeric(fng_data$timestamp), origin = "1970-01-01")
  
  cat(yellow$bold("\nIndice Fear & Greed Actuel :\n"))
  
  # D√©terminer la couleur
  if (current_value <= 24) {
    color_func <- red
  } else if (current_value <= 44) {
    color_func <- yellow
  } else if (current_value <= 55) {
    color_func <- white
  } else if (current_value <= 75) {
    color_func <- green
  } else {
    color_func <- green
  }
  
  cat("Valeur         : ", color_func(paste0(current_value, " /100")), "\n")
  cat("Classification : ", color_func(toupper(current_classification)), "\n")
  cat("Mise √† jour    : ", cyan$italic(format(current_timestamp, "%Y-%m-%d %H:%M:%S")), "\n\n")
  
  # 2) Historique
  hist_data <- get_fear_greed_history(limit = 30)
  if (!is.null(hist_data)) {
    avg_7d <- mean(head(hist_data$value, 7), na.rm = TRUE)
    avg_30d <- mean(hist_data$value, na.rm = TRUE)
    
    cat(yellow$bold("Moyennes historiques :\n"))
    cat("7 derniers jours  : ", round(avg_7d, 1), "\n")
    cat("30 derniers jours : ", round(avg_30d, 1), "\n\n")
    
    cat(yellow$bold("√âvolution du sentiment :\n"))
    if (current_value > avg_7d && avg_7d > avg_30d) {
      cat("Tendance : ", green("AM√âLIORATION"), "\n\n")
    } else if (current_value < avg_7d && avg_7d < avg_30d) {
      cat("Tendance : ", red("D√âT√âRIORATION"), "\n\n")
    } else {
      cat("Tendance : ", yellow("STABLE"), "\n\n")
    }
  } else {
    cat(red("Erreur : Impossible de r√©cup√©rer les donn√©es historiques.\n"))
  }
  
  # Recommandations
  cat(yellow$bold("Recommandations :\n"))
  if (current_value <= 24) {
    cat("‚Ä¢ ", green("Peur extr√™me : zone d'accumulation possible.\n"))
  } else if (current_value <= 44) {
    cat("‚Ä¢ ", yellow("Peur : surveillez les supports.\n"))
  } else if (current_value <= 55) {
    cat("‚Ä¢ ", white("Neutre : appliquez votre strat√©gie habituelle.\n"))
  } else if (current_value <= 75) {
    cat("‚Ä¢ ", green("Avidit√© : envisagez des b√©n√©fices partiels.\n"))
  } else {
    cat("‚Ä¢ ", red("Avidit√© extr√™me : soyez prudent, prenez des b√©n√©fices.\n"))
  }
  
  # Attente pour revenir au menu
  cat("\n", cyan$italic("Appuyez sur Entr√©e pour revenir au menu...\n"))
  readline()
}

###############################################################################
#  
#
#.     TREND
#
###############################################################################

# Calcul du Z-score
calculate_zscore <- function(x) {
  (x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}

# Format d'affichage tendance (vert pour positif, rouge pour n√©gatif)
format_trend <- function(value, format = "%s") {
  if (is.na(value)) {
    return(sprintf(format, "N/A"))
  }
  formatted <- sprintf("%.1f%%", value)
  if (value > 0) {
    cli::col_green(sprintf(format, paste0("+", formatted)))
  } else {
    cli::col_red(sprintf(format, formatted))
  }
}

# Format de nombre abr√©g√© (k, M, B, etc.)
format_number <- function(x) {
  if (is.na(x)) return("N/A")
  suffixes <- c("", "k", "M", "B", "T")
  ix <- 0
  val <- x
  while (abs(val) >= 1000 && ix < length(suffixes) - 1) {
    val <- val / 1000
    ix <- ix + 1
  }
  sprintf("%.2f%s", val, suffixes[ix + 1])
}

#
# 1) Fonction : Trend Scanner
################################
trend_scanner <- function() {
  cat(section_title_style("\n=== Trend Scanner : D√©tection des Tendances √âmergentes ===\n\n"))
  
  # Texte introductif et p√©dagogique
  cat(info_style("Cet outil scanne le march√© des cryptomonnaies afin de rep√©rer\n"))
  cat(info_style("les actifs pr√©sentant un √©lan de prix et/ou un volume significatif,\n"))
  cat(info_style("indicateur d'une potentielle tendance √©mergente.\n\n"))
  
  cat(highlight_style("Principes :\n"))
  cat("‚Ä¢ Observation des variations de prix sur 1h, 24h et 7 jours.\n")
  cat("‚Ä¢ Comparaison des volumes par rapport √† la capitalisation.\n")
  cat("‚Ä¢ Attribution d'un score de tendance combin√© (court / moyen / long terme).\n\n")
  
  cat(info_secondary_style("R√©cup√©ration des donn√©es de march√© (top 250 cryptos)...\n"))
  
  market_data <- get_coingecko_data(
    "/coins/markets",
    list(
      vs_currency = "usd",
      order = "market_cap_desc",
      per_page = 250,
      sparkline = TRUE,
      price_change_percentage = "1h,24h,7d"
    )
  )
  
  if (is.null(market_data)) {
    cat(error_style("\nImpossible de r√©cup√©rer les donn√©es. Veuillez r√©essayer plus tard.\n"))
    cat(info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
    readline()
    return()
  }
  
  # Pr√©paration d'un data.frame des tendances
  trends <- data.frame(
    name  = market_data$name,
    symbol = toupper(market_data$symbol),
    price_change_1h  = market_data$price_change_percentage_1h_in_currency,
    price_change_24h = market_data$price_change_percentage_24h,
    price_change_7d  = market_data$price_change_percentage_7d_in_currency,
    volume_market_cap_ratio = market_data$total_volume / market_data$market_cap,
    market_cap = market_data$market_cap
  )
  
  # Calcul des Z-scores pour chaque p√©riode
  trends$z_score_1h    = calculate_zscore(trends$price_change_1h)
  trends$z_score_24h   = calculate_zscore(trends$price_change_24h)
  trends$z_score_7d    = calculate_zscore(trends$price_change_7d)
  trends$z_score_volume= calculate_zscore(trends$volume_market_cap_ratio)
  
  # Score combin√© de tendance
  trends$trend_score <- with(trends, {
    # Pond√©ration : 1h (0.3), 24h (0.4), 7d (0.3)
    0.3 * z_score_1h + 0.4 * z_score_24h + 0.3 * z_score_7d
  })
  
  # Trier par score d√©croissant
  trends <- trends[order(-trends$trend_score), ]
  
  cat(section_title_style("\nTendances √âmergentes D√©tect√©es :\n\n"))
  
  # En-t√™te du tableau : CRYPTO, SYMBOLE, 1H, 24H, 7D, TENDANCE
  cat(cli::col_yellow(sprintf("%-18s %-8s %-10s %-10s %-10s %-15s\n",
                              "CRYPTO", "SYMBOLE", "1H", "24H", "7D", "TENDANCE")))
  cat(paste(rep("-", 68), collapse = ""), "\n")
  
  # Afficher les 20 premi√®res cryptos
  top_n <- min(20, nrow(trends))
  for (i in seq_len(top_n)) {
    # √âvaluer la force de la tendance
    trend_strength <- trends$trend_score[i]
    label_strength <- if (trend_strength > 2) {
      cli::col_green("TR√àS FORTE")
    } else if (trend_strength > 1) {
      cli::col_green("FORTE")
    } else if (trend_strength > 0) {
      cli::col_yellow("MOD√âR√âE")
    } else {
      cli::col_red("FAIBLE")
    }
    
    cat(
      cli::col_cyan(sprintf("%-18s", substr(trends$name[i], 1, 17))),
      cli::col_yellow(sprintf("%-8s", trends$symbol[i])),
      format_trend(trends$price_change_1h[i],  "%-10s"),
      format_trend(trends$price_change_24h[i], "%-10s"),
      format_trend(trends$price_change_7d[i],  "%-10s"),
      sprintf("%-15s", label_strength),
      "\n"
    )
  }
  
  cat(highlight_style("\nCrit√®res de d√©tection :\n"))
  cat("‚Ä¢ √âvolution des prix 1h / 24h / 7j (pond√©ration 0.3 / 0.4 / 0.3)\n")
  cat("‚Ä¢ Volume relatif √† la capitalisation (indicateur d'int√©r√™t du march√©)\n")
  cat("‚Ä¢ Score global = combinaison pond√©r√©e des Z-scores\n\n")
  
  cat(info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
  readline()
}

###############################################################################
#
# 2) Fonction : Volume Anomaly
#
###############################################################################

volume_anomaly <- function() {
  cat(section_title_style("\n=== Volume Anomaly : D√©tection des Anomalies de Volume ===\n\n"))
  
  cat(info_style("Cet outil inspecte les volumes d'√©change afin de rep√©rer\n"))
  cat(info_style("des pics ou chutes soudaines (anomalies) susceptibles d'indiquer\n"))
  cat(info_style("un √©v√©nement majeur ou un changement de comportement du march√©.\n\n"))
  
  cat(info_secondary_style("R√©cup√©ration des donn√©es de march√© (top 250 cryptos)...\n"))
  
  market_data <- get_coingecko_data(
    "/coins/markets",
    list(
      vs_currency = "usd",
      order = "market_cap_desc",
      per_page = 250,
      sparkline = TRUE
    )
  )
  
  if (is.null(market_data)) {
    cat(error_style("\nImpossible de r√©cup√©rer les donn√©es. Veuillez r√©essayer plus tard.\n"))
    cat(info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
    readline()
    return()
  }
  
  # Pr√©paration data.frame
  volumes <- data.frame(
    name            = market_data$name,
    symbol          = toupper(market_data$symbol),
    current_volume  = market_data$total_volume,
    market_cap      = market_data$market_cap,
    price_change_24h= market_data$price_change_percentage_24h
  )
  
  # Ratio volume / market cap
  volumes$volume_mcap_ratio <- volumes$current_volume / volumes$market_cap
  
  # Z-score du ratio
  volumes$z_score_volume <- calculate_zscore(volumes$volume_mcap_ratio)
  
  # S√©lection des anomalies (Z-score absolu > 2)
  anomalies <- volumes[abs(volumes$z_score_volume) > 2, ]
  anomalies <- anomalies[order(-abs(anomalies$z_score_volume)), ]
  
  cat(section_title_style("\nAnomalies de Volume D√©tect√©es :\n\n"))
  
  cat(cli::col_yellow(sprintf("%-18s %-8s %-15s %-15s %-10s %-15s\n",
                              "CRYPTO", "SYMBOLE", "VOLUME 24H", "VOL/MCAP", "PRIX 24H", "ANOMALIE")))
  cat(paste(rep("-", 85), collapse = ""), "\n")
  
  if (nrow(anomalies) == 0) {
    cat(cli::col_cyan("Aucune anomalie de volume d√©tect√©e (Z-score ‚â§ 2).\n"))
  } else {
    top_n <- min(20, nrow(anomalies))
    for (i in seq_len(top_n)) {
      rowi <- anomalies[i,]
      anomaly_type <- if (rowi$z_score_volume > 0) {
        cli::col_green("VOLUME √âLEV√â")
      } else {
        cli::col_red("VOLUME FAIBLE")
      }
      cat(
        cli::col_cyan(sprintf("%-18s", substr(rowi$name, 1, 17))),
        cli::col_yellow(sprintf("%-8s", rowi$symbol)),
        cli::col_white(sprintf("%-15s", format_number(rowi$current_volume))),
        cli::col_white(sprintf("%-15s", sprintf("%.2fx", rowi$volume_mcap_ratio))),
        format_trend(rowi$price_change_24h, "%-10s"),
        sprintf("%-15s", anomaly_type),
        "\n"
      )
    }
  }
  
  cat(highlight_style("\nCrit√®res de d√©tection :\n"))
  cat("‚Ä¢ Z-score du ratio Volume/Market Cap sup√©rieur √† ¬±2\n")
  cat("‚Ä¢ Variation soudaine de la participation du march√©\n\n")
  
  cat(info_style("Une anomalie de volume peut r√©v√©ler :\n"))
  cat("- L'arriv√©e de nouveaux acteurs (accumulation / distribution)\n")
  cat("- Un √©v√®nement fondamental (annonce, partenariat, listing)\n")
  cat("- Des mouvements sp√©culatifs ou manipulations ponctuelles\n\n")
  
  cat(info_secondary_style("Appuyez sur Entr√©e pour retourner au menu..."))
  readline()
}


##############################
####################
# Fonction principale MarketScope avec menu complet
market_scope <- function() {
  repeat {
    # Nettoyer l'√©cran pour une meilleure lisibilit√©
    cat("\014")
    
    cat(section_title_style("\n====== MarketScope : Analyse Approfondie du March√© Crypto ======\n\n"))
    
    # Introduction p√©dagogique
    cat(highlight_style("Bienvenue dans MarketScope !\n\n"))
    cat(info_style("MarketScope est votre outil d'analyse approfondie du march√© des cryptomonnaies.\n"))
    cat(info_style("Il vous permet de suivre les tendances, d'analyser les performances et\n"))
    cat(info_style("d'identifier les opportunit√©s potentielles sur le march√©.\n\n"))
    
    cat(info_secondary_style("Fonctionnalit√©s disponibles :\n"))
    cat("‚Ä¢ Analyse technique et indicateurs avanc√©s\n")
    cat("‚Ä¢ Suivi des tendances et de la dominance\n")
    cat("‚Ä¢ D√©tection des anomalies et opportunit√©s\n")
    cat("‚Ä¢ Donn√©es en temps r√©el depuis CoinGecko\n\n")
    
    # Menu principal
    cat(section_title_style("Options disponibles :\n\n"))
    
    cat("1) ", highlight_style("BitcoinPulse"), " - Analyse sant√© du Bitcoin\n")
    cat("   ‚Üí Moyennes mobiles, tendances et autres indicateurs techniques\n\n")
    
    cat("2) ", highlight_style("AltcoinTracker"), " - Suivi des altcoins\n")
    cat("   ‚Üí Dominance du march√©\n\n")
    
    cat("3) ", highlight_style("CryptoFocus"), " - Analyse d'une crypto sp√©cifique\n")
    cat("   ‚Üí Performance d√©taill√©e, comparaisons et graphiques\n\n")
    
    cat("4) ", highlight_style("Market View"), " - Vue d'ensemble du march√©\n")
    cat("   ‚Üí Top 100 des cryptos par capitalisation\n\n")
    
    cat("5) ", highlight_style("Fear & Greed Index"), " - Sentiment du march√©\n")
    cat("   ‚Üí Indicateur de peur et d'avidit√©\n\n")
    
    cat("6) ", highlight_style("Trend Scanner"), " - D√©tection des tendances\n")
    cat("   ‚Üí Identification des mouvements √©mergents\n\n")
    
    cat("7) ", highlight_style("Volume Anomaly"), " - Anomalies de volume\n")
    cat("   ‚Üí D√©tection des volumes inhabituels\n\n")
    
    cat(question_style("0) Retour au menu principal\n\n"))
    
    # S√©lection de l'option
    choix <- readline(question_style("Votre choix (0-7) : "))
    
    if (!choix %in% c("0", "1", "2", "3", "4", "5", "6", "7")) {
      cat(error_style("\nOption invalide. Veuillez choisir une option entre 0 et 7.\n"))
      Sys.sleep(2)
      next
    }
    
    # Traitement du choix
    switch(choix,
           "0" = {
             cat(info_style("\nRetour au menu principal...\n"))
             break
           },
           "1" = bitcoin_pulse(),
           "2" = altcoin_tracker(),
           "3" = crypto_focus(),
           "4" = market_view(),
           "5" = display_fear_greed_index(),
           "6" = trend_scanner(),
           "7" = volume_anomaly()
    )
  }
}

# Pour lancer l'application


####################################################################################################
###
#####                                   
######                                   
#
#
##                                          Menu principal 
#####
###
###
###
####
####
###################################################################################################

library(openxlsx)
library(crayon)

# D√©finition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline
pro_style <- red$bold  # Style pour PRO

# Chemin des fichiers utiles
profil_recap_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/profil_recap.xlsx"
profil_recap <- read.xlsx(profil_recap_path)

crypto_questions_path <- "//Users/mehdifehri/Desktop/Technique de programmation/Data work/Questionnaire/Banque Question Cryptos.xlsx"
crypto_questions <- read.xlsx(crypto_questions_path)

##############################################################
###################### Fonction mise √† jour du profil ##############@
##########################################################


mettre_a_jour_profil <- function(profil_recap, user_index, new_score) {
  profil_recap$animal_score[user_index] <- new_score
  return(profil_recap)
}


######################################################################
########### Fonction Welcome message : CRYPTO ACADEMY ##############
######################################################################


welcome_message <- function() {
  cat(success_style("Bienvenue dans notre module : CryptoAcademy, une fonctionnalit√© de notre application Cryptowise - Copilote !

"))
  cat(info_style("Plongez dans l'univers fascinant des cryptomonnaies gr√¢ce √† notre biblioth√®que riche et immersive.

"))
  cat(info_style("Nous avons soigneusement con√ßu 10 chapitres pour explorer les bases, les usages, les innovations et les d√©fis du monde crypto.

"))
  cat(info_secondary_style("Ce module n'est pas qu'un simple cours, mais un voyage interactif o√π vous pourrez naviguer √† votre rythme.

"))
  cat(info_secondary_style("Apprenez, r√©fl√©chissez, et pr√©parez-vous √† tester vos connaissances pour ma√Ætriser cet univers en pleine expansion.

"))
  cat(info_style("√Ä chaque √©tape, vous aurez le choix : explorer davantage, approfondir vos comp√©tences, ou passer √† autre chose.

"))
  cat(success_style("Nous sommes ravis de vous accompagner dans cette aventure √©ducative unique. Bon apprentissage !

"))
}

######################################################
######## Fonction pour faire le test de connaissance
######################################################

lancer_test_crypto <- function(crypto_questions) {
  cat(section_title_style("\n=== Test de Connaissances en Cryptomonnaies ===\n"))
  cat(info_style("R√©pondez correctement aux questions pour √©valuer vos connaissances en cryptos.\n"))
  
  # Tirer 40 questions al√©atoires
  questions_sample <- crypto_questions[sample(1:nrow(crypto_questions), 40), ]
  score <- 0  # Initialiser le score
  
  for (i in 1:40) {
    question <- questions_sample[i, ]
    reponses <- c(question$BonneR√©ponse, question$MauvaiseR√©ponse1, question$MauvaiseR√©ponse2, question$MauvaiseR√©ponse3)
    reponses <- sample(reponses)  # M√©langer les r√©ponses
    
    # Afficher la question et les r√©ponses
    cat(highlight_style(paste0("\nQuestion ", i, ": ", question$Question, "\n")))
    for (j in 1:4) {
      cat(question_style(paste0(j, ". ", reponses[j], "\n")))
    }
    
    # Boucle pour valider la r√©ponse utilisateur
    repeat {
      user_response <- readline(question_style("Votre r√©ponse (1-4 ou cheat code) : "))
      user_response <- tolower(user_response)  # Permet de g√©rer les entr√©es non sensibles √† la casse
      
      # Gestion des cheat codes
      if (user_response == "bardella") {
        cat(error_style("\nOh noooon! Vous avez os√© prononcer le mot tabou ! Pas de d√©bats ici, juste un aller simple vers le z√©ro absolu !\n"))
        score <- 0  # R√©initialiser le score √† z√©ro
        return(score / 4)  # Retourner imm√©diatement le score (0/10)
      } else if (user_response == "sesame") {
        cat(success_style("\nBravo ! Vous avez prononc√© la formule magique : 'S√©same, ouvre-toi !' Tous les tr√©sors des bonnes r√©ponses sont maintenant √† vous !\n"))
        score <- 40  # Attribuer le score maximum (40/40)
        return(score / 4)  # Retourner imm√©diatement la note (10/10)
      }
      
      # V√©rification des r√©ponses
      if (user_response %in% c("1", "2", "3", "4")) {
        user_response <- as.numeric(user_response)
        
        if (reponses[user_response] == question$BonneR√©ponse) {
          cat(success_style("Bonne r√©ponse !\n"))
          score <- score + 1
        } else {
          cat(error_style("Mauvaise r√©ponse.\n"))
        }
        break  # Sortir de la boucle apr√®s une r√©ponse valide
      } else {
        cat(warning_style("Veuillez entrer un chiffre entre 1 et 4 ou un cheat code valide.\n"))
      }
    }
  }
  
  # Calcul du score sur 10
  note <- score / 4
  cat(success_style(paste0("\nVotre score final est : ", sprintf("%.2f", note), "/10.\n")))
  
  return(note)  # Retourner la note
}


####################################################
# Fonction pour afficher le sommaire
####################################################

show_sommaire <- function() {
  cat(section_title_style("\nSommaire principal\n\n"))
  
  sommaire <- list(
    "1" = list(title = "Chapitre 1 : Introduction : Les bases des cryptomonnaies", sections = c(
      "a. Qu'est-ce qu'une cryptomonnaie ?",
      "b. Histoire des cryptos : naissance de Bitcoin"
    )),
    "2" = list(title = "Chapitre 2 : Fonctionnement des cryptomonnaies", sections = c(
      "c. La blockchain : Technologie sous-jacente",
      "d. Les transactions en crypto : Cl√©s priv√©es et publiques",
      "e. Proof-of-Work (PoW) vs Proof-of-Stake (PoS)"
    )),
    "3" = list(title = "Chapitre 3 : Les cryptos majeures et leurs usages", sections = c(
      "f. Les principales cryptomonnaies",
      "g. Les stablecoins",
      "h. Les NFT et leur impact"
    )),
    "4" = list(title = "Chapitre 4 : Acqu√©rir et utiliser des cryptos", sections = c(
      "i. Acheter des cryptomonnaies : Les exchanges",
      "j. Les wallets crypto : types et s√©curit√©",
      "k. Envoyer et recevoir des cryptos"
    )),
    "5" = list(title = "Chapitre 5 : Investissement et trading", sections = c(
      "l. Comment √©valuer une cryptomonnaie ?",
      "m. Risques et volatilit√©",
      "n. Les bulles et cycles de march√©"
    )),
    "6" = list(title = "Chapitre 6 : R√©gulation et s√©curit√©", sections = c(
      "o. L'environnement r√©glementaire mondial",
      "p. Les risques de s√©curit√© : Fraudes et hacks"
    )),
    "7" = list(title = "Chapitre 7 : Applications et innovations", sections = c(
      "q. La finance d√©centralis√©e (DeFi)",
      "r. Les cas d‚Äôusage r√©els des cryptos",
      "s. L‚Äôimpact environnemental"
    )),
    "8" = list(title = "Chapitre 8 : Perspectives et tendances futures", sections = c(
      "t. Le futur des cryptomonnaies"
    )),
    "9" = list(title = "Chapitre 9 : Les risques inh√©rents √† l'investissement en cryptomonnaies", sections = c(
      "u. Les risques li√©s au march√©",
      "v. Les risques r√©glementaires et technologiques",
      "w. Les risques li√©s √† la s√©curit√© et aux arnaques"
    )),
    "10" = list(title = "Chapitre 10 : Aller plus loin dans l‚Äôunivers des cryptomonnaies", sections = c(
      "x. Informations suppl√©mentaires sur les passionn√©s",
      "y. Conseils pour aller plus loin : o√π se renseigner, quels outils utiliser ?",
      "z. Conclusion"
    ))
  )
  
  for (chapitre in names(sommaire)) {
    cat(section_title_style(paste0(chapitre, " - ", sommaire[[chapitre]]$title)), "\n")
    for (section in sommaire[[chapitre]]$sections) {
      cat("   -", highlight_style(section), "\n")
    }
  }
}

###########################################
# Crypto Book
###################################### 

details <- list(
  "1a" = paste0(
    section_title_style("\nChapitre 1 : Introduction : Les bases des cryptomonnaies\n"),
    highlight_style("Sous-section (A) : Qu'est-ce qu'une cryptomonnaie ?\n\n"),
    
    info_secondary_style("‚Ä¢ D√©finition :\n\n"),
    
    info_style("Une "), highlight_style("cryptomonnaie"), info_style(" est une monnaie num√©rique ou virtuelle qui utilise la cryptographie pour s√©curiser les transactions. Elle fonctionne de mani√®re d√©centralis√©e, souvent via une technologie appel√©e"), highlight_style("blockchain"), info_style(".\n\n"),
    
    info_secondary_style("‚Ä¢ Origine :\n\n"),
    
    info_style("Contrairement aux monnaies traditionnelles ("), highlight_style("dollars, euros"), info_style("), les cryptomonnaies ne sont pas √©mises ou contr√¥l√©es par une autorit√© centrale comme une banque centrale. Elles sont cr√©√©es et g√©r√©es par un r√©seau d√©centralis√© de participants.\n\n"),
    
    info_secondary_style("‚Ä¢ Diff√©rences avec les monnaies traditionnelles :\n\n"),
    
    info_style("1. "), highlight_style("Centralisation vs D√©centralisation"), info_style(": Les monnaies fiduciaires (ex : euro) sont √©mises et g√©r√©es par des banques centrales, tandis que les cryptomonnaies sont d√©centralis√©es.\n"),
    info_style("2. "), highlight_style("Physique vs Num√©rique"), info_style(": Les cryptos existent uniquement sous forme num√©rique.\n"),
    info_style("3. "), highlight_style("Transparence"), info_style(": Les transactions en cryptos sont visibles publiquement sur la blockchain, contrairement aux transactions bancaires.\n"),
    info_style("4. "), highlight_style("Contr√¥le de l'offre"), info_style(": Le Bitcoin, par exemple, a une limite fixe (21 millions de BTC), alors que les banques centrales peuvent imprimer davantage de monnaie.\n\n"),
    
    info_secondary_style("‚Ä¢ Caract√©ristiques principales :\n\n"),
    
    info_style("1. "), highlight_style("D√©centralisation"), info_style(": Les cryptomonnaies fonctionnent sur un r√©seau distribu√©, o√π aucune entit√© unique ne contr√¥le l‚Äôensemble des donn√©es.\n"),
    info_style("2. "), highlight_style("Transparence"), info_style(": Toutes les transactions sont enregistr√©es publiquement sur une blockchain accessible √† tous.\n"),
    info_style("3. "), highlight_style("Immutabilit√©"), info_style(": Une fois enregistr√©es dans la blockchain, les transactions ne peuvent pas √™tre modifi√©es ou supprim√©es.\n"),
    info_style("4. "), highlight_style("S√©curit√©"), info_style(": La cryptographie prot√®ge les donn√©es et emp√™che les fraudes.\n")
  ),
  
  "1b" = paste0(
    section_title_style("\nChapitre 1 : Introduction : Les bases des cryptomonnaies\n"),
    highlight_style("Sous-section (B) : Histoire des cryptos : naissance de Bitcoin\n\n"),
    
    info_secondary_style("‚Ä¢ Cr√©ation de Bitcoin :\n\n"),
    
    highlight_style("Le Bitcoin"), info_style(" a √©t√© cr√©√© en 2009 par une personne ou un groupe inconnue √† ce jour, sous le pseudonyme de "), highlight_style("Satoshi Nakamoto"), info_style(".\n"),
    info_style("Le but principal des/du cr√©ateur √©tait de proposer une alternative au syst√®me financier traditionnel apr√®s la crise financi√®re de 2008, en offrant une monnaie d√©centralis√©e et ind√©pendante des banques centrales.\n\n"),
    
    info_secondary_style("‚Ä¢ Premi√®re transaction en Bitcoin :\n\n"),
    info_style("En 2010, la premi√®re utilisation commerciale du Bitcoin a eu lieu lorsqu'un d√©veloppeur a achet√© deux pizzas pour "), highlight_style("10 000 BTC"), info_style(".\n\n"),
    
    info_secondary_style("‚Ä¢ Origine du concept :\n\n"),
    
    info_style("Le concept du BITCOIN repose sur un livre blanc publi√© par Nakamoto intitul√© "), highlight_style("\"Bitcoin: A Peer-to-Peer Electronic Cash System\""), info_style(", qui explique comment les transactions peuvent √™tre s√©curis√©es et valid√©es sans passer par une autorit√© centrale.\n\n"),
    
    info_secondary_style("‚Ä¢ √âvolution de l‚Äô√©cosyst√®me :\n\n"),
    
    info_style("  1. "), highlight_style("Altcoins :\n\n"),
    
    info_style("Apr√®s le succ√®s initial de Bitcoin, de nombreuses autres cryptomonnaies ont vu le jour, souvent appel√©es \"altcoins\" (cryptos alternatives).\n"),
    info_style("Exemples :\n"),
    info_style("      - "), highlight_style("Ethereum (2015)"), info_style(" : Introduit les smart contracts, permettant des applications d√©centralis√©es.\n"),
    info_style("      - "), highlight_style("Litecoin (2011)"), info_style(" : Une version plus rapide et l√©g√®re de Bitcoin.\n"),
    info_style("      - "), highlight_style("Ripple (2012)"), info_style(" : Con√ßu pour les paiements internationaux rapides et √† faible co√ªt.\n\n"),
    
    info_style("  2. "), highlight_style("Diversification :\n\n"),
    
    info_style("Aujourd‚Äôhui, l‚Äô√©cosyst√®me crypto s‚Äôest √©largi pour inclure des milliers de projets avec des cas d‚Äôusage vari√©s : finance d√©centralis√©e (DeFi), jetons non fongibles (NFT), et plus encore.\n\n"),
    
    info_secondary_style("‚Ä¢ Impact r√©volutionnaire :\n\n"),
    
    info_style(""), highlight_style("Le Bitcoin"), info_style(" a chang√© la mani√®re dont nous concevons la monnaie, introduisant des concepts comme la "), highlight_style("raret√© num√©rique"), info_style(", la "), highlight_style("transparence totale"), info_style(", et une ind√©pendance vis-√†-vis des institutions financi√®res traditionnelles.\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir :\n\n"),
    
    info_style("  1. "), highlight_style("Cryptomonnaie"), info_style(" : Monnaie num√©rique d√©centralis√©e et s√©curis√©e par la cryptographie.\n"),
    info_style("  2. "), highlight_style("Blockchain"), info_style(" : Technologie sous-jacente qui enregistre les transactions de mani√®re transparente et immuable.\n"),
    info_style("  3. "), highlight_style("Bitcoin"), info_style(" : La premi√®re cryptomonnaie, cr√©√©e en 2009 pour remplacer les monnaies traditionnelles.\n"),
    info_style("  4. "), highlight_style("Altcoins"), info_style(" : Cryptomonnaies alternatives comme Ethereum et Litecoin, introduisant de nouvelles fonctionnalit√©s.\n"),
    info_style("  5. "), highlight_style("Caract√©ristiques essentielles"), info_style(" : D√©centralisation, transparence, immutabilit√©, et s√©curit√©.\n")
  ),
  
  "2c" = paste0(
    section_title_style("\nChapitre 2 : Fonctionnement des cryptomonnaies\n"),
    highlight_style("Sous-section (C) : La blockchain : Technologie sous-jacente\n\n"),
    
    info_secondary_style("‚Ä¢ D√©finition :\n\n"),
    
    info_style("La "), highlight_style("blockchain"), info_style(" est une technologie d√©centralis√©e qui enregistre les transactions dans un registre distribu√© et s√©curis√©. Elle est souvent d√©crite comme un \"grand livre num√©rique\".\n\n"),
    
    info_secondary_style("‚Ä¢ Comment fonctionne une blockchain ?\n\n"),
    
    info_style("1. "), highlight_style("Transactions"), info_style(": Lorsqu‚Äôune transaction est initi√©e (ex : transfert de cryptos), elle est envoy√©e au r√©seau pour validation.\n"),
    info_style("2. "), highlight_style("Validation"), info_style(": Les n≈ìuds du r√©seau v√©rifient l‚Äôauthenticit√© des transactions gr√¢ce √† des m√©canismes de consensus.\n"),
    info_style("3. "), highlight_style("Bloc"), info_style(": Une fois valid√©es, les transactions sont regroup√©es dans un bloc.\n"),
    info_style("4. "), highlight_style("Ajout au registre"), info_style(": Le bloc est ajout√© √† la cha√Æne de blocs existante (blockchain).\n"),
    info_style("5. "), highlight_style("Immutabilit√©"), info_style(": Une fois dans la blockchain, les transactions ne peuvent plus √™tre modifi√©es.\n\n"),
    
    info_secondary_style("‚Ä¢ Structure des blocs :\n\n"),
    
    info_style("Chaque bloc contient :\n"),
    info_style("  o "), highlight_style("Les transactions"), info_style(": Une liste des transactions incluses.\n"),
    info_style("  o "), highlight_style("Le hash"), info_style(": Une empreinte unique bas√©e sur le contenu du bloc pr√©c√©dent.\n"),
    info_style("  o "), highlight_style("Le timestamp"), info_style(": L‚Äôhorodatage de cr√©ation du bloc.\n"),
    info_style("  o "), highlight_style("Le nonce"), info_style(": Une valeur utilis√©e dans le processus de minage.\n\n"),
    
    info_secondary_style("‚Ä¢ Minage et n≈ìuds :\n\n"),
    
    info_style("  o "), highlight_style("Minage"), info_style(": Processus o√π des mineurs r√©solvent des probl√®mes math√©matiques complexes pour valider les blocs (Proof-of-Work).\n"),
    info_style("  o "), highlight_style("N≈ìuds"), info_style(": Ordinateurs connect√©s au r√©seau qui stockent une copie compl√®te de la blockchain et participent √† la validation.\n\n")
  ),
  
  "2d" = paste0(
    section_title_style("\nChapitre 2 : Fonctionnement des cryptomonnaies\n"),
    highlight_style("Sous-section (D) : Les transactions en crypto : Cl√©s priv√©es et publiques\n\n"),
    
    info_secondary_style("‚Ä¢ Cl√© publique et cl√© priv√©e : D√©finition et r√¥le\n\n"),
    
    info_style("  o "), highlight_style("Cl√© publique"), info_style(": Fonctionne comme une adresse de r√©ception pour les cryptos. Elle est visible par tous et partag√©e.\n"),
    info_style("  o "), highlight_style("Cl√© priv√©e"), info_style(": Fonctionne comme un mot de passe qui permet de signer et d‚Äôautoriser les transactions. Elle doit rester confidentielle.\n\n"),
    
    info_secondary_style("‚Ä¢ Interaction :\n\n"),
    
    info_style("1. Une cl√© publique est d√©riv√©e d‚Äôune cl√© priv√©e gr√¢ce √† un algorithme cryptographique.\n"),
    info_style("2. Lorsqu‚Äôune transaction est initi√©e, elle est sign√©e avec la cl√© priv√©e pour prouver son authenticit√©.\n\n"),
    
    info_secondary_style("‚Ä¢ R√¥le des cl√©s dans les transactions :\n\n"),
    
    info_style("1. "), highlight_style("Initiation"), info_style(": Le propri√©taire utilise sa cl√© priv√©e pour signer une transaction.\n"),
    info_style("2. "), highlight_style("Validation"), info_style(": Les n≈ìuds du r√©seau utilisent la cl√© publique pour v√©rifier que la transaction est l√©gitime.\n"),
    info_style("3. "), highlight_style("Enregistrement"), info_style(": Une fois valid√©e, la transaction est inscrite dans la blockchain.\n\n"),
    
    info_secondary_style("Exemple concret :\n\n"),
    info_style("Vous voulez envoyer 1 Bitcoin √† un ami. Vous utilisez votre cl√© priv√©e pour signer la transaction. Votre ami re√ßoit le Bitcoin gr√¢ce √† sa cl√© publique.\n\n")
  ),
  
  "2e" = paste0(
    section_title_style("\nChapitre 2 : Fonctionnement des cryptomonnaies\n"),
    highlight_style("Sous-section (E) : Proof-of-Work (PoW) vs Proof-of-Stake (PoS)\n\n"),
    
    info_secondary_style("‚Ä¢ M√©canismes de consensus : D√©finition\n\n"),
    
    info_style("Les m√©canismes de consensus garantissent que toutes les transactions sur la blockchain sont v√©rifi√©es et s√©curis√©es.\n\n"),
    
    info_secondary_style("‚Ä¢ Proof-of-Work (PoW) :\n\n"),
    
    info_style("  o "), highlight_style("Principe"), info_style(": Les mineurs r√©solvent des probl√®mes math√©matiques complexes pour valider un bloc.\n"),
    info_style("  o "), highlight_style("Caract√©ristiques"), info_style(":\n"),
    info_style("    1. Tr√®s s√©curis√©, mais √©nergivore.\n"),
    info_style("    2. Utilis√© par Bitcoin et d'autres cryptos anciennes.\n"),
    info_style("  o "), highlight_style("Inconv√©nients"), info_style(":\n"),
    info_style("    - Consommation √©nerg√©tique √©lev√©e.\n"),
    info_style("    - Temps de traitement des transactions parfois long.\n\n"),
    
    info_secondary_style("‚Ä¢ Proof-of-Stake (PoS) :\n\n"),
    
    info_style("o "), highlight_style("Principe"), info_style(": Les validateurs sont choisis en fonction de la quantit√© de cryptos qu‚Äôils poss√®dent et \"stakent\" (mettent en garantie).\n"),
    info_style("o "), highlight_style("Caract√©ristiques"), info_style(":\n"),
    info_style("    1. Plus √©conome en √©nergie.\n"),
    info_style("    2. Utilis√© par des cryptos comme Ethereum 2.0, Cardano.\n"),
    info_style("o "), highlight_style("Inconv√©nients"), info_style(":\n"),
    info_style("Avantage les riches participants, car plus on poss√®de de cryptos, plus on a de chances d‚Äô√™tre s√©lectionn√© comme validateur.\n\n"),
    
    info_secondary_style("‚Ä¢ Diff√©rences principales :\n\n"),
    
    paste0(
      "\n| ", highlight_style("Crit√®re"), "           | ", highlight_style("Proof-of-Work (PoW)"), "       | ", highlight_style("Proof-of-Stake (PoS)"), " |\n",
      "|--------------------|-------------------------|--------------------------|\n",
      "| Validation         | R√©solution de calculs  | Mise en garantie de       |\n",
      "|                    | complexes              | tokens                    |\n",
      "| √ânergie            | Tr√®s √©nergivore        | Faible consommation       |\n",
      "|                    |                        | √©nerg√©tique               |\n",
      "| Vitesse            | Plus lent              | Plus rapide               |\n",
      "| Exemples           | Bitcoin, Litecoin      | Ethereum 2.0, Cardano     |\n\n\n\n"
    ),
    
    
    info_secondary_style("Concepts cl√©s √† retenir :\n\n"),
    
    info_style("1. "), highlight_style("Blockchain"), info_style(": Technologie d√©centralis√©e et immuable qui enregistre les transactions.\n"),
    info_style("2. "), highlight_style("Structure des blocs"), info_style(": Contient les transactions, le hash, le nonce, et d'autres m√©tadonn√©es.\n"),
    info_style("3. "), highlight_style("Cl√©s publiques et priv√©es"), info_style(": Syst√®me cryptographique garantissant la s√©curit√© des transactions.\n"),
    info_style("4. "), highlight_style("M√©canismes de consensus"), info_style(":\n"),
    info_style("  o PoW : S√©curis√© mais √©nergivore.\n"),
    info_style("  o PoS : Efficace, mais avantage les riches validateurs.")
  ),
  
  "3f" = paste0(
    section_title_style("\nChapitre 3 : Les cryptos majeures et leurs usages\n"),
    highlight_style("Sous-section (F): Les 50 principales cryptomonnaies\n\n"),
    
    info_secondary_style("‚Ä¢ Bitcoin (BTC) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2009 par Satoshi Nakamoto.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Premi√®re cryptomonnaie d√©centralis√©e, souvent consid√©r√©e comme une r√©serve de valeur num√©rique (\"or num√©rique\").\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Limite maximale de 21 millions de BTC.\n"),
    info_style("    2. Fonctionne avec le m√©canisme Proof-of-Work (PoW).\n"),
    info_style("    3. Utilis√© pour les paiements, mais aussi pour le stockage de valeur √† long terme.\n\n"),
    
    info_secondary_style("‚Ä¢ Ethereum (ETH) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2015 par Vitalik Buterin.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme de smart contracts et d'applications d√©centralis√©es (dApps).\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet de cr√©er des tokens et des contrats intelligents.\n"),
    info_style("    2. Transition r√©cente vers le Proof-of-Stake (Ethereum 2.0).\n"),
    info_style("    3. Base des projets DeFi (finance d√©centralis√©e) et NFT.\n\n"),
    
    info_secondary_style("‚Ä¢ Tether (USDT) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2014 par Tether Limited.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Stablecoin adoss√© au dollar am√©ricain, con√ßu pour r√©duire la volatilit√© dans les √©changes crypto.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. √âchangeable 1:1 avec l‚ÄôUSD.\n"),
    info_style("    2. Principalement utilis√© pour le trading et les paiements rapides.\n"),
    info_style("    3. Soutenu par des r√©serves d‚Äôactifs traditionnels.\n\n"),
    
    info_secondary_style("‚Ä¢ Binance Coin (BNB) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Binance, la plus grande plateforme d'√©change de cryptos au monde.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Utilis√© pour r√©duire les frais sur Binance et pour participer √† des projets via le Binance Launchpad.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Fonctionne sur la Binance Smart Chain (BSC).\n"),
    info_style("    2. Utilis√© pour les paiements, les frais d'√©change, et le staking.\n"),
    info_style("    3. Br√ªlages r√©guliers pour r√©duire l'offre totale et maintenir la valeur.\n\n"),
    
    info_secondary_style("‚Ä¢ USD Coin (USDC) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Circle et Coinbase.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Stablecoin enti√®rement adoss√© √† l'USD pour garantir une valeur stable et s√©curis√©e.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Audit√© r√©guli√®rement pour garantir la transparence.\n"),
    info_style("    2. Tr√®s utilis√© dans la DeFi.\n"),
    info_style("    3. Compatible avec plusieurs blockchains.\n\n"),
    
    info_secondary_style("‚Ä¢ XRP (XRP) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2012 par Ripple Labs.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Faciliter les paiements transfrontaliers rapides et √† faible co√ªt.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Transactions rapides (3-5 secondes).\n"),
    info_style("    2. Faibles co√ªts de transaction.\n"),
    info_style("    3. Utilis√© par les institutions financi√®res pour les paiements internationaux.\n\n"),
    
    info_secondary_style("‚Ä¢ Cardano (ADA) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Charles Hoskinson.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme blockchain pour les smart contracts, ax√©e sur la s√©curit√© et la durabilit√©.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√© sur un m√©canisme Proof-of-Stake (PoS).\n"),
    info_style("    2. Construit avec une approche scientifique et des revues acad√©miques.\n"),
    info_style("    3. Fournit des solutions pour la gouvernance et l‚Äôidentit√© num√©rique.\n\n"),
    
    info_secondary_style("‚Ä¢ Solana (SOL) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Anatoly Yakovenko.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain rapide et scalable pour les applications d√©centralis√©es.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Peut traiter jusqu'√† 65 000 transactions par seconde.\n"),
    info_style("    2. Faibles co√ªts de transaction.\n"),
    info_style("    3. Ax√© sur la DeFi et les NFT.\n\n"),
    
    info_secondary_style("‚Ä¢ Dogecoin (DOGE) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2013 par Billy Markus et Jackson Palmer.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Initialement con√ßu comme une blague, il est devenu une cryptomonnaie populaire pour les pourboires et les paiements.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Offre illimit√©e de tokens.\n"),
    info_style("    2. Communaut√© active et humoristique.\n"),
    info_style("    3. Soutien de personnalit√©s comme Elon Musk.\n\n"),
    
    info_secondary_style("‚Ä¢ Polygon (MATIC) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Jaynti Kanani, Sandeep Nailwal, et Anurag Arjun.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Solution de scalabilit√© pour Ethereum, permettant des transactions rapides et peu co√ªteuses.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Compatible avec Ethereum (Layer 2).\n"),
    info_style("    2. Prend en charge de nombreuses applications d√©centralis√©es (dApps).\n"),
    info_style("    3. Faibles frais de transaction.\n\n"),
    
    info_secondary_style("‚Ä¢ Polkadot (DOT) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2016 par Gavin Wood.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain multi-cha√Ænes permettant l‚Äôinterop√©rabilit√© entre diff√©rents r√©seaux blockchain.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√© sur un syst√®me de parachains.\n"),
    info_style("    2. Con√ßu pour connecter et s√©curiser plusieurs blockchains.\n"),
    info_style("    3. Id√©al pour les projets interop√©rables.\n\n"),
    
    info_secondary_style("‚Ä¢ Shiba Inu (SHIB) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par un d√©veloppeur pseudonyme nomm√© Ryoshi.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Cryptomonnaie communautaire souvent appel√©e le \"Dogecoin Killer\".\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Offre massive de tokens (trillions).\n"),
    info_style("    2. Utilis√© pour des projets NFT et DeFi.\n"),
    info_style("    3. Communaut√© active et dynamique.\n\n"),
    
    info_secondary_style("‚Ä¢ Avalanche (AVAX) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Ava Labs.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain rapide et √©conome en √©nergie pour les dApps et les contrats intelligents.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Capacit√© de traitement √©lev√©e (plusieurs milliers de TPS).\n"),
    info_style("    2. Bas√© sur un consensus unique (Avalanche Consensus).\n"),
    info_style("    3. Compatible avec Ethereum (EVM).\n\n"),
    
    info_secondary_style("‚Ä¢ TRON (TRX) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Justin Sun.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme blockchain con√ßue pour le partage de contenu num√©rique d√©centralis√©.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Transactions rapides et gratuites.\n"),
    info_style("    2. Soutien aux cr√©ateurs de contenu via un √©cosyst√®me d√©centralis√©.\n"),
    info_style("    3. H√©berge des projets DeFi et NFT.\n\n"),
    
    info_secondary_style("‚Ä¢ Uniswap (UNI) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Hayden Adams.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Protocole d‚Äô√©change d√©centralis√© (DEX) fonctionnant sur Ethereum.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Utilise des pools de liquidit√© pour faciliter les √©changes.\n"),
    info_style("    2. Pas besoin d‚Äôinterm√©diaires pour les transactions.\n"),
    info_style("    3. Gouvernance d√©centralis√©e via le token UNI.\n\n"),
    
    info_secondary_style("‚Ä¢ Chainlink (LINK) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Sergey Nazarov et Steve Ellis.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Fournit des oracles d√©centralis√©s pour connecter les smart contracts aux donn√©es du monde r√©el.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Int√®gre des donn√©es fiables aux blockchains.\n"),
    info_style("    2. Essentiel pour les projets DeFi et les assurances bas√©es sur des smart contracts.\n"),
    info_style("    3. Large adoption dans l‚Äô√©cosyst√®me blockchain.\n\n"),
    
    info_secondary_style("‚Ä¢ Cosmos (ATOM) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2019 par Jae Kwon et Ethan Buchman.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": R√©seau interop√©rable con√ßu pour connecter plusieurs blockchains ind√©pendantes.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√© sur le protocole de communication inter-blockchain (IBC).\n"),
    info_style("    2. Hautement scalable et personnalisable.\n"),
    info_style("    3. Favorise l‚Äôinterop√©rabilit√© entre les r√©seaux.\n\n"),
    
    info_secondary_style("‚Ä¢ Ethereum Classic (ETC) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2016 apr√®s une scission avec Ethereum.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Version originale d‚ÄôEthereum avant sa transition vers le Proof-of-Stake.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√© sur le Proof-of-Work (PoW).\n"),
    info_style("    2. Plus conservateur dans ses mises √† jour.\n"),
    info_style("    3. Utilis√© pour les contrats intelligents et dApps.\n\n"),
    
    info_secondary_style("‚Ä¢ Toncoin (TON) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": Initialement d√©velopp√© par Telegram, puis repris par The Open Network.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain rapide pour les paiements et les services financiers d√©centralis√©s.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Transactions rapides et peu co√ªteuses.\n"),
    info_style("    2. Orient√© vers la finance d√©centralis√©e.\n"),
    info_style("    3. Adoption croissante dans les paiements num√©riques.\n\n"),
    
    info_secondary_style("‚Ä¢ Stellar (XLM) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2014 par Jed McCaleb et Joyce Kim.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Permet les paiements transfrontaliers rapides et √† faible co√ªt.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Orient√© vers les services financiers pour les zones sous-bancaris√©es.\n"),
    info_style("    2. Connecte les institutions financi√®res via la blockchain.\n"),
    info_style("    3. Soutenu par une forte collaboration avec IBM.\n\n"),
    
    info_secondary_style("‚Ä¢ Monero (XMR) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2014 par un collectif anonyme.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Fournit des transactions priv√©es et intra√ßables.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Utilise des signatures en anneau pour masquer les exp√©diteurs et destinataires.\n"),
    info_style("    2. Forte adoption pour la confidentialit√© financi√®re.\n"),
    info_style("    3. Focus sur la d√©centralisation et la r√©sistance √† la censure.\n\n"),
    
    info_secondary_style("‚Ä¢ Algorand (ALGO) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2019 par Silvio Micali.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain rapide et √©cologique pour les dApps et les entreprises.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√© sur un m√©canisme de consensus Proof-of-Stake pur.\n"),
    info_style("    2. Hautement scalable avec des finalit√©s quasi instantan√©es.\n"),
    info_style("    3. Utilis√© pour les paiements et les projets DeFi.\n\n"),
    
    info_secondary_style("‚Ä¢ VeChain (VET) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2015 par Sunny Lu.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain d√©di√©e √† la gestion de la cha√Æne d‚Äôapprovisionnement.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Focus sur la tra√ßabilit√© et la transparence des produits.\n"),
    info_style("    2. Partenariats avec des entreprises mondiales (ex : BMW, Walmart).\n"),
    info_style("    3. Utilise un syst√®me √† deux tokens (VET et VTHO).\n\n"),
    
    info_secondary_style("‚Ä¢ Filecoin (FIL) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Protocol Labs.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Fournit un syst√®me de stockage d√©centralis√© bas√© sur la blockchain.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet le stockage s√©curis√© et permanent des donn√©es.\n"),
    info_style("    2. Incite les utilisateurs √† louer leur espace disque.\n"),
    info_style("    3. Int√©gr√© √† des projets Web3.\n\n"),
    
    info_secondary_style("‚Ä¢ Internet Computer (ICP) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2021 par DFINITY Foundation.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Permet de cr√©er des applications d√©centralis√©es avec une vitesse Internet.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Capacit√© √† remplacer les serveurs cloud traditionnels.\n"),
    info_style("    2. Faible co√ªt pour h√©berger des dApps.\n"),
    info_style("    3. Visant √† r√©volutionner l'infrastructure d'Internet.\n\n"),
    
    info_secondary_style("‚Ä¢ ApeCoin (APE) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2022 par Yuga Labs (cr√©ateurs de Bored Ape Yacht Club).\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Devise utilis√©e dans l‚Äô√©cosyst√®me Bored Ape et projets NFT affili√©s.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Gouvernance par une DAO d√©di√©e.\n"),
    info_style("    2. Int√©gr√© √† des exp√©riences Metaverse et jeux blockchain.\n"),
    info_style("    3. Soutenu par une forte communaut√© NFT.\n\n"),
    
    info_secondary_style("‚Ä¢ Tezos (XTZ) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Arthur et Kathleen Breitman.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain auto-√©volutive pour les contrats intelligents.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Focus sur la gouvernance d√©centralis√©e.\n"),
    info_style("    2. Mises √† jour continues sans hard forks.\n"),
    info_style("    3. √ânergie efficace gr√¢ce au Proof-of-Stake (PoS).\n\n"),
    
    info_secondary_style("‚Ä¢ The Sandbox (SAND) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Pixowl Inc.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme Metaverse permettant de cr√©er, acheter et vendre des actifs num√©riques.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Utilis√© pour acheter des terrains et objets dans le Metaverse.\n"),
    info_style("    2. Forte adoption par les marques et cr√©ateurs.\n"),
    info_style("    3. Bas√© sur la blockchain Ethereum.\n\n"),
    
    info_secondary_style("‚Ä¢ Hedera (HBAR) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2019 par Mance Harmon et Leemon Baird.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme de consensus public rapide et s√©curis√©.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Utilise le consensus Hashgraph.\n"),
    info_style("    2. Bas√© sur des transactions rapides et peu co√ªteuses.\n"),
    info_style("    3. Id√©al pour les entreprises et applications d√©centralis√©es.\n\n"),
    
    info_secondary_style("‚Ä¢ Aave (AAVE) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par Stani Kulechov.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme de pr√™t d√©centralis√©e dans l'√©cosyst√®me DeFi.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet d'emprunter et de pr√™ter des actifs num√©riques sans interm√©diaire.\n"),
    info_style("    2. Introduit des pr√™ts flash, remboursables dans une m√™me transaction.\n"),
    info_style("    3. Fonctionne sur Ethereum et d'autres blockchains compatibles.\n\n"),
    
    info_secondary_style("‚Ä¢ Decentraland (MANA) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Esteban Ordano et Ariel Meilich.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme Metaverse o√π les utilisateurs peuvent acheter des terrains virtuels.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet la cr√©ation d‚Äôexp√©riences interactives dans un monde virtuel.\n"),
    info_style("    2. MANA est utilis√© pour acheter des biens et services dans l'√©cosyst√®me.\n"),
    info_style("    3. Bas√© sur la blockchain Ethereum.\n\n"),
    
    info_secondary_style("‚Ä¢ EOS (EOS) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Block.one (dirig√© par Brendan Blumer et Dan Larimer).\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Fournit une infrastructure blockchain hautement scalable pour les dApps.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Faibles co√ªts de transaction.\n"),
    info_style("    2. Haut d√©bit de traitement gr√¢ce √† une architecture unique.\n"),
    info_style("    3. Orientation vers les applications d'entreprise.\n\n"),
    
    info_secondary_style("‚Ä¢ Theta Network (THETA) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Mitch Liu et Jieyi Long.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Fournit un r√©seau d√©centralis√© de streaming vid√©o.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. R√©duit les co√ªts de bande passante via le partage de ressources utilisateur.\n"),
    info_style("    2. Soutenu par des partenaires majeurs comme Google et Samsung.\n"),
    info_style("    3. Utilis√© dans l‚Äôindustrie des m√©dias et du divertissement.\n\n"),
    
    info_secondary_style("‚Ä¢ Axie Infinity (AXS) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Sky Mavis.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Jeu blockchain bas√© sur des NFT permettant de collecter et d‚Äô√©changer des cr√©atures virtuelles.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. AXS est utilis√© pour les transactions et la gouvernance.\n"),
    info_style("    2. Forte adoption dans l'√©cosyst√®me du Play-to-Earn.\n"),
    info_style("    3. Connu pour son impact dans les √©conomies √©mergentes.\n\n"),
    
    info_secondary_style("‚Ä¢ Elrond (EGLD) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par Beniamin et Lucian Mincu.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Blockchain hautement scalable pour les paiements et les dApps.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Bas√©e sur un m√©canisme de sharding adaptatif.\n"),
    info_style("    2. Permet des transactions rapides et √† faible co√ªt.\n"),
    info_style("    3. Cibl√© pour l'adoption massive et les utilisateurs finaux.\n\n"),
    
    info_secondary_style("‚Ä¢ Chiliz (CHZ) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2018 par Alexandre Dreyfus.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Monnaie num√©rique pour les fans de sport et de divertissement.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet d‚Äôacheter des fan tokens pour interagir avec des √©quipes sportives.\n"),
    info_style("    2. Utilis√© par des clubs majeurs comme le FC Barcelone et la Juventus.\n"),
    info_style("    3. Soutenu par la plateforme Socios.com.\n\n"),
    
    info_secondary_style("‚Ä¢ KuCoin Token (KCS) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2017 par l'√©quipe KuCoin.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Token natif de la plateforme d‚Äô√©change KuCoin.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Offre des r√©ductions sur les frais de transaction.\n"),
    info_style("    2. G√©n√®re des dividendes bas√©s sur les revenus de l'√©change.\n"),
    info_style("    3. Int√©gr√© aux initiatives DeFi et NFT.\n\n"),
    
    info_secondary_style("‚Ä¢ PancakeSwap (CAKE) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2020 par une √©quipe anonyme.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Plateforme d‚Äô√©change d√©centralis√©e (DEX) sur Binance Smart Chain.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet l'√©change de tokens BEP-20.\n"),
    info_style("    2. Offre des fonctionnalit√©s de yield farming et de staking.\n"),
    info_style("    3. Forte adoption gr√¢ce √† des frais faibles et une rapidit√© accrue.\n\n"),
    
    info_secondary_style("‚Ä¢ Maker (MKR) :\n"),
    info_style("  o "), highlight_style("Cr√©ation"), info_style(": En 2015 par Rune Christensen.\n"),
    info_style("  o "), highlight_style("R√¥le"), info_style(": Gouverne le protocole MakerDAO et le stablecoin DAI.\n"),
    info_secondary_style("  o Sp√©cificit√©s :\n"),
    info_style("    1. Permet de stabiliser le DAI gr√¢ce √† des m√©canismes de collat√©ralisation.\n"),
    info_style("    2. Les d√©tenteurs de MKR participent aux d√©cisions de gouvernance.\n"),
    info_style("    3. Joue un r√¥le cl√© dans l'√©cosyst√®me DeFi.\n\n")
  ),
  
  "3h" = paste0(
    section_title_style("\nChapitre 3 : Les cryptos majeures et leurs usages\n"),
    highlight_style("Sous-section (H) : Les NFT et leur impact\n\n"),
    
    info_secondary_style("‚Ä¢ Que sont les Non-Fungible Tokens (NFT) ?\n\n"),
    
    info_style(""), highlight_style("D√©finition"), info_style(": Les NFT sont des actifs num√©riques uniques, non interchangeables (contrairement aux cryptos comme Bitcoin), enregistr√©s sur une blockchain.\n\n"),
    
    info_secondary_style("‚Ä¢ Caract√©ristiques principales :\n\n"),
    
    info_style("    1. Chaque NFT poss√®de une identit√© unique, souvent associ√©e √† un fichier num√©rique (image, vid√©o, musique).\n"),
    info_style("    2. Bas√©s principalement sur la blockchain Ethereum (ERC-721, ERC-1155).\n\n"),
    
    info_secondary_style("‚Ä¢ Usages des NFT :\n\n"),
    
    info_style(" 1. "), highlight_style("Art num√©rique"), info_style(":\n"),
    info_style("  Les artistes utilisent les NFT pour vendre des ≈ìuvres d‚Äôart num√©riques, garantissant leur authenticit√© et leur raret√©.\n"),
    highlight_style("  Exemple"), info_style(": Vente d'≈ìuvres num√©riques √† plusieurs millions de dollars (Beeple, CryptoPunks).\n\n"),
    
    info_style("2. "), highlight_style("Jeux vid√©o"), info_style(":\n"),
    info_style("  Les NFT permettent d‚Äôacheter, vendre ou √©changer des objets virtuels dans les jeux (armes, skins, terrains virtuels).\n\n"),
    highlight_style("  Exemple"), info_style(": Axie Infinity, Decentraland.\n\n"),
    
    info_style("3. "), highlight_style("Certificats num√©riques"), info_style(":\n"),
    info_style("  Utilis√©s pour repr√©senter des certificats d‚Äôauthenticit√©, des billets d‚Äô√©v√©nements ou des droits de propri√©t√© (immobilier, musique).\n\n"),
    
    info_style("4. "), highlight_style("Mode et luxe"), info_style(":\n"),
    info_style("  Les marques cr√©ent des NFT pour proposer des objets exclusifs ou des collections num√©riques.\n\n"),
    
    info_secondary_style("‚Ä¢ Impact des NFT :\n\n"),
    
    info_style("1. "), highlight_style("R√©volution culturelle"), info_style(": Offrent une nouvelle mani√®re de poss√©der et de mon√©tiser du contenu num√©rique.\n"),
    info_style("2. "), highlight_style("Nouvelles opportunit√©s √©conomiques"), info_style(": Les cr√©ateurs conservent un contr√¥le total sur leurs ≈ìuvres et peuvent toucher des royalties √† chaque revente.\n"),
    info_style("3. "), highlight_style("Critiques"), info_style(":\n"),
    info_style("    - Consommation √©nerg√©tique √©lev√©e.\n"),
    info_style("    - Risques de sp√©culation et de fraudes.\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir :\n\n"),
    
    info_style("1. "), highlight_style("Cryptos majeures"), info_style(":\n"),
    info_style("    - Bitcoin : R√©serve de valeur et premi√®re crypto.\n"),
    info_style("    - Ethereum : Plateforme de smart contracts et base des NFT.\n"),
    info_style("    - Litecoin : Paiements rapides.\n"),
    info_style("    - Binance Coin : Utilis√© pour les frais d‚Äô√©change et le staking.\n"),
    info_style("2. "), highlight_style("Stablecoins"), info_style(": Cryptos stables, adoss√©es √† des actifs comme le dollar (USDT, USDC) ou d√©centralis√©es (DAI).\n"),
    info_style("3. "), highlight_style("NFT"), info_style(": Actifs num√©riques uniques utilis√©s dans l‚Äôart, les jeux, et d‚Äôautres industries, avec des applications innovantes mais aussi des limites environnementales.\n")
  ),
  
  "4i" = paste0(
    section_title_style("\nChapitre 4 : Acqu√©rir et utiliser des cryptos\n"),
    highlight_style("Sous-section (I) : Acheter des cryptomonnaies : Les exchanges\n\n"),
    
    info_secondary_style("‚Ä¢ Fonctionnement des plateformes :\n\n"),
    
    info_style("  o "), highlight_style("Exchanges centralis√©s (CEX)"), info_style(":\n"),
    info_style("    - Plateformes comme Binance, Coinbase, ou Kraken.\n"),
    info_style("    - Fonctionnent comme des interm√©diaires centralis√©s pour acheter, vendre et √©changer des cryptomonnaies.\n"),
    info_style("    - Simples √† utiliser, mais n√©cessitent souvent une v√©rification KYC (Know Your Customer).\n\n"),
    
    info_style("  o "), highlight_style("Exchanges d√©centralis√©s (DEX)"), info_style(":\n"),
    info_style("    - Plateformes comme Uniswap, PancakeSwap ou SushiSwap.\n"),
    info_style("    - Permettent d'√©changer directement des cryptos entre utilisateurs via des smart contracts.\n"),
    info_style("    - Ne n√©cessitent pas d‚Äôinterm√©diaire ni de KYC, mais peuvent √™tre plus complexes √† utiliser.\n\n"),
    
    
    "\n| ", highlight_style("Crit√®res"), "             | ", highlight_style("Centralis√©s (CEX)"), "          | ", highlight_style("D√©centralis√©s (DEX)"), "           |\n",
    "|---------------------|---------------------------|-----------------------------|\n",
    "| Contr√¥le            | Plateforme centralis√©e    | Contr√¥le total par          |\n",
    "|                     |                           | l'utilisateur               |\n",
    "| Simplicit√©          | Facile √† utiliser         | Peut √™tre complexe          |\n",
    "| S√©curit√©            | Risques de hacks          | Plus s√©curis√© si utilis√©    |\n",
    "|                     | centralis√©s               | correctement                |\n",
    "| KYC                 | Obligatoire               | Non requis                  |\n",
    "| Frais               | Souvent fixes             | Variable en fonction du     |\n",
    "|                     |                           | r√©seau                      |\n"
    
  ),
  
  
  "4j" = paste0(
    section_title_style("\nChapitre 4 : Acqu√©rir et utiliser des cryptos\n"),
    highlight_style("Sous-section (J) : Les wallets crypto : types et s√©curit√©\n\n"),
    
    info_secondary_style("‚Ä¢ Types de wallets :\n\n"),
    
    info_style("  o "), highlight_style("Wallets mat√©riels (hardware wallets)"), info_style(":\n"),
    info_style("    - Exemples : Ledger, Trezor.\n"),
    info_style("    - Appareils physiques qui stockent les cl√©s priv√©es hors ligne, offrant une s√©curit√© maximale contre les cyberattaques.\n"),
    info_style("    - Id√©al pour les investisseurs √† long terme.\n\n"),
    
    info_style("  o "), highlight_style("Wallets logiciels (software wallets)"), info_style(":\n"),
    info_style("    - Applications comme MetaMask, Trust Wallet ou Exodus.\n"),
    info_style("    - Pratiques pour g√©rer des cryptos sur ordinateur ou smartphone.\n"),
    info_style("    - Moins s√©curis√©s car connect√©s √† Internet.\n\n"),
    
    info_secondary_style("‚Ä¢ Hot wallets vs Cold wallets :\n\n"),
    
    info_style("  o "), highlight_style("Hot wallets"), info_style(":\n"),
    info_style("    - Connect√©s √† Internet (ex : MetaMask, wallets d‚Äôexchanges).\n"),
    info_style("    - Pratiques pour les transactions fr√©quentes, mais expos√©s aux risques de piratage.\n"),
    info_style("  o "), highlight_style("Cold wallets"), info_style(":\n"),
    info_style("    - Hors ligne (ex : Ledger, portefeuille papier).\n"),
    info_style("    - Id√©aux pour le stockage √† long terme, avec une s√©curit√© renforc√©e.\n\n")
    
  ),
  
  "4k" = paste0(
    section_title_style("\nChapitre 4 : Acqu√©rir et utiliser des cryptos\n"),
    highlight_style("Sous-section (K) : Envoyer et recevoir des cryptos\n\n"),
    
    info_secondary_style("‚Ä¢ √âtapes pratiques pour effectuer une transaction :\n\n"),
    
    info_style("√âtape 1 : "), highlight_style("Obtenir l‚Äôadresse du destinataire"), info_style(": Exemple : Une cl√© publique unique.\n"),
    info_style("√âtape 2 : "), highlight_style("Initier la transaction"), info_style(": Depuis votre wallet, entrez l‚Äôadresse du destinataire, le montant √† envoyer et validez.\n"),
    info_style("√âtape 3 : "), highlight_style("Paiement des frais de r√©seau (gas fees)"), info_style(": N√©cessaire pour que les mineurs ou validateurs traitent la transaction.\n"),
    info_style("√âtape 4 : "), highlight_style("Validation et confirmation"), info_style(": La transaction est ajout√©e √† la blockchain apr√®s validation.\n\n"),
    
    info_secondary_style("‚Ä¢ Frais de transaction (gas fees) :\n\n"),
    
    info_style("  "), highlight_style("D√©finition"), info_style(": Les gas fees repr√©sentent les frais pay√©s pour les op√©rations effectu√©es sur une blockchain.\n\n"),
    
    info_style("  "), highlight_style("Exemples"), info_style(":\n"),
    info_style("    - Sur Ethereum, les frais d√©pendent de la congestion du r√©seau.\n"),
    info_style("    - Sur Binance Smart Chain, les frais sont g√©n√©ralement plus faibles.\n\n"),
    
    info_style("  "), highlight_style("Facteurs influen√ßant les frais"), info_style(":\n"),
    info_style("    - Complexit√© de la transaction.\n"),
    info_style("    - Congestion du r√©seau.\n"),
    info_style("    - Vitesse de traitement souhait√©e (frais plus √©lev√©s pour une validation rapide).\n")
  ),
  
  "5l" = paste0(
    section_title_style("\nChapitre 5 : Investissement et trading\n"),
    highlight_style("Sous-section (L) : Comment √©valuer une cryptomonnaie ?\n\n"),
    
    info_secondary_style("‚Ä¢ Crit√®res d'√©valuation d'une cryptomonnaie :\n\n"),
    
    info_style("1. "), success_style("Market cap (capitalisation boursi√®re)"), info_style(":\n\n"),
    
    highlight_style(" D√©finition"), info_style(": Valeur totale de toutes les unit√©s d‚Äôune cryptomonnaie en circulation.\n"),
    highlight_style(" Formule"), info_style(": Market cap = Prix unitaire x Nombre total d‚Äôunit√©s en circulation.\n"),
    highlight_style("  Utilit√© :\n"),
    info_style("      - Une market cap √©lev√©e indique une crypto plus stable et √©tablie (ex : Bitcoin, Ethereum).\n"),
    info_style("      - Une market cap faible peut signifier un potentiel de croissance, mais aussi plus de risque.\n\n"),
    
    success_style("2. "), highlight_style("Volume de trading"), info_style(":\n\n"),
    
    highlight_style(" D√©finition"), info_style(": Montant total de transactions effectu√©es sur une cryptomonnaie sur une p√©riode donn√©e (souvent 24 heures).\n"),
    highlight_style(" Utilit√© :\n"),
    info_style("      - Un volume √©lev√© indique une forte liquidit√©, ce qui facilite l'achat et la vente.\n"),
    info_style("      - Un faible volume peut rendre difficile l‚Äôex√©cution des transactions.\n\n"),
    
    success_style("3. "), highlight_style("Tokenomics"), info_style(":\n\n"),
    
    info_style(" √âtude de l‚Äô√©conomie des tokens (offre, demande, utilit√©).\n\n"),
    
    highlight_style(" Points cl√©s √† examiner :\n"),
    info_style("      - Offre maximale : Limite du nombre de tokens (ex : Bitcoin = 21 millions).\n"),
    info_style("      - Utilit√© : √Ä quoi sert le token ? (paiements, staking, gouvernance).\n"),
    info_style("      - Distribution : Comment les tokens sont r√©partis (entre les d√©veloppeurs, les investisseurs, etc.).\n\n"),
    
    info_secondary_style("‚Ä¢ Investir vs Trader :\n\n"),
    
    success_style(" Investir"), info_style(":\n"),
    highlight_style("- Objectif"), info_style(": Acheter et conserver des cryptos sur le long terme.\n"),
    highlight_style("- Approche"), info_style(": Bas√©e sur l‚Äôanalyse fondamentale (projet, √©quipe, vision).\n"),
    highlight_style("- Risques"),  info_style(": Plus faible volatilit√© √† long terme, mais sensible aux tendances du march√©.\n\n"),
    
    success_style(" Trader"), info_style(":\n"),
    highlight_style("- Objectif"), info_style(": Profiter des fluctuations de prix √† court terme.\n"),
    highlight_style("- Approche"), info_style(": Bas√©e sur l‚Äôanalyse technique (graphiques, indicateurs).\n"),
    highlight_style("- Risques"),  info_style(": Plus √©lev√©, n√©cessite une surveillance constante et une bonne ma√Ætrise.\n")
  ),
  
  "5m" = paste0(
    section_title_style("\nChapitre 5 : Investissement et trading\n"),
    highlight_style("Sous-section (M) : Risques et volatilit√©\n\n"),
    
    info_secondary_style("‚Ä¢ Facteurs influen√ßant les prix des cryptos :\n\n"),
    
    info_style("1. "), highlight_style("Offre et demande"), info_style(":\n"),
    info_style(" Une demande √©lev√©e et une offre limit√©e augmentent les prix.\n"),
    info_style(" Exemples : La limite de 21 millions de Bitcoin soutient son prix.\n\n"),
    
    info_style("2. "), highlight_style("R√©gulations"), info_style(":\n"),
    info_style(" Les annonces gouvernementales peuvent fortement impacter les prix (ex : interdictions en Chine).\n\n"),
    
    info_style("3. "), highlight_style("Adoption"), info_style(":\n"),
    info_style(" Une adoption accrue par les entreprises et utilisateurs augmente la valeur (ex : PayPal acceptant Bitcoin).\n\n"),
    
    info_style("4. "), highlight_style("Sentiment du march√©"), info_style(":\n"),
    info_style(" La psychologie collective influence les prix (enthousiasme ou panique).\n\n"),
    
    info_style("5. "), highlight_style("Facteurs externes"), info_style(":\n"),
    info_style(" √âv√©nements globaux comme les crises √©conomiques ou les tensions politiques.\n\n"),
    
    
    info_secondary_style("‚Ä¢ Importance de g√©rer les risques :\n\n"),
    
    info_style(""), highlight_style("R√®gle d'or"), info_style(": Ne jamais investir plus que ce qu‚Äôon est pr√™t √† perdre.\n\n"),
    
    info_style(""), highlight_style("Diversification"), info_style(": R√©partir ses investissements entre plusieurs cryptos pour limiter les pertes potentielles.\n\n"),
    
    info_style(""), highlight_style("Analyse pr√©alable"), info_style(": √âtudier le projet, les tokenomics et la liquidit√© avant d‚Äôinvestir.\n\n"),
    
    info_style(""), highlight_style("Strat√©gies de sortie"), info_style(": D√©finir √† l‚Äôavance des seuils pour vendre (stop-loss, take-profit).\n")
  ),
  
  "5n" = paste0(
    section_title_style("\nChapitre 5 : Investissement et trading\n"),
    highlight_style("Sous-section (N) : Les bulles et cycles de march√©\n\n"),
    
    info_secondary_style("‚Ä¢ Bull et bear markets :\n\n"),
    
    info_style("  1. "), highlight_style("Bull market"), info_style(":\n"),
    info_style("    o March√© haussier caract√©ris√© par une forte augmentation des prix.\n"),
    info_style("    o Typiquement associ√© √† un optimisme g√©n√©ralis√© et une forte adoption.\n"),
    info_style("    o Exemple : La hausse spectaculaire de Bitcoin en 2021.\n\n"),
    
    info_style("  2. "), highlight_style("Bear market"), info_style(":\n"),
    info_style("    o March√© baissier marqu√© par une chute prolong√©e des prix.\n"),
    info_style("    o Li√© √† une perte de confiance ou des conditions √©conomiques d√©favorables.\n"),
    info_style("    o Exemple : Le crash crypto de 2018 apr√®s le boom des ICO.\n\n"),
    
    info_secondary_style("‚Ä¢ Psychologie des investisseurs :\n\n"),
    
    info_style("  1. "), highlight_style("FOMO (Fear of Missing Out)"), info_style(":\n"),
    info_style("    o Peur de manquer une opportunit√©, poussant les investisseurs √† acheter au plus haut.\n"),
    info_style("    o R√©sultat : Risques accrus d‚Äôachats impulsifs et de pertes.\n"),
    info_style("  2. "), highlight_style("FUD (Fear, Uncertainty, and Doubt)"), info_style(":\n"),
    info_style("    o Strat√©gie visant √† semer le doute ou la peur pour faire baisser les prix.\n"),
    info_style("    o R√©sultat : Les investisseurs paniquent et vendent √† perte.\n"),
    info_style("  3. "), highlight_style("Cycle des √©motions"), info_style(":\n"),
    info_style("    o Euphorie ‚Üí FOMO ‚Üí Crash ‚Üí Panique ‚Üí D√©pression ‚Üí R√©cup√©ration.\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir :\n\n"),
    
    info_style("  1. "), highlight_style("√âvaluation des cryptos"), info_style(":\n"),
    info_style("  - Market cap, volume de trading et tokenomics sont essentiels pour juger une crypto.\n"),
    info_style("  - Diff√©rencier les strat√©gies d‚Äôinvestissement (long terme) et de trading (court terme).\n"),
    info_style("  2. "), highlight_style("G√©rer les risques"), info_style(":\n"),
    info_style("  -  Conna√Ætre les facteurs influen√ßant les prix.\n"),
    info_style("  - Ne jamais investir plus que ce que l‚Äôon peut perdre.\n"),
    info_style("  3. "), highlight_style("Cycles de march√©"), info_style(":\n"),
    info_style("  - Apprendre √† reconna√Ætre les bulles et √† g√©rer les √©motions (FOMO, FUD).\n")
  ),
  
  "6o" = paste0(
    section_title_style("\nChapitre 6 : R√©gulation et s√©curit√©\n"),
    highlight_style("Sous-section (o) : L'environnement r√©glementaire mondial\n\n"),
    
    info_secondary_style("‚Ä¢ R√©gulation en Europe : MiCA (Markets in Crypto-Assets)\n\n"),
    
    info_style(""), highlight_style("D√©finition"), info_style(": MiCA est un cadre r√©glementaire de l'Union europ√©enne visant √† harmoniser les r√®gles pour les cryptomonnaies et les actifs num√©riques dans l'UE.\n\n"),
    
    info_style(""), highlight_style("Objectifs"), info_style(":\n"),
    info_style("    o Prot√©ger les investisseurs contre les risques.\n"),
    info_style("    o Encadrer les √©metteurs de cryptos (stablecoins, utility tokens).\n"),
    info_style("    o Lutter contre le blanchiment d‚Äôargent et le financement du terrorisme.\n\n"),
    
    info_style(""), highlight_style("Impact"), info_style(":\n"),
    info_style("    o Une r√©glementation unique pour tous les pays membres.\n"),
    info_style("    o Plus de transparence pour les investisseurs et les entreprises crypto.\n\n"),
    
    info_secondary_style("‚Ä¢ R√©gulation aux √âtats-Unis : SEC (Securities and Exchange Commission)\n\n"),
    
    info_style("  "), highlight_style("R√¥le"), info_style(": La SEC r√©gule les cryptomonnaies consid√©r√©es comme des \"valeurs mobili√®res\" (securities).\n"),
    info_style("  "), highlight_style("Exemples de cas c√©l√®bres"), info_style(":\n"),
    info_style("    - Ripple (XRP) : En 2020, la SEC a accus√© Ripple de vendre des titres non enregistr√©s.\n"),
    info_style("    - Les ICO : Souvent cibl√©es pour non-respect des lois sur les valeurs mobili√®res.\n"),
    info_style("  "), warning_style("Limites"), info_style(":\n"),
    info_style("    o Absence d‚Äôun cadre r√©glementaire clair pour les cryptos.\n"),
    info_style("    o Conflits entre la SEC et d‚Äôautres agences comme la CFTC (Commodity Futures Trading Commission).\n\n"),
    
    info_secondary_style("‚Ä¢ Probl√®mes pos√©s par la confidentialit√©\n\n"),
    
    info_style("  "), highlight_style("Monero (XMR) et Zcash (ZEC)"), info_style(":\n"),
    info_style("    o Ces cryptos ax√©es sur la confidentialit√© rendent les transactions intra√ßables.\n"),
    info_style("    o Avantages : Prot√©ger la vie priv√©e des utilisateurs.\n"),
    info_style("    o Inconv√©nients : Souvent accus√©es de faciliter les activit√©s ill√©gales comme le blanchiment d‚Äôargent.\n"),
    info_style("  "), highlight_style("D√©fis pour les r√©gulateurs"), info_style(":\n"),
    info_style("    o Difficile de surveiller ou d‚Äôidentifier les parties impliqu√©es dans une transaction.\n"),
    info_style("    o Pressions pour interdire ou limiter leur utilisation.\n")
  ),
  
  "6p" = paste0(
    section_title_style("\nChapitre 6 : R√©gulation et s√©curit√©\n"),
    highlight_style("Sous-section (P) : Les risques de s√©curit√© : Fraudes et hacks\n\n"),
    
    info_secondary_style("‚Ä¢ Types d‚Äôattaques :\n\n"),
    
    info_style("1. "), highlight_style("Phishing"), info_style(":\n"),
    info_style(" Attaque visant √† obtenir les cl√©s priv√©es ou les informations sensibles d‚Äôun utilisateur via des e-mails ou des sites frauduleux.\n"),
    info_style(" Exemple : Un faux site imitant un exchange comme Binance pour voler des identifiants.\n\n"),
    
    info_style("2. "), highlight_style("Rug pulls"), info_style(":\n"),
    info_style(" Arnaque o√π les d√©veloppeurs abandonnent un projet apr√®s avoir collect√© des fonds des investisseurs.\n"),
    info_style(" Exemple : Un projet DeFi promettant des rendements √©lev√©s avant de dispara√Ætre.\n\n"),
    
    info_style("3. "), highlight_style("51% attacks"), info_style(":\n"),
    info_style(" Une entit√© contr√¥le plus de 50% du r√©seau blockchain, ce qui lui permet de manipuler les transactions.\n"),
    info_style(" Exemple : Certaines blockchains √† faible capitalisation sont vuln√©rables.\n\n"),
    
    info_style("4. "), highlight_style("Malwares"), info_style(":\n"),
    info_style(" Logiciels malveillants visant √† voler les cryptos ou √† miner sans autorisation (cryptojacking).\n\n"),
    
    info_secondary_style("‚Ä¢ Bonnes pratiques pour s√©curiser ses fonds :\n\n"),
    
    info_style("1. "), highlight_style("Utiliser des wallets mat√©riels"), info_style(":\n"),
    info_style("Stockage hors ligne pour √©viter les risques de piratage.\n"),
    info_style(" *Exemples : Ledger, Trezor.\n\n"),
    
    info_style("2. "), highlight_style("Activer la double authentification (2FA)"), info_style(":\n"),
    info_style(" Pour renforcer la s√©curit√© des comptes sur les exchanges.\n\n"),
    
    info_style("3. "), highlight_style("Ne jamais partager sa cl√© priv√©e"), info_style(":\n"),
    info_style(" Une cl√© priv√©e compromise entra√Æne une perte totale des fonds.\n\n"),
    
    info_style("4. "), highlight_style("V√©rifier les adresses de transaction"), info_style(":\n"),
    info_style(" Toujours v√©rifier que l‚Äôadresse du destinataire est correcte avant d‚Äôenvoyer des fonds.\n\n"),
    
    info_style("5. "), highlight_style("Mettre √† jour r√©guli√®rement ses logiciels"), info_style(":\n"),
    info_style(" Les wallets et exchanges peuvent publier des mises √† jour pour corriger des failles de s√©curit√©.\n\n"),
    
    info_style("6. "), highlight_style("√âviter les r√©seaux Wi-Fi publics"), info_style(":\n"),
    info_style(" Les connexions non s√©curis√©es sont vuln√©rables aux interceptions.\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir\n\n"),
    
    info_style("  1. "), highlight_style("R√©gulation"), info_style(":\n"),
    info_style("    o MiCA en Europe apporte un cadre clair et harmonis√© pour les cryptos.\n"),
    info_style("    o Aux √âtats-Unis, la SEC joue un r√¥le central, mais le cadre reste fragment√©.\n"),
    info_style("    o Les cryptos ax√©es sur la confidentialit√© posent des d√©fis pour la conformit√©.\n\n"),
    
    info_style("  2. "), highlight_style("S√©curit√©"), info_style(":\n"),
    info_style("    o Les fraudes et hacks (phishing, rug pulls) sont des risques majeurs.\n"),
    info_style("    o Les bonnes pratiques comme l‚Äôutilisation de wallets mat√©riels et la 2FA sont essentielles pour prot√©ger ses fonds.\n")
  ),
  
  "7q" = paste0(
    section_title_style("\nChapitre 7 : Applications et innovations\n"),
    highlight_style("Sous-section (Q) : La finance d√©centralis√©e (DeFi)\n\n"),
    
    info_secondary_style("‚Ä¢ Qu‚Äôest-ce que la DeFi ?\n\n"),
    
    highlight_style("D√©finition"), info_style(": La finance d√©centralis√©e (DeFi) d√©signe un ensemble de services financiers accessibles via des blockchains, sans interm√©diaires comme les banques ou institutions financi√®res.\n\n"),
    
    highlight_style("Principe"), info_style(":\n"),
    info_style("    o Bas√©e sur des smart contracts, qui automatisent les transactions et les contrats sans intervention humaine.\n"),
    info_style("    o Accessible √† tous, il suffit d‚Äôun portefeuille crypto.\n\n"),
    
    info_secondary_style("‚Ä¢ Les smart contracts :\n\n"),
    
    highlight_style("D√©finition"), info_style(": Programmes autonomes qui s'ex√©cutent automatiquement lorsque des conditions pr√©d√©finies sont remplies.\n\n"),
    
    highlight_style("Exemple"), info_style(":\n"),
    info_style("    o Si une personne envoie 1 ETH √† un smart contract, celui-ci peut automatiquement envoyer un NFT en retour.\n"),
    highlight_style("Avantages"), info_style(":\n"),
    info_style("    o Transparence, immutabilit√©, r√©duction des frais, et rapidit√© des transactions.\n\n"),
    
    info_secondary_style("‚Ä¢ Exemples de projets DeFi :\n\n"),
    
    info_style("1. "), highlight_style("Uniswap"), info_style(":\n"),
    info_style(" Un exchange d√©centralis√© (DEX) qui permet aux utilisateurs d‚Äô√©changer des cryptomonnaies directement entre eux sans interm√©diaire.\n"),
    info_style(" Fonctionne sur le principe des pools de liquidit√©.\n\n"),
    
    info_style("2. "), highlight_style("Aave"), info_style(":\n"),
    info_style(" Une plateforme de pr√™t d√©centralis√©e o√π les utilisateurs peuvent pr√™ter leurs cryptos pour gagner des int√©r√™ts ou emprunter en fournissant des garanties.\n"),
    info_style(" Fonctionne sans banque, gr√¢ce aux smart contracts.\n")
  ),
  
  "7r" = paste0(
    section_title_style("\nChapitre 7 : Applications et innovations\n"),
    highlight_style("Sous-section (R) : Les cas d‚Äôusage r√©els des cryptos\n\n"),
    
    info_secondary_style("‚Ä¢ Paiements internationaux :\n\n"),
    
    info_style("Les cryptomonnaies permettent des transactions transfrontali√®res rapides et peu co√ªteuses.\n\n"),
    
    highlight_style("Exemples"), info_style(":\n"),
    info_style("  Un transfert de Bitcoin ou USDT peut √™tre effectu√© en quelques minutes, avec des frais bien inf√©rieurs √† ceux des banques.\n"),
    highlight_style("Avantages"), info_style(":\n"),
    info_style("  o Suppression des interm√©diaires (banques, r√©seaux SWIFT).\n"),
    info_style("  o Accessibilit√© m√™me dans les r√©gions sous-bancaris√©es.\n\n"),
    
    info_secondary_style("‚Ä¢ Contrats intelligents (smart contracts) :\n\n"),
    
    info_style("Automatisation des accords entre parties.\n\n"),
    
    highlight_style("Usages"), info_style(":\n"),
    info_style("  o Immobilier : Les smart contracts peuvent automatiser le transfert de propri√©t√© apr√®s un paiement.\n"),
    info_style("  o Assurance : Versement automatique en cas de d√©clenchement d‚Äôun √©v√©nement assur√© (ex : retard de vol).\n\n"),
    
    info_secondary_style("‚Ä¢ Transfert de propri√©t√© :\n\n"),
    
    info_style("Les blockchains permettent d‚Äôenregistrer des titres de propri√©t√© (terrains, maisons, ≈ìuvres d‚Äôart) de mani√®re immuable et transparente.\n"),
    highlight_style("Exemple"), info_style(": La plateforme Propy permet de vendre ou d‚Äôacheter des biens immobiliers en utilisant la blockchain.\n")
  ),
  
  "7s" = paste0(
    section_title_style("\nChapitre 7 : Applications et innovations\n"),
    highlight_style("Sous-section (S) : L‚Äôimpact environnemental\n\n"),
    
    info_secondary_style("‚Ä¢ Consommation √©nerg√©tique du Bitcoin :\n\n"),
    
    info_style("Bitcoin utilise le m√©canisme de consensus Proof-of-Work (PoW), qui demande une √©norme puissance de calcul.\n\n"),
    
    highlight_style("Cons√©quences environnementales"), info_style(" :\n"),
    info_style("  o Forte consommation d‚Äô√©nergie, souvent g√©n√©r√©e √† partir de combustibles fossiles.\n"),
    info_style("  o Exemple : En 2022, la consommation annuelle du r√©seau Bitcoin a √©t√© compar√©e √† celle de pays comme l‚ÄôArgentine.\n\n"),
    
    info_secondary_style("‚Ä¢ Initiatives pour des blockchains plus √©cologiques :\n\n"),
    
    highlight_style("Ethereum 2.0 (Proof-of-Stake)"), info_style(" :\n"),
    info_style("  o Transition du PoW au PoS, r√©duisant la consommation √©nerg√©tique de 99 %.\n"),
    info_style("  o Moins de calculs complexes, donc moins de d√©penses √©nerg√©tiques.\n\n"),
    
    highlight_style("Projets neutres en carbone"), info_style(" :\n"),
    info_style("  o Certaines blockchains (ex : Algorand) s'engagent √† compenser leur empreinte carbone via des initiatives √©cologiques.\n\n"),
    
    highlight_style("Ressources renouvelables pour le minage"), info_style(" :\n"),
    info_style("  o Des fermes de minage commencent √† utiliser l‚Äô√©nergie solaire, √©olienne ou hydraulique pour r√©duire leur impact environnemental.\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir\n\n"),
    
    info_style("  1. "), highlight_style("Consommation √©nerg√©tique"), info_style(" :\n"),
    info_style("  o Bitcoin reste √©nergivore en raison du PoW.\n"),
    info_style("  o Des solutions comme Ethereum 2.0 et les blockchains neutres en carbone sont des alternatives durables.\n\n"),
    
    info_style("  2. "), highlight_style("Initiatives √©cologiques"), info_style(" :\n"),
    info_style("  o Transition vers des m√©canismes moins √©nergivores comme le PoS.\n"),
    info_style("  o Utilisation accrue des √©nergies renouvelables pour le minage.\n")
  ),
  
  "8t" = paste0(
    section_title_style("\nChapitre 8 : Perspectives et tendances futures\n"),
    highlight_style("Sous-section (T) : Le futur des cryptomonnaies\n\n"),
    
    info_secondary_style("‚Ä¢ Adoption par les institutions et pays :\n\n"),
    
    info_style("1. "), highlight_style("Adoption par les entreprises"), info_style(" :\n"),
    info_style(" Les cryptomonnaies sont de plus en plus adopt√©es par des entreprises comme moyen de paiement et comme r√©serve de valeur.\n"),
    info_style("  - Tesla a annonc√© qu‚Äôelle acceptait le Bitcoin comme mode de paiement pour ses voitures (bien que suspendu par la suite √† cause des pr√©occupations environnementales).\n"),
    info_style("  - PayPal permet d√©sormais aux utilisateurs d'acheter, de vendre et de d√©tenir des cryptos directement sur leur plateforme.\n"),
    info_style("  - Les banques commencent aussi √† proposer des services li√©s aux cryptomonnaies (ex : services de garde de crypto).\n\n"),
    
    info_style("2. "), highlight_style("Adoption par les pays"), info_style(" :\n"),
    info_style(" Plusieurs pays ont pris des mesures pour int√©grer les cryptos dans leur √©conomie.\n"),
    info_style("  - Le Salvador : Premier pays √† adopter le Bitcoin comme monnaie l√©gale en 2021.\n"),
    info_style("  - Le Japon : A reconnu le Bitcoin comme moyen de paiement l√©gitime.\n"),
    info_style("  - La Chine : Bien qu‚Äôayant interdit les ICO et les √©changes de cryptomonnaies, la Chine travaille sur sa propre cryptomonnaie, le Yuan num√©rique.\n"),
    info_style("  - L'Union Europ√©enne : La mise en place de la MiCA (Markets in Crypto-Assets) vise √† encadrer l‚Äôutilisation des cryptos et offrir une r√©gulation harmonis√©e dans l‚ÄôUE.\n\n"),
    
    info_secondary_style("‚Ä¢ Innovations : Web3, Metaverse, Blockchain interop√©rable :\n\n"),
    
    info_style("  1. "), success_style("Web3"), info_style(" :\n\n"),
    
    highlight_style("D√©finition"), info_style(" : Le Web3 est un concept visant √† d√©centraliser l'internet en utilisant des technologies comme la blockchain, permettant aux utilisateurs de poss√©der et de contr√¥ler leurs donn√©es.\n\n"),
    
    highlight_style("Avantages"), info_style(" :\n"),
    info_style("  o Contr√¥le individuel des donn√©es.\n"),
    info_style("  o Applications d√©centralis√©es (dApps) o√π les utilisateurs n'ont pas besoin d‚Äôinterm√©diaires (banques, r√©seaux sociaux).\n"),
    highlight_style("Projets"), info_style(" :\n"),
    info_style("  o "), highlight_style("Polkadot"), info_style(" : Permet l‚Äôinterop√©rabilit√© entre diff√©rentes blockchains.\n"),
    info_style("  o "), highlight_style("Ethereum 2.0"), info_style(" : Transition vers un mod√®le de consensus Proof-of-Stake (PoS) pour une plus grande scalabilit√©.\n\n"),
    
    info_style("  2. "), success_style("Metaverse"), info_style(" :\n\n"),
    
    highlight_style("D√©finition"), info_style(" : Un espace virtuel en 3D o√π les utilisateurs peuvent interagir entre eux et avec des objets num√©riques. Ce monde virtuel peut inclure des jeux, des interactions sociales, des commerces et des actifs num√©riques (NFTs).\n\n"),
    
    highlight_style("Cryptos dans le Metaverse"), info_style(" :\n"),
    info_style("  o Les cryptomonnaies comme "), highlight_style("Decentraland (MANA)"), info_style(" ou "), highlight_style("Sandbox (SAND)"), info_style(" sont utilis√©es dans des mondes virtuels pour acheter des terrains, des objets, ou m√™me des exp√©riences interactives.\n"),
    highlight_style("Potentialit√©s"), info_style(" :\n"),
    info_style("   o Le Metaverse pourrait r√©volutionner les secteurs du gaming, de l‚Äôimmobilier virtuel, et des √©v√©nements en ligne.\n\n"),
    
    info_style("  3. "), success_style("Blockchain interop√©rable"), info_style(" :\n\n"),
    
    highlight_style("D√©finition"), info_style(" : L'interop√©rabilit√© entre blockchains permet √† diff√©rentes blockchains de communiquer et d‚Äô√©changer des informations et des valeurs sans interm√©diaire.\n\n"),
    
    question_style(".  Pourquoi c'est important ?"), info_style("\n\n"),
    
    info_style("Permet de surmonter les limitations actuelles o√π chaque blockchain fonctionne isol√©ment (ex : Bitcoin, Ethereum, Solana).\n"),
    highlight_style(" *Exemples de projets"), info_style(" :\n"),
    highlight_style("  - Polkadot"), info_style(" : Cr√©e une plateforme multi-cha√Ænes o√π diff√©rentes blockchains peuvent √©changer des donn√©es et des tokens.\n"),
    highlight_style("  - Cosmos"), info_style(" : Permet l'interconnexion de diff√©rentes blockchains via son protocole IBC (Inter-Blockchain Communication).\n\n"),
    
    info_secondary_style("Concepts cl√©s √† retenir\n\n"),
    
    info_style("1. "), highlight_style("Adoption par les institutions"), info_style(" :\n"),
    info_style("    o Les cryptomonnaies sont progressivement adopt√©es par les pays et les entreprises.\n"),
    info_style("    o Le Salvador a ouvert la voie en adoptant le Bitcoin comme monnaie l√©gale.\n"),
    info_style("2. "), highlight_style("Web3 et Metaverse"), info_style(" :\n"),
    info_style("    o Le Web3 d√©centralise Internet et permet un contr√¥le total des donn√©es par les utilisateurs.\n"),
    info_style("    o Le Metaverse offre un environnement virtuel o√π les cryptos jouent un r√¥le cl√© dans l‚Äô√©conomie num√©rique.\n"),
    info_style("3. "), highlight_style("Blockchain interop√©rable"), info_style(" :\n"),
    info_style("    o L‚Äôinterop√©rabilit√© entre blockchains est essentielle pour permettre une communication fluide et sans fronti√®res entre diff√©rents √©cosyst√®mes de cryptos.\n")
  ),
  
  "9u" = paste0(
    section_title_style("\nChapitre 9 : Les risques inh√©rents √† l'investissement en cryptomonnaies\n"),
    highlight_style("Sous-section (U) : Les risques li√©s au march√©\n\n"),
    
    info_secondary_style("1. Volatilit√© extr√™me\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Les cryptomonnaies, comme Bitcoin, Ethereum, et d'autres altcoins, sont connues pour leur forte volatilit√©. Les prix peuvent fluctuer de mani√®re significative en quelques heures ou jours, en r√©ponse √† des nouvelles, des √©v√©nements du march√©, ou m√™me des sentiments des investisseurs.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("- Le prix du Bitcoin a connu des hausses et des baisses de 50 % ou plus sur des p√©riodes relativement courtes.\n"),
    info_style("- Les √©v√©nements comme l'annonce de r√©gulations, de partenariats d‚Äôentreprises, ou de changements dans la politique mon√©taire peuvent entra√Æner des variations massives de prix.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style(" o Diversifier votre portefeuille pour r√©partir le risque.\n"),
    info_style(" o Adopter une strat√©gie d'investissement √† long terme si vous √™tes pr√™t √† supporter des fluctuations √† court terme.\n"),
    info_style(" o Fixer des objectifs clairs et des niveaux de tol√©rance au risque.\n\n"),
    
    info_secondary_style("2. Risques li√©s √† la liquidit√© et √† la manipulation de march√©\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Les cryptomonnaies ont souvent une liquidit√© plus faible que les march√©s traditionnels, ce qui peut entra√Æner des difficult√©s √† vendre ou √† acheter rapidement √† un prix acceptable. De plus, les march√©s crypto peuvent √™tre manipul√©s par des acteurs puissants.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("  - Whales (grands d√©tenteurs de cryptos) peuvent manipuler les prix en effectuant des transactions massives.\n"),
    info_style("  - Les pump and dump (augmentations artificielles du prix suivies de chutes brusques) sont courants dans les altcoins √† faible capitalisation.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style(" o Choisir des cryptos avec une capitalisation boursi√®re plus √©lev√©e pour assurer une meilleure liquidit√©.\n"),
    info_style(" o Utiliser des strat√©gies de trading prudentes et fixer des limites pour √©viter d‚Äô√™tre victime de manipulations de march√©.\n")
  ),
  
  "9v" = paste0(
    section_title_style("\nChapitre 9 : Les risques inh√©rents √† l'investissement en cryptomonnaies\n"),
    highlight_style("Sous-section (V): Les risques r√©glementaires et technologiques\n\n"),
    
    info_secondary_style("1. Risques r√©glementaires\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Les cryptomonnaies √©voluent dans un environnement juridique incertain. Les gouvernements du monde entier mettent en place des r√©gulations ou des interdictions concernant les cryptos, ce qui peut affecter leur valeur et leur utilisation.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("- Chine : La Chine a impos√© plusieurs interdictions sur les cryptomonnaies, ce qui a entra√Æn√© des chutes importantes du march√©.\n"),
    info_style("- √âtats-Unis : Bien que la SEC n'ait pas encore d√©fini clairement les cryptos comme des valeurs mobili√®res, les r√©gulations pourraient affecter leur statut juridique et leur valorisation √† l'avenir.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style("  o Suivre de pr√®s les d√©veloppements l√©gislatifs dans votre pays et au niveau mondial.\n"),
    info_style("  o Choisir de diversifier vos investissements entre des actifs num√©riques et des actifs traditionnels pour r√©duire l'impact de r√©gulations impr√©vues.\n\n"),
    
    info_secondary_style("2. Risques technologiques\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Les cryptomonnaies sont bas√©es sur des technologies complexes, et des bugs ou des vuln√©rabilit√©s dans le code peuvent entra√Æner des pertes.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("- En 2016, le DAO (Decentralized Autonomous Organization) sur Ethereum a √©t√© pirat√© √† cause d'une vuln√©rabilit√© dans son code, entra√Ænant la perte de 50 millions de dollars en Ether.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style(" o Investir dans des projets solides, ayant des audits r√©guliers de s√©curit√© effectu√©s par des experts externes.\n"),
    info_style(" o Assurez-vous que les plateformes que vous utilisez suivent les meilleures pratiques de s√©curit√©.\n")
  ),
  
  "9w" = paste0(
    section_title_style("\nChapitre 9 : Les risques inh√©rents √† l'investissement en cryptomonnaies\n"),
    highlight_style("Sous-section (W) : Les risques li√©s √† la s√©curit√© et aux arnaques\n\n"),
    
    info_secondary_style("1. S√©curit√© et risques de piratage\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Les cryptomonnaies sont stock√©es dans des portefeuilles num√©riques. Cependant, ces portefeuilles peuvent √™tre vuln√©rables aux attaques informatiques. Les √©changes centralis√©s peuvent √©galement √™tre pirat√©s, entra√Ænant la perte de fonds des utilisateurs.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("- En 2014, le Mt. Gox exchange a √©t√© pirat√©, entra√Ænant la perte de 850 000 BTC, qui √† l‚Äô√©poque valaient pr√®s de 500 millions de dollars.\n"),
    info_style("- De nombreux incidents de piratage ont cibl√© des plateformes comme Binance et Coinbase.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style(" o Utiliser des wallets mat√©riels (Ledger, Trezor) pour stocker vos cryptos √† long terme.\n"),
    info_style(" o Activer la double authentification (2FA) sur tous vos comptes d'√©change et wallets.\n"),
    info_style(" o Ne jamais partager votre cl√© priv√©e et garder vos informations sensibles hors ligne.\n\n"),
    
    info_secondary_style("2. Risques li√©s aux arnaques et fraudes\n\n"),
    
    highlight_style("D√©finition"), info_style(" :\n"),
    info_style("Le secteur des cryptomonnaies est encore relativement nouveau et attractif, ce qui en fait une cible id√©ale pour les arnaqueurs. Les projets douteux, les ICOs frauduleuses, et les escroqueries sont fr√©quents.\n\n"),
    
    highlight_style("Exemples"), info_style(" :\n"),
    info_style("- Les rug pulls (lorsqu‚Äôun projet crypto collecte des fonds puis dispara√Æt) sont devenus une arnaque commune dans l‚Äôespace DeFi.\n"),
    info_style("- Des plateformes comme BitPetite et PlusToken ont √©t√© identifi√©es comme des syst√®mes de Ponzi, escroquant des millions de dollars.\n\n"),
    
    question_style("‚Ä¢ Comment g√©rer ce risque ?\n\n"),
    
    info_style(" o Toujours faire une due diligence sur un projet avant d'investir (recherche sur l'√©quipe, la feuille de route, les partenaires).\n"),
    info_style(" o √âviter les projets promettant des rendements trop √©lev√©s ou trop rapides.\n"),
    info_style(" o Utiliser des plateformes reconnues et r√©glement√©es.\n\n"),
    
    info_secondary_style("1. Diversification\n"),
    info_style(" Ne mettez pas tous vos fonds dans une seule cryptomonnaie. Diversifiez entre diff√©rentes cryptos et types d‚Äôactifs (stocks, obligations).\n\n"),
    
    info_secondary_style("2. Approche √† long terme\n"),
    info_style(" Si vous √™tes d√©butant, une strat√©gie √† long terme (acheter et conserver) vous permettra de mieux g√©rer les fluctuations de prix √† court terme.\n\n"),
    
    info_secondary_style("3. √âducation continue\n"),
    info_style(" Suivez l'actualit√© des cryptomonnaies et des r√©gulations, et continuez √† apprendre en lisant des livres, des articles, en suivant des podcasts et des vid√©os.\n\n"),
    
    info_secondary_style("4. Suivre les conseils d‚Äôexperts\n"),
    info_style(" √âvitez les conseils trop enthousiastes venant de sources non fiables. Recherchez des analyses approfondies et des experts r√©put√©s.\n\n"),
    
    section_title_style("\nConcepts cl√©s √† retenir\n\n"),
    
    info_secondary_style("1. Volatilit√©\n"),
    info_style(" Les cryptomonnaies sont extr√™mement volatiles, et les fluctuations des prix peuvent entra√Æner des gains comme des pertes significatives.\n"),
    info_secondary_style("2. S√©curit√©\n"),
    info_style(" Prot√©gez vos fonds en utilisant des wallets s√©curis√©s, en activant la 2FA et en √©vitant les arnaques.\n"),
    info_secondary_style("3. R√©gulations et √©volutions\n"),
    info_style(" Le cadre r√©glementaire √©volue rapidement, ce qui peut avoir un impact majeur sur l'investissement en cryptomonnaies.\n")
    
  ),
  
  
  "10x" = paste0(
    section_title_style("\nChapitre 10 : Aller plus loin dans l‚Äôunivers des cryptomonnaies\n"),
    highlight_style("Sous-section (X) : Informations suppl√©mentaires pour les passionn√©s\n\n"),
    
    info_secondary_style("Si vous avez acquis une bonne compr√©hension des bases des cryptomonnaies et souhaitez approfondir vos connaissances, voici quelques sujets avanc√©s qui vous permettront d'aller plus loin dans le monde des cryptos.\n\n"),
    
    info_secondary_style("1. La gouvernance des blockchains\n"),
    
    highlight_style("Exemples"), info_style(" : MakerDAO, Compound.\n\n"),
    
    info_secondary_style("2. Les oracles et leur r√¥le dans les smart contracts\n"),
    
    highlight_style("Exemples"), info_style(" : Chainlink est un exemple d'oracle d√©centralis√© qui permet l'int√©gration de donn√©es du monde r√©el dans les smart contracts.\n\n"),
    
    info_secondary_style("3. La scalabilit√© des blockchains\n"),
    
    highlight_style("Exemples"), info_style(" : Des solutions comme Sharding (Ethereum 2.0) et des Layer 2 solutions (comme Optimistic Rollups ou Lightning Network) sont des approches pour am√©liorer la vitesse et la capacit√© des r√©seaux sans sacrifier la s√©curit√©.\n\n"),
    
    info_secondary_style("4. Les stablecoins algorithmiques\n"),
    
    highlight_style("Exemples"), info_style(" : Contrairement aux stablecoins classiques adoss√©s √† des actifs physiques (USD, euro), les stablecoins algorithmiques comme Ampleforth (AMPL) sont r√©gul√©s par un algorithme qui ajuste l‚Äôoffre pour maintenir un prix stable. C‚Äôest un domaine qui m√©rite d‚Äô√™tre explor√© pour comprendre les risques et les avantages.\n\n"),
    
    info_secondary_style("5. Les consensus alternatifs √† PoW et PoS\n"),
    
    highlight_style("Exemples"), info_style(" : D‚Äôautres m√©canismes de consensus √©mergent, tels que Proof-of-Authority (PoA) ou Proof-of-Elapsed Time (PoET). Ces m√©canismes visent √† am√©liorer l'efficacit√© √©nerg√©tique et la d√©centralisation, tout en offrant une s√©curit√© accrue.\n\n")
  ),
  
  "10y" = paste0(
    section_title_style("\nChapitre 10 : Aller plus loin dans l‚Äôunivers des cryptomonnaies\n"),
    highlight_style("Sous-section (Y) : Conseils pour aller plus loin : O√π se renseigner et quels outils utiliser ?\n\n"),
    
    info_secondary_style("1. Sites Web et forums :\n\n"),
    info_style("  o "), highlight_style("CoinGecko et CoinMarketCap"), info_style(": Suivez l‚Äô√©volution des prix, des market caps, et des volumes de trading pour toutes les cryptomonnaies.\n"),
    info_style("  o "), highlight_style("Reddit"), info_style(": Des communaut√©s actives comme r/cryptocurrency, r/bitcoin et r/ethereum permettent de poser des questions, d‚Äô√©changer sur les tendances et d‚Äôapprendre des experts.\n"),
    info_style("  o "), highlight_style("Messari"), info_style(": Une plateforme qui fournit des analyses approfondies, des donn√©es et des recherches sur les cryptomonnaies.\n"),
    info_style("  o "), highlight_style("Stack Exchange (Bitcoin StackExchange)"), info_style(": Une plateforme technique o√π poser des questions pr√©cises et trouver des solutions aux probl√®mes techniques li√©s aux cryptos.\n"),
    info_style("  o "), highlight_style("Academy Binance"), info_style(": Une ressource √©ducative compl√®te offerte par Binance, id√©ale pour les d√©butants et les investisseurs avanc√©s.\n"),
    info_style("  o "), highlight_style("Glassnode"), info_style(": Un outil d‚Äôanalyse en cha√Æne offrant des donn√©es et graphiques d√©taill√©s sur l‚Äô√©cosyst√®me crypto.\n"),
    info_style("  o "), highlight_style("Decrypt"), info_style(": Actualit√©s et articles √©ducatifs sur la blockchain et les cryptomonnaies.\n"),
    info_style("  o "), highlight_style("The Block"), info_style(": Un site de r√©f√©rence pour les recherches et les analyses dans le domaine crypto.\n"),
    info_style("  o "), highlight_style("Ledger Academy"), info_style(": Apprenez √† s√©curiser vos cryptos avec des guides d√©taill√©s et des tutoriels.\n"),
    info_style("  o "), highlight_style("Cointelegraph"), info_style(": Une source incontournable pour les derni√®res actualit√©s et analyses de march√©.\n\n"),
    
    info_secondary_style("2. Livres √† lire :\n\n"),
    info_style("  o "), highlight_style("\"Mastering Bitcoin\" par Andreas M. Antonopoulos"), info_style(": Une introduction d√©taill√©e et technique √† Bitcoin et √† son fonctionnement.\n"),
    info_style("  o "), highlight_style("\"The Bitcoin Standard\" par Saifedean Ammous"), info_style(": Une exploration des implications √©conomiques du Bitcoin comme une alternative aux monnaies fiat.\n"),
    info_style("  o "), highlight_style("\"Digital Gold\" par Nathaniel Popper"), info_style(": L‚Äôhistoire fascinante de la cr√©ation du Bitcoin et son impact global.\n"),
    info_style("  o "), highlight_style("\"Blockchain Revolution\" par Don Tapscott et Alex Tapscott"), info_style(": Une analyse des applications potentielles de la blockchain dans divers secteurs.\n"),
    info_style("  o "), highlight_style("\"Cryptoassets: The Innovative Investor's Guide\" par Chris Burniske et Jack Tatar"), info_style(": Une exploration des cryptos en tant que classe d'actifs et comment y investir.\n"),
    info_style("  o "), highlight_style("\"Bitcoin Billionaires\" par Ben Mezrich"), info_style(": Une histoire captivante sur les premiers investisseurs de Bitcoin et leur succ√®s.\n"),
    info_style("  o "), highlight_style("\"The Basics of Bitcoins and Blockchains\" par Antony Lewis"), info_style(": Un livre pratique et accessible sur le fonctionnement des cryptos et de la blockchain.\n"),
    info_style("  o "), highlight_style("\"Out of the Ether\" par Matthew Leising"), info_style(": Une plong√©e dans l‚Äôhistoire d‚ÄôEthereum et ses fondateurs.\n"),
    info_style("  o "), highlight_style("\"DeFi and the Future of Finance\" par Campbell R. Harvey et al."), info_style(": Une exploration approfondie de la finance d√©centralis√©e et de ses implications pour l'avenir de la finance.\n"),
    info_style("  o "), highlight_style("\"The Infinite Machine\" par Camila Russo"), info_style(": Une histoire fascinante de la cr√©ation et de l'impact d'Ethereum.\n\n"),
    
    info_secondary_style("3. Cours en ligne et certifications :\n\n"),
    info_style("  o "), highlight_style("Coursera"), info_style(": Cours populaires comme \"Bitcoin and Cryptocurrency Technologies\" de l‚ÄôUniversit√© de Princeton.\n"),
    info_style("  o "), highlight_style("edX"), info_style(": Propose des cours li√©s √† la blockchain, aux cryptomonnaies, et √† leur impact √©conomique.\n"),
    info_style("  o "), highlight_style("CryptoZombies"), info_style(": Une plateforme interactive pour apprendre √† programmer des smart contracts en Solidity.\n"),
    info_style("  o "), highlight_style("Khan Academy"), info_style(": Des le√ßons sur la cryptographie et les bases des monnaies num√©riques.\n"),
    info_style("  o "), highlight_style("MIT OpenCourseWare"), info_style(": Des cours gratuits sur la blockchain et les cryptos propos√©s par le MIT.\n\n"),
    
    info_secondary_style("4. Podcasts et vid√©os :\n\n"),
    info_style("  o "), highlight_style("Unchained"), info_style(": Un podcast anim√© par Laura Shin qui explore les tendances, les innovations et les acteurs du monde des cryptos.\n"),
    info_style("  o "), highlight_style("The Pomp Podcast"), info_style(": Anthony Pompliano interviewe des experts en crypto et finance pour partager des points de vue vari√©s.\n"),
    info_style("  o "), highlight_style("YouTube (Andreas M. Antonopoulos)"), info_style(": Des conf√©rences et tutoriels couvrant des sujets avanc√©s sur Bitcoin et la blockchain.\n"),
    info_style("  o "), highlight_style("The Bad Crypto Podcast"), info_style(": Un podcast accessible pour les d√©butants et les passionn√©s.\n\n")
  ),
  
  
  "10z" = paste0(
    section_title_style("\nChapitre 10 : Aller plus loin dans l‚Äôunivers des cryptomonnaies\n"),
    highlight_style("Sous-section (Z) : Conclusion : Prenez l'initiative et continuez √† apprendre\n\n"),
    
    info_style("Le monde des cryptomonnaies repr√©sente bien plus qu‚Äôune simple r√©volution technologique. Il s‚Äôagit d‚Äôun mouvement qui red√©finit notre compr√©hension de l‚Äôargent, de la finance et m√™me de la gouvernance. √Ä travers ses principes fondamentaux de d√©centralisation, de transparence et d'accessibilit√©, la blockchain a ouvert la voie √† de nouvelles formes d‚Äôinteractions √©conomiques et sociales. Que ce soit √† travers Bitcoin, souvent surnomm√© l‚Äô\"or num√©rique\", ou des plateformes comme Ethereum, qui permettent la cr√©ation de smart contracts et d‚Äôapplications d√©centralis√©es, chaque projet contribue √† r√©inventer l‚Äô√©cosyst√®me financier global.\n\n"),
    
    info_style("Pour les investisseurs, l‚Äôunivers des cryptomonnaies offre une myriade d‚Äôopportunit√©s, mais aussi de d√©fis. La volatilit√© des prix, bien que parfois d√©stabilisante, est aussi ce qui attire des traders avides de rendements rapides. Cependant, cette volatilit√© n√©cessite une approche mesur√©e et une compr√©hension approfondie des dynamiques du march√©. Investir dans les cryptos ne se limite pas √† acheter un actif et √† esp√©rer qu‚Äôil prenne de la valeur ; cela implique d‚Äôanalyser les projets sous-jacents, d‚Äô√©valuer leur utilit√© r√©elle, et de comprendre les risques sp√©cifiques √† cette classe d‚Äôactifs.\n\n"),
    
    info_style("Le d√©veloppement rapide de la finance d√©centralis√©e (DeFi) et des tokens non fongibles (NFT) illustre parfaitement l‚Äôinnovation continue au sein de cet espace. La DeFi permet aux utilisateurs d‚Äôacc√©der √† des services financiers sans interm√©diaires, tels que le pr√™t, l‚Äôemprunt et le trading, tout en offrant des rendements attractifs gr√¢ce au yield farming et au staking. Les NFT, quant √† eux, ont r√©volutionn√© la propri√©t√© num√©rique, permettant de certifier l‚Äôunicit√© et la raret√© d‚Äôun actif sur la blockchain, avec des applications allant de l‚Äôart num√©rique aux jeux vid√©o.\n\n"),
    
    info_style("Cependant, l'adoption massive des cryptomonnaies s'accompagne de nombreux d√©fis. Les pr√©occupations li√©es √† la consommation √©nerg√©tique, en particulier pour les m√©canismes de consensus comme le Proof-of-Work, ont conduit √† des d√©bats sur la durabilit√© environnementale de certaines blockchains. De plus, le cadre r√©glementaire √©volue rapidement, et les gouvernements du monde entier cherchent √† √©quilibrer l‚Äôinnovation avec la protection des consommateurs et la pr√©vention des activit√©s illicites. Pour les investisseurs, ces incertitudes r√©glementaires peuvent repr√©senter un risque, mais elles offrent √©galement une opportunit√© de participer √† une industrie en transformation.\n\n"),
    
    info_style("Pour aller plus loin, il est essentiel d‚Äôadopter une approche proactive et √©ducative. L‚Äôapprentissage continu est la cl√© pour naviguer dans cet univers complexe. Suivre les tendances, lire des analyses approfondies, participer √† des discussions sur des forums ou des r√©seaux sociaux, et s'impliquer dans des projets open-source sont autant de moyens d‚Äôapprofondir vos connaissances et de contribuer √† cet √©cosyst√®me. De plus, diversifier vos investissements, utiliser des outils de gestion de portefeuille et s√©curiser vos actifs avec des wallets fiables sont des pratiques essentielles pour minimiser les risques.\n\n"),
    
    info_style("Enfin, il est important de comprendre que les cryptomonnaies ne sont pas seulement une opportunit√© d‚Äôinvestissement, mais aussi un vecteur de changement soci√©tal. Elles red√©finissent les fronti√®res de la finance, d√©mocratisent l‚Äôacc√®s aux services financiers et permettent √† des millions de personnes dans le monde d‚Äôinteragir √©conomiquement sans d√©pendre d‚Äôinstitutions centralis√©es. La blockchain n‚Äôest pas seulement une technologie ; c‚Äôest une philosophie qui repose sur l‚Äôautonomie, la transparence et la collaboration.\n\n"),
    
    info_style("En conclusion, que vous soyez un investisseur aguerri ou un passionn√© curieux, le monde des cryptomonnaies offre une opportunit√© unique d‚Äôapprendre, de grandir et de contribuer √† une r√©volution mondiale. Continuez √† explorer, √† poser des questions et √† innover. L‚Äôavenir est d√©centralis√©, et vous en faites partie. Bon voyage dans cet univers fascinant !\n")
  )
  
)

######################################################
### Navigation dans les chapitres et sous-sections #####
######################################################

navigate_chapter <- function() {
  sommaire <- list(
    "1" = list(title = "Chapitre 1 : Introduction : Les bases des cryptomonnaies", sections = c(
      "a. Qu'est-ce qu'une cryptomonnaie ?",
      "b. Histoire des cryptos : naissance de Bitcoin"
    )),
    "2" = list(title = "Chapitre 2 : Fonctionnement des cryptomonnaies", sections = c(
      "c. La blockchain : Technologie sous-jacente",
      "d. Les transactions en crypto : Cl√©s priv√©es et publiques",
      "e. Proof-of-Work (PoW) vs Proof-of-Stake (PoS)"
    )),
    "3" = list(title = "Chapitre 3 : Les cryptos majeures et leurs usages", sections = c(
      "f. Les principales cryptomonnaies",
      "g. Les stablecoins",
      "h. Les NFT et leur impact"
    )),
    "4" = list(title = "Chapitre 4 : Acqu√©rir et utiliser des cryptos", sections = c(
      "i. Acheter des cryptomonnaies : Les exchanges",
      "j. Les wallets crypto : types et s√©curit√©",
      "k. Envoyer et recevoir des cryptos"
    )),
    "5" = list(title = "Chapitre 5 : Investissement et trading", sections = c(
      "l. Comment √©valuer une cryptomonnaie ?",
      "m. Risques et volatilit√©",
      "n. Les bulles et cycles de march√©"
    )),
    "6" = list(title = "Chapitre 6 : R√©gulation et s√©curit√©", sections = c(
      "o. L'environnement r√©glementaire mondial",
      "p. Les risques de s√©curit√© : Fraudes et hacks"
    )),
    "7" = list(title = "Chapitre 7 : Applications et innovations", sections = c(
      "q. La finance d√©centralis√©e (DeFi)",
      "r. Les cas d‚Äôusage r√©els des cryptos",
      "s. L‚Äôimpact environnemental"
    )),
    "8" = list(title = "Chapitre 8 : Perspectives et tendances futures", sections = c(
      "t. Le futur des cryptomonnaies"
    )),
    "9" = list(title = "Chapitre 9 : Les risques inh√©rents √† l'investissement en cryptomonnaies", sections = c(
      "u. Les risques li√©s au march√©",
      "v. Les risques r√©glementaires et technologiques",
      "w. Les risques li√©s √† la s√©curit√© et aux arnaques"
    )),
    "10" = list(title = "Chapitre 10 : Aller plus loin dans l‚Äôunivers des cryptomonnaies", sections = c(
      "x. Informations suppl√©mentaires sur les passionn√©s",
      "y. Conseils pour aller plus loin : o√π se renseigner, quels outils utiliser ?",
      "z. Conclusion"
    ))
  )
  
  repeat {
    user_input <- readline(question_style("Choisissez le chapitre qui vous int√©resse (1-10) ou une sous-section sp√©cifique (a-z) : "))
    
    if (user_input %in% names(sommaire)) {
      chapitre <- sommaire[[user_input]]
      cat(success_style("\nVous avez choisi de lire le : "), chapitre$title, "\n")
      
      for (i in seq_along(chapitre$sections)) {
        section_name <- chapitre$sections[i]
        section_letter <- substr(section_name, 1, 1)
        detail_key <- paste0(user_input, section_letter)
        
        if (detail_key %in% names(details)) {
          cat("\n", details[[detail_key]], "\n")
        }
      }
      readline(success_style("\nAppuyez sur Entr√©e lorsque vous avez fini votre lecture : "))
    } else if (user_input %in% letters) {
      found <- FALSE
      for (chapitre_id in names(sommaire)) {
        chapitre <- sommaire[[chapitre_id]]
        section_index <- which(substr(chapitre$sections, 1, 1) == user_input)
        
        if (length(section_index) > 0) {
          detail_key <- paste0(chapitre_id, user_input)
          cat(success_style("\nVous lisez la section : "), chapitre$sections[section_index], "\n")
          if (detail_key %in% names(details)) {
            cat("\n", details[[detail_key]], "\n")
          }
          readline(success_style("\nAppuyez sur Entr√©e lorsque vous avez fini votre lecture : "))
          found <- TRUE
          break
        }
      }
      if (!found) {
        cat(error_style("\nLa section que vous avez choisie n'existe pas.\n"))
      }
    } else {
      cat(error_style("\nEntr√©e invalide. Veuillez choisir une lettre de section ou un num√©ro de chapitre valide.\n"))
    }
    
    repeat {
      choice <- readline(success_style(paste0(
        "\nTr√®s bien, maintenant que vous avez fini votre lecture, que souhaitez-vous faire ?\n",
        highlight_style("1. Revenir au sommaire et poursuivre votre lecture\n"),
        highlight_style("2. Revenir au menu principal\n"),
        "Votre choix : ")))
      
      while (!(choice %in% c("1", "2"))) {
        cat(error_style("\nChoix invalide. Veuillez entrer 1 ou 2.\n"))
        choice <- readline(success_style(paste0(
          "\nTr√®s bien, maintenant que vous avez fini votre lecture, que souhaitez-vous faire ?\n",
          highlight_style("1. Revenir au sommaire pour poursuivre votre lecture\n"),
          highlight_style("2. Revenir au menu principal\n"),
          "Votre choix : ")))
      }
      
      if (choice == "1") {
        show_sommaire()  # Affiche le sommaire
        break
      } else if (choice == "2") {
        cat(success_style("\nRetour au menu principal...\n"))
        return("menu_principal")
      } 
    }
  }
}

#######################################################
####### Fonction Crypto Academy ##############
##################################################

crypto_academy <- function() {
  cat(section_title_style("\nCRYPTO ACADEMY - CRYPTOWISE COPILOTE\n\n"))
  welcome_message()
  
  ready <- readline(question_style("√ätes-vous pr√™t √† parcourir notre outil p√©dagogique ? (oui/non) : "))
  while (!(tolower(ready) %in% c("oui", "non"))) {
    cat(error_style("\nR√©ponse invalide, veuillez r√©pondre par 'oui' ou 'non'.\n"))
    ready <- readline(question_style("√ätes-vous pr√™t √† parcourir notre outil p√©dagogique ? (oui/non) : "))
  }
  
  if (tolower(ready) == "oui") {
    show_sommaire()
    result <- navigate_chapter()
    if (result == "menu_principal") {
      return("menu_principal")
    }
  } else {
    cat(warning_style("Oh nooooon ! Dommage, revenez quand vous voudrez. La connaissance est une lumi√®re dans l'obscurit√©, toujours pr√™te √† √©clairer ceux qui la recherchent. Revenez quand vous serez pr√™t, elle vous attendra avec patience.\n"))
    return()
  }
}


#######################################################
######### Fonction affichage Menu #############
#######################################################

afficher_options <- function(options, profil_recap, user_index, user_info) {
  repeat {
    cat("\nOptions disponibles :\n")
    for (i in seq_along(options)) {
      # Appliquer des styles sp√©cifiques en fonction des options
      if (options[i] == "Quitter") {
        cat(paste0(i, ". ", error_style(options[i]), "\n"))
      } else if (options[i] == "Tester vos connaissances") {
        cat(paste0(i, ". ", question_style(options[i]), "\n"))
      } else if (options[i] == "Naviguer sur Crypto Academy") {
        cat(paste0(i, ". ", highlight_style(options[i]), "\n"))
      } else if (endsWith(options[i], "(PRO)")) {
        cat(paste0(i, ". ", gsub("\\(PRO\\)", pro_style("(PRO)"), options[i]), "\n"))
      } else {
        cat(paste0(i, ". ", info_secondary_style(options[i]), "\n"))
      }
    }
    
    choix <- readline("Veuillez choisir une option (par num√©ro) : ")
    choix <- tolower(choix)
    
    # Gestion des cheat codes
    if (choix == "musk") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 18)
      user_info$animal_score <- 18  # Mise √† jour de user_info
      return("musk")
    } else if (choix == "zemmour") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 3)
      user_info$animal_score <- 3  # Mise √† jour de user_info
      return("zemmour")
    } else if (choix == "bayrou") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 10)
      user_info$animal_score <- 10  # Mise √† jour de user_info
      return("bayrou")
    }
    
    # V√©rification des choix num√©riques
    if (!is.na(as.numeric(choix)) && as.numeric(choix) %in% seq_along(options)) {
      return(options[as.numeric(choix)])
    } else {
      cat(warning_style("Choix invalide, veuillez r√©essayer.\n"))
    }
  }
}

#######################################################
######### MENU PRINCIPAL #############
#######################################################


menu_principal <- function(user_info, profil_recap, user_index) {
  repeat {
    
    # Affichage des options du menu principal
    cat(success_style("\n========== Menu Principal ==========\n"))
    options <- c(
      "Naviguer sur Crypto Academy",
      "Tester vos connaissances",
      "P√©pitesHunter (PRO)",
      "CryptoNews (PRO)",
      "MarketScope (PRO)",
      "Quitter"
    )
    
    choix <- afficher_options(options, profil_recap, user_index, user_info)
    
    # Activation des cheat codes
    if (choix == "musk") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 18)  # Mise √† jour dans profil_recap
      user_info$animal_score <- 18  # Mise √† jour locale dans user_info
      user_info$version_debloquee <- "CryptoWise Pro (Cheatcode)"
      cat(success_style("\n‚ú® Comme le roi des cryptotechs, tu as d√©bloqu√© toutes les fonctionnalit√©s PRO ! üöÄ\n"))
      next
    } else if (choix == "zemmour") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 3)  # Mise √† jour dans profil_recap
      user_info$animal_score <- 3  # Mise √† jour locale dans user_info
      user_info$version_debloquee <- "CryptoWise Lite (Cheatcode)"
      cat(error_style("\nüíÄ Vous venez d‚Äôinvoquer Gargamelle... comme dans une mauvaise potion, votre score animal est r√©duit et votre acc√®s PRO interdit ! üò¢\n"))
      next
    } else if (choix == "bayrou") {
      profil_recap <- mettre_a_jour_profil(profil_recap, user_index, 10)  # Mise √† jour dans profil_recap
      user_info$animal_score <- 10  # Mise √† jour locale dans user_info
      user_info$version_debloquee <- "CryptoWise Interm√©diaire (Cheatcode)"
      cat(success_style("\n‚ú®Baryrou style : ous √™tes coinc√© au centre, avec un score de 10. Ni chaud ni froid, ni PRO ni Lite‚Ä¶ Un vrai ma√Ætre de l‚Äôind√©cision.\n"))
      next
    }
    
    # Gestion des choix
    if (choix == "Naviguer sur Crypto Academy") {
      cat(success_style("\nChargement de Crypto Academy...\n"))
      result <- crypto_academy()
      
    } else if (choix == "Tester vos connaissances") {
      cat(success_style("\nChargement du test de connaissances...\n"))
      note <- lancer_test_crypto(crypto_questions)
      
      if (user_info$animal_score < 8) {
        if (note == 10) {
          cat(success_style("\n Extraordinaiiiires ! Vous avez accompli l'impossible, nous vous d√©bloquons donc l'acc√®s √† notre version PRO ! üöÄ üöÄ\n"))
          profil_recap <- mettre_a_jour_profil(profil_recap, user_index, user_info$animal_score + 10)
          user_info$animal_score <- user_info$animal_score + 10
          user_info$version_debloquee <- "CryptoWise Pro "
        } else {
          cat(error_style("\n Le chemin vers la ma√Ætrise est parsem√© de d√©fis, mais vous √™tes sur la bonne voie ! üí™ !\n"))
        }
      } else if (user_info$animal_score >= 8 && user_info$animal_score < 13) {
        if (note >= 7) {
          cat(success_style("\nF√©licitations gr√¢ce √† vos efforts ! Vous venez de d√©bloqu√© la version PRO de CryptoWise. üöÄ\n"))
          profil_recap <- mettre_a_jour_profil(profil_recap, user_index, user_info$animal_score + 5)
          user_info$animal_score <- user_info$animal_score + 5
          user_info$version_debloquee <- "CryptoWise Pro "
        } else {
          cat(error_style("\nDommage, vous n'avez pas atteint le seuil requis. Chaque pas compte dans l'apprentissage. Replongez dans les connaissances et revenez plus fort !\n"))
        }
      } else {
        cat(info_style("\nVous √™tes d√©j√† dans la version PRO. Ce test est juste un entra√Ænement pour vous.\n"))
      }
      next
      
    } else if (choix == "P√©pitesHunter (PRO)") {
      if (user_info$animal_score >= 13) {
        cat(success_style("\nChargement de P√©pitesHunter...\n"))
        pepite_hunter() # Appel √† la fonction `pepite`
      } else {
        cat(error_style("\nVous n'avez pas encore d√©bloqu√© les fonctionnalit√©s PRO.\n"))
        cat(info_secondary_style("Pour les d√©bloquer, accumulez un score suffisant gr√¢ce √† d'autres fonctionnalit√©s.\n"))
      }
      
    } else if (choix == "CryptoNews (PRO)") {
      if (user_info$animal_score >= 13) {
        cat(success_style("\nChargement de CryptoNews...\n"))
        cryptonews() # Pour lancer l'application
      } else {
        cat(error_style("\nVous n'avez pas encore d√©bloqu√© les fonctionnalit√©s PRO.\n"))
        cat(info_secondary_style("Accumulez plus de points pour d√©bloquer cette option.\n"))
      }
      
    } else if (choix == "MarketScope (PRO)") {
      if (user_info$animal_score >= 13) {
        cat(success_style("\nChargement de MarketScope...\n"))
        market_scope() # Pour lancer l'application
      } else {
        cat(error_style("\nVous n'avez pas encore d√©bloqu√© les fonctionnalit√©s PRO.\n"))
        cat(info_secondary_style("Accumulez plus de points pour d√©bloquer cette option.\n"))
      }
      
    } else if (choix == "Quitter") {
      cat(success_style("Merci d'avoir utilis√© CryptoWise Copilote. √Ä bient√¥t !\n"))
      break
    } else if (endsWith(choix, "(PRO)")) {
      if (user_info$animal_score >= 13) {
        cat(success_style("\nCette fonctionnalit√© est encore en cours de construction. Revenez bient√¥t pour la d√©couvrir ! üöÄ\n"))
      } else if (user_info$animal_score >= 8) {
        cat(error_style("\nVous n'avez pas encore d√©bloqu√© les fonctionnalit√©s PRO.\n"))
        cat(info_secondary_style("Pour les d√©bloquer, R√©ussissez un 'Test de connaissance' (Option 2) \n"))
      } else {
        cat(error_style("\nVous n'avez pas acc√®s aux fonctionnalit√©s PRO.\n"))
        cat(info_secondary_style("Explorez les ressources disponibles pour progresser. L'entra√Ænement est la cl√© ! üí°\n"))
      }
    } else {
      cat(info_style("Cette fonctionnalit√© sera bient√¥t disponible.\n"))
    }
  }
}



#############################################################################################
start_app3 <- function() {
  # Boucle sur chaque utilisateur
  for (i in 1:nrow(profil_recap)) {
    # Extraire les informations de l'utilisateur courant
    user_info <- list(
      prenom = profil_recap$prenom[i],
      animal_score = profil_recap$animal_score[i],
      version_debloquee = profil_recap$version_debloquee[i]
    )
    
    # Message de bienvenue affich√© une seule fois par utilisateur
    cat(section_title_style("Bienvenue dans CryptoWise Copilote ! üöÄ\n"))
    cat(success_style("\n===========================================================\n"))
    cat(section_title_style("Voici un r√©capitulatif de votre profil :\n"))
    cat(highlight_style(paste0("Bonjour ", user_info$prenom, " !\n")))
    
    # R√©capitulatif du profil avec des valeurs en couleur secondaire
    cat(info_style(paste0("Version actuelle d√©bloqu√©e : ", info_secondary_style(user_info$version_debloquee), "\n")))
    cat(info_style(paste0("- √Çge : ", info_secondary_style(profil_recap$age[i]), "\n")))
    cat(info_style(paste0("- Profil de risque : ", info_secondary_style(profil_recap$profil_risque[i]), "\n")))
    cat(info_style(paste0("- Revenus mensuels : ", info_secondary_style(profil_recap$revenus_mensuels[i]), " ‚Ç¨\n")))
    cat(info_style(paste0("- √âpargne totale : ", info_secondary_style(profil_recap$epargne_totale[i]), " ‚Ç¨\n")))
    cat(info_style(paste0("- Montant maximum d'investissement conseill√© : ", info_secondary_style(profil_recap$montant_max_invest_conseille[i]), " ‚Ç¨\n")))
    cat(info_style(paste0("- Capacit√© d'investissement : ", info_secondary_style(profil_recap$capacite_investissement[i]), "\n")))
    cat(info_style(paste0("- Horizon d'investissement : ", info_secondary_style(profil_recap$horizon_invest[i]), "\n")))
    cat(info_style(paste0("- App√©tit pour le risque : ", info_secondary_style(profil_recap$appetit_risque_categorie[i]), "\n")))
    cat(info_style(paste0("- Niveau de culture financi√®re : ", info_secondary_style(profil_recap$niveau_connaissance[i]), "\n")))
    cat(success_style("\nVotre animal totem :\n"))
    cat(info_style(paste0("- Type : ", info_secondary_style(profil_recap$type_animal[i]), " (Animal Score : ", info_secondary_style(user_info$animal_score), ")\n")))
    cat(info_style(paste0("- Description : ", info_secondary_style(profil_recap$description[i]), "\n")))
    cat(success_style("===========================================================\n"))
    
    # Lancer le menu principal pour l'utilisateur courant
    profil_recap <- menu_principal(user_info, profil_recap, i)
  }
}



####################################################################################################
###
#####                                   
######                                   
#
#
##                                          LANCEMENT DE L'APP FINAL 
#####
###
###
###
####
####
###################################################################################################
##
library(writexl)
library(WriteXLS)
# Lancer l'application et g√©rer le flow
Cryptowise_app <- function() {
  result1 <- start_app1()  # Appel √† la premi√®re fonction
  
  # Si start_app1 renvoie un r√©sultat valide (TRUE), on lance start_app2
  if (!is.null(result1)) {
    result2 <- start_app2()  # Appel √† la deuxi√®me fonction
    
    # Si start_app2 renvoie un r√©sultat valide (TRUE), on lance start_app3
    if (!is.null(result2)) {
      start_app3()  # Appel √† la troisi√®me fonction
    } else {
      cat("Erreur dans start_app2, l'application ne pourra pas continuer.\n")
    }
  } else {
    cat("Erreur dans start_app1, l'application ne pourra pas continuer.\n")
  }
}

# Ex√©cution de l'application
Cryptowise_app()

