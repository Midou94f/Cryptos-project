# Importation des biblioth√®ques n√©cessaires
library(crayon)
library(dplyr)
library(jsonlite)
library(httr)
library(cli)
library(scales)  # Pour le formatage des nombres

# D√©finition des styles
question_style <- blue$bold
info_style <- white$italic
warning_style <- red$bold
success_style <- green$bold
highlight_style <- yellow$bold
info_secondary_style <- cyan$italic
error_style <- red$bold$underline
section_title_style <- magenta$bold$underline

# Fonction pour formater les grands nombres
format_large_number <- function(x) {
  format(x, big.mark = " ", scientific = FALSE)
}

# Fonction pour t√©l√©charger les 250 premi√®res cryptos
get_top_cryptos <- function() {
  url <- "https://api.coingecko.com/api/v3/coins/markets"
  params <- list(
    vs_currency = "usd",
    order = "market_cap_desc",
    per_page = 250,
    page = 1,
    sparkline = FALSE
  )
  
  response <- GET(url, query = params)
  
  if (status_code(response) == 200) {
    data <- fromJSON(content(response, "text", encoding = "UTF-8"))
    cat(success_style("\nDonn√©es des 250 premi√®res cryptos t√©l√©charg√©es avec succ√®s !\n\n"))
    return(data)
  } else {
    cat(error_style("\nErreur lors de la r√©cup√©ration des donn√©es.\n"))
    return(NULL)
  }
}

# Fonction pour t√©l√©charger les donn√©es sociales
get_social_data <- function(id) {
  url <- paste0("https://api.coingecko.com/api/v3/coins/", id)
  response <- GET(url)
  
  if (status_code(response) == 200) {
    data <- fromJSON(content(response, "text", encoding = "UTF-8"))
    return(data)
  } else if (status_code(response) == 429) {
    cat(warning_style("\nLimite atteinte pour ", id, ". Pause de 61 secondes...\n"))
    Sys.sleep(61)
    return(NULL)
  } else {
    cat(error_style(paste0("\nErreur lors de la r√©cup√©ration des donn√©es pour ", id, "\n")))
    return(NULL)
  }
}

# Menu principal
social_main_menu <- function() {
  repeat {
    cat(section_title_style("\n Options - Social Metrics des Cryptos\n\n"))
    cat(question_style("0) Revenir au menu pr√©c√©dent\n"))
    cat("1) Visualiser les socials metrics sociales d'une crypto sp√©cifique\n")
    cat("2) Visualiser les socials metrics du march√© crypto en g√©n√©ral\n")
    
    # Lecture et validation de l'entr√©e utilisateur
    repeat {
      choix <- suppressWarnings(as.integer(readline(question_style("\nVeuillez entrer votre choix (0, 1 ou 2) : "))))
      
      # V√©rification si choix est NA ou hors limites
      if (!is.na(choix) && choix >= 0 && choix <= 2) {
        break
      }
      cat(warning_style("\nChoix invalide. Veuillez entrer 0, 1 ou 2 uniquement.\n"))
    }
    
    if (choix == 0) {
      cat(info_style("\nRetour au menu pr√©c√©dent...\n"))
      break
    } else if (choix == 1) {
      visualiser_crypto_specifique()
    } else if (choix == 2) {
      visualiser_cryptos_generales()
    }
  }
}

# Visualisation d'une crypto sp√©cifique
visualiser_crypto_specifique <- function() {
  cat(section_title_style("\nVisualisation des socials metrics d'une crypto sp√©cifique\n"))
  
  repeat {
    connait_id <- tolower(readline(question_style("Connaissez-vous l'ID de la crypto ? (oui/non) : ")))
    if (connait_id %in% c("oui", "non")) break
    cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
  }
  
  if (connait_id == "oui") {
    repeat {
      id <- readline(question_style("Veuillez entrer l'ID de la crypto : "))
      social_data <- get_social_data(id)
      
      if (!is.null(social_data)) {
        cat(success_style("\nDonn√©es pour ", id, " t√©l√©charg√©es avec succ√®s !\n\n"))
        
        # Cr√©ation d'un tableau format√©
        result_df <- data.frame(
          name = social_data$name,
          symbol = social_data$symbol,
          twitter_followers = format_large_number(social_data$community_data$twitter_followers),
          sentiment_votes_up = paste0(round(social_data$sentiment_votes_up_percentage, 2), "%"),
          sentiment_votes_down = paste0(round(social_data$sentiment_votes_down_percentage, 2), "%")
        )
        
        print(result_df)
        cat("\n")
        
        # Analyse du sentiment
        mood_global <- social_data$sentiment_votes_up_percentage
        cat(section_title_style("Analyse du Sentiment :\n\n"))
        cat("Mood Global : ", highlight_style(paste0(round(mood_global, 2), "%\n\n")))
        
        # Message d'analyse du sentiment
        sentiment_message <- if (mood_global > 70) {
          success_style("Le sentiment est hyper positif - Bull Market en vue ! üöÄ")
        } else if (mood_global > 50) {
          success_style("Le sentiment est globalement positif üìà")
        } else if (mood_global > 30) {
          warning_style("Le sentiment est globalement n√©gatif üìâ")
        } else {
          error_style("Le sentiment est hyper n√©gatif - Bear Market en vue ! üêª")
        }
        
        cat(sentiment_message, "\n\n")
        break
      } else {
        cat(warning_style("\nID invalide ou probl√®me lors de la r√©cup√©ration. Veuillez r√©essayer.\n"))
      }
    }
  } else {
    top_cryptos <- get_top_cryptos()
    if (!is.null(top_cryptos)) {
      display_df <- top_cryptos %>% 
        select(name, id, market_cap) %>%
        head(250) %>%
        mutate(market_cap = paste0(format_large_number(round(market_cap / 1e9, 2)), " Mds $"))
      
      cat(section_title_style("\nListe des 250 plus grandes cryptos :\n\n"))
      print(display_df)
      cat("\n")
      readline(info_style("Veuillez noter l'ID qui vous int√©resse et appuyer sur Entr√©e pour continuer...\n"))
      visualiser_crypto_specifique()
    }
  }
}

# Visualisation des cryptos en g√©n√©ral
visualiser_cryptos_generales <- function() {
  repeat {
    cat(section_title_style("\nVisualisation des sociales metrics des cryptos\n\n"))
    cat(question_style("0) Retour au menu principal\n"))
    cat("1) Visualiser les 4 plus grandes cryptos (", warning_style("Temps d'attente: < 60 secondes"), ")\n")
    cat("2) Visualiser les 8 plus grandes cryptos (", warning_style("temps d'attente estim√© : 2 minutes"), ")\n")
    cat("3) Visualiser les 12 plus grandes cryptos (", warning_style("temps d'attente estim√© : 3 minutes"), ")\n")
    cat("4) Visualiser les 16 plus grandes cryptos (", warning_style("temps d'attente estim√© : 4 minutes"), ")\n")
    cat("5) Choisir un nombre personnalis√© de cryptos (", warning_style("Maximum 50"), ")\n")
    
    # Lecture et validation de l'entr√©e utilisateur
    repeat {
      choix <- suppressWarnings(as.integer(readline(question_style("\nVeuillez entrer votre choix (0-5) : "))))
      
      # V√©rification si choix est NA ou hors limites
      if (!is.na(choix) && choix >= 0 && choix <= 5) {
        break
      }
      cat(warning_style("\nChoix invalide. Veuillez entrer un nombre entre 0 et 5.\n"))
    }
    
    if (choix == 0) {
      cat(info_style("\nRetour au menu principal...\n"))
      break
    } else if (choix == 5) {
      # Gestion du nombre personnalis√©
      repeat {
        nombre_perso <- suppressWarnings(as.integer(readline(question_style("\nEntrez le nombre de cryptos √† visualiser (maximum 50) : "))))
        
        if (!is.na(nombre_perso) && nombre_perso > 0 && nombre_perso <= 50) {
          temps_estime <- ceiling(nombre_perso / 4) * 1.5
          cat(warning_style(paste0("\nTemps d'attente estim√© : ", temps_estime, " minutes\n")))
          
          repeat {
            choix_confirme <- tolower(readline(question_style("Voulez-vous continuer ? (oui/non) : ")))
            if (choix_confirme %in% c("oui", "non")) break
            cat(warning_style("\nVeuillez r√©pondre uniquement par 'oui' ou 'non'.\n"))
          }
          
          if (choix_confirme == "oui") {
            top_cryptos <- get_top_cryptos()
            if (!is.null(top_cryptos)) {
              top_ids <- head(top_cryptos$id, nombre_perso)
              afficher_social_metrics(top_ids)
            }
          }
          break
        } else {
          cat(warning_style("\nNombre invalide. Veuillez entrer un nombre entre 1 et 50.\n"))
        }
      }
    } else if (choix >= 1 && choix <= 4) {
      nombre_cryptos <- choix * 4
      top_cryptos <- get_top_cryptos()
      if (!is.null(top_cryptos)) {
        top_ids <- head(top_cryptos$id, nombre_cryptos)
        afficher_social_metrics(top_ids)
      }
    }
  }
}

# Affichage des metrics sociales
afficher_social_metrics <- function(ids) {
  social_data_list <- list()
  sentiment_votes_raw <- numeric()  # Pour stocker les valeurs brutes des sentiments
  
  for (i in seq_along(ids)) {
    id <- ids[i]
    cat(info_style(paste0("\nT√©l√©chargement des donn√©es pour : ", id, "...\n")))
    
    social_data <- get_social_data(id)
    
    if (!is.null(social_data)) {
      sentiment_votes_raw <- c(sentiment_votes_raw, social_data$sentiment_votes_up_percentage)
      
      social_data_list[[i]] <- data.frame(
        name = social_data$name,
        symbol = social_data$symbol,
        twitter_followers = format_large_number(social_data$community_data$twitter_followers),
        sentiment_votes_up = paste0(round(social_data$sentiment_votes_up_percentage, 2), "%"),
        sentiment_votes_down = paste0(round(social_data$sentiment_votes_down_percentage, 2), "%")
      )
    }
    
    if (i %% 4 == 0 && i < length(ids)) {
      cat(warning_style("\nPause de 61 secondes pour respecter les limites de l'API...\n"))
      Sys.sleep(61)
    } else {
      Sys.sleep(2)
    }
  }
  
  cat("\nR√©sultats :\n\n")
  social_data_table <- do.call(rbind, social_data_list)
  print(social_data_table)
  cat("\n")
  
  # Calcul et affichage du sentiment global
  mood_global <- mean(sentiment_votes_raw)
  cat(section_title_style("Analyse du Sentiment Global :\n\n"))
  cat("Mood Global : ", highlight_style(paste0(round(mood_global, 2), "%\n\n")))
  
  # Analyse du sentiment
  sentiment_message <- if (mood_global > 70) {
    success_style("Le sentiment est hyper positif - Bull Market en vue ! üöÄ")
  } else if (mood_global > 50) {
    success_style("Le sentiment est globalement positif üìà")
  } else if (mood_global > 30) {
    warning_style("Le sentiment est globalement n√©gatif üìâ")
  } else {
    error_style("Le sentiment est hyper n√©gatif - Bear Market en vue ! üêª")
  }
  
  cat(sentiment_message, "\n\n")
}

# Ex√©cution du menu principal
social_main_menu()
